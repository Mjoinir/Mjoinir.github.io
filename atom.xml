<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[Mjolnir]]></title>
  <subtitle><![CDATA[这么菜还不努力，和咸鱼有什么区别。]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://guoyuxiang.com//"/>
  <updated>2015-09-12T08:48:48.362Z</updated>
  <id>http://guoyuxiang.com//</id>
  
  <author>
    <name><![CDATA[Mjolnir]]></name>
    <email><![CDATA[me@guoyuxiang.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[动态规划]]></title>
    <link href="http://guoyuxiang.com/2015/09/12/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    <id>http://guoyuxiang.com/2015/09/12/动态规划/</id>
    <published>2015-09-12T08:47:48.000Z</published>
    <updated>2015-09-12T08:48:48.362Z</updated>
    <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2084" target="_blank" rel="external">hdu 2084 数塔</a></p>
<h2 id="<!-￼0->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n,a;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">        <span class="keyword">int</span> num[<span class="number">101</span>][<span class="number">101</span>];</span><br><span class="line">        <span class="built_in">memset</span>(num,<span class="number">0</span>,<span class="keyword">sizeof</span>(num));</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                 <span class="built_in">cin</span>&gt;&gt;num[i][j];</span><br><span class="line">                 num[i][j]+=max(num[i-<span class="number">1</span>][j-<span class="number">1</span>],num[i-<span class="number">1</span>][j]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            sum=max(sum,num[n][i]);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure></h2><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2018" target="_blank" rel="external">hdu 2018 母牛的故事</a></p>
<h2 id="<!-￼1->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ind[<span class="number">56</span>];</span><br><span class="line">    ind[<span class="number">1</span>]=<span class="number">1</span>;ind[<span class="number">2</span>]=<span class="number">2</span>;ind[<span class="number">3</span>]=<span class="number">3</span>;ind[<span class="number">4</span>]=<span class="number">4</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">5</span>;i&lt;=<span class="number">55</span>;i++)</span><br><span class="line">        ind[i]=ind[i-<span class="number">1</span>]+ind[i-<span class="number">3</span>];</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&amp;&amp;n)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ind[n]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2044" target="_blank" rel="external">hdu 2044 一只小蜜蜂</a></p>
<h2 id="<!-￼2->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;fstream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  </span><br><span class="line">   <span class="keyword">long</span> <span class="keyword">long</span> ind[<span class="number">50</span>][<span class="number">50</span>];</span><br><span class="line">   <span class="built_in">memset</span>(ind,<span class="number">0</span>,<span class="keyword">sizeof</span>(ind));</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;<span class="number">50</span>;k++)</span><br><span class="line">   &#123;</span><br><span class="line">     ind[k][k]=ind[k][k+<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> i=k+<span class="number">2</span>;i&lt;<span class="number">50</span>;i++)</span><br><span class="line">    ind[k][i]=ind[k][i-<span class="number">1</span>]+ind[k][i-<span class="number">2</span>];</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ind[a][b]&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2041" target="_blank" rel="external">hdu 2041 超级楼梯</a></p>
<h2 id="<!-￼3->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;fstream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> <span class="built_in">floor</span>[<span class="number">41</span>];</span><br><span class="line">  <span class="built_in">floor</span>[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">  <span class="built_in">floor</span>[<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;<span class="number">41</span>;i++)</span><br><span class="line">    <span class="built_in">floor</span>[i]=<span class="built_in">floor</span>[i-<span class="number">1</span>]+<span class="built_in">floor</span>[i-<span class="number">2</span>];</span><br><span class="line">  <span class="keyword">int</span> t;</span><br><span class="line">  <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">  <span class="keyword">while</span>(t--)</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">int</span> m;</span><br><span class="line">      <span class="built_in">cin</span>&gt;&gt;m;</span><br><span class="line">      <span class="built_in">cout</span>&lt;&lt;<span class="built_in">floor</span>[m]&lt;&lt;endl;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2050" target="_blank" rel="external">hdu 2050 折线分割平面</a></p>
<h2 id="<!-￼4->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;fstream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  <span class="keyword">long</span> <span class="keyword">long</span> <span class="built_in">floor</span>[<span class="number">10005</span>];</span><br><span class="line">  <span class="built_in">floor</span>[<span class="number">1</span>]=<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;<span class="number">10005</span>;i++)</span><br><span class="line">    <span class="built_in">floor</span>[i]=<span class="built_in">floor</span>[i-<span class="number">1</span>]+<span class="number">4</span>*(i-<span class="number">1</span>)+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">int</span> t;</span><br><span class="line">  <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">  <span class="keyword">while</span>(t--)</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">int</span> m;</span><br><span class="line">      <span class="built_in">cin</span>&gt;&gt;m;</span><br><span class="line">      <span class="built_in">cout</span>&lt;&lt;<span class="built_in">floor</span>[m]&lt;&lt;endl;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><p><a href="http://codeforces.com/problemset/problem/429/B" target="_blank" rel="external">CF 429B B.Working out</a></p>
<h2 id="<!-￼5->"><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#define INF 0x3f3f3f3f</span><br><span class="line">using namespace std;</span><br><span class="line">int dp<span class="comment">[4]</span><span class="comment">[1005]</span><span class="comment">[1005]</span>;</span><br><span class="line">   int maps<span class="comment">[1005]</span><span class="comment">[1005]</span>;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int n,m;</span><br><span class="line">   cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    int maxn=-1;</span><br><span class="line">    memset(maps,0,sizeof(maps));</span><br><span class="line">    memset(dp,0,sizeof(dp));</span><br><span class="line">    for(int i=1;i&lt;=n;i++)</span><br><span class="line">    for(int j=1;j&lt;=m;j++)</span><br><span class="line">        cin&gt;&gt;maps<span class="comment">[i]</span><span class="comment">[j]</span>;</span><br><span class="line">  for(int i=1;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for(int j=1;j&lt;=m;j++)</span><br><span class="line">        dp<span class="comment">[0]</span><span class="comment">[i]</span><span class="comment">[j]</span>=max(dp<span class="comment">[0]</span><span class="comment">[i-1]</span><span class="comment">[j]</span>,dp<span class="comment">[0]</span><span class="comment">[i]</span><span class="comment">[j-1]</span>)+maps<span class="comment">[i]</span><span class="comment">[j]</span>;</span><br><span class="line">       for(int j=m;j&gt;=1;j--)</span><br><span class="line">        dp<span class="comment">[1]</span><span class="comment">[i]</span><span class="comment">[j]</span>=max(dp<span class="comment">[1]</span><span class="comment">[i-1]</span><span class="comment">[j]</span>,dp<span class="comment">[1]</span><span class="comment">[i]</span><span class="comment">[j+1]</span>)+maps<span class="comment">[i]</span><span class="comment">[j]</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i=n;i&gt;=1;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        for(int j=1;j&lt;=m;j++)</span><br><span class="line">        dp<span class="comment">[2]</span><span class="comment">[i]</span><span class="comment">[j]</span>=max(dp<span class="comment">[2]</span><span class="comment">[i+1]</span><span class="comment">[j]</span>,dp<span class="comment">[2]</span><span class="comment">[i]</span><span class="comment">[j-1]</span>)+maps<span class="comment">[i]</span><span class="comment">[j]</span>;</span><br><span class="line">        for(int j=m;j&gt;=1;j--)</span><br><span class="line">        dp<span class="comment">[3]</span><span class="comment">[i]</span><span class="comment">[j]</span>=max(dp<span class="comment">[3]</span><span class="comment">[i+1]</span><span class="comment">[j]</span>,dp<span class="comment">[3]</span><span class="comment">[i]</span><span class="comment">[j+1]</span>)+maps<span class="comment">[i]</span><span class="comment">[j]</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     for(int i=0;i&lt;=n+1;i++)   //边界无效</span><br><span class="line">            for(int k=0;k&lt;4;k++)</span><br><span class="line">                dp<span class="comment">[k]</span><span class="comment">[i]</span><span class="comment">[0]</span>=dp<span class="comment">[k]</span><span class="comment">[i]</span><span class="comment">[m+1]</span>=-INF;</span><br><span class="line">       for(int j=0;j&lt;=m+1;j++)</span><br><span class="line">            for(int k=0;k&lt;4;k++)</span><br><span class="line">                dp<span class="comment">[k]</span><span class="comment">[0]</span><span class="comment">[j]</span>=dp<span class="comment">[k]</span><span class="comment">[n+1]</span><span class="comment">[j]</span>=-INF;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)//考虑两种</span><br><span class="line">    for(int j=1;j&lt;=m;j++)</span><br><span class="line">        maxn=max(max(maxn,dp<span class="comment">[0]</span><span class="comment">[i]</span><span class="comment">[j-1]</span>+dp<span class="comment">[1]</span><span class="comment">[i-1]</span><span class="comment">[j]</span>+dp<span class="comment">[2]</span><span class="comment">[i+1]</span><span class="comment">[j]</span>+dp<span class="comment">[3]</span><span class="comment">[i]</span><span class="comment">[j+1]</span>),dp<span class="comment">[0]</span><span class="comment">[i-1]</span><span class="comment">[j]</span>+dp<span class="comment">[1]</span><span class="comment">[i]</span><span class="comment">[j+1]</span>+dp<span class="comment">[2]</span><span class="comment">[i]</span><span class="comment">[j-1]</span>+dp<span class="comment">[3]</span><span class="comment">[i+1]</span><span class="comment">[j]</span>);</span><br><span class="line">        cout&lt;&lt;maxn&lt;&lt;endl;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><p><a href="http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemId=5170" target="_blank" rel="external">zoj 3747 Attack on Titans</a><br>dp递推。</p>
<p>先把问题都转化成至多连续的情况：至多k个连续R,至多n个连续G情况 【减去】至多k个连续R，至多（m-1）个连续G情况。</p>
<p>至多的情况比较好考虑，至少的情况比较复杂，比赛的时候一直落在至少的圈子里，没想到用递推。</p>
<p>//dp[i][0]表示第i个为G，至多有u个连续G，至多有v个连续R的个数  //这里的u和v固定</p>
<p>//dp[i][1]表示第i个为R，….</p>
<p> //d[i][2]表示第i个为P，….</p>
<p>当第i个为P的情况很好考虑不会对连续的R和G产生影响，dp[i][2]=dp[i-1][0]+dp[i-1][1]+dp[i-1][2];</p>
<p>当第i个为G时</p>
<p>如果i&lt;=u 时 无论怎么放都不会超过u个连续的G这个限制条件 所以dp[i][0]=dp[i-1][0]+dp[i-1][1]+dp[i-1][2];</p>
<p>如果i=u+1时，要排除前u个都放了G的情况，dp[i][0]=dp[i-1][0]+dp[i-1][1]+dp[i-1][2]-1;</p>
<p>如果i&gt;u+1时，要排除从i-1到i-u位置都放了G的情况，dp[i][0]=dp[i-1][0]+dp[i-1][1]+dp[i-1][2]-dp[i-u-1][1]-dp[i-u-1][2];</p>
<p>当第i个为R时</p>
<p>如果i&lt;=v 时 无论怎么放都不会超过u个连续的G这个限制条件 所以dp[i][1]=dp[i-1][0]+dp[i-1][1]+dp[i-1][2];</p>
<p>如果i=v+1时，要排除前v个都放了G的情况，dp[i][1]=dp[i-1][0]+dp[i-1][1]+dp[i-1][2]-1;</p>
<p>如果i&gt;v+1时，要排除从i-1到i-v位置都放了G的情况，dp[i][1]=dp[i-1][0]+dp[i-1][1]+dp[i-1][2]-dp[i-v-1][0]-dp[i-v-1][2];</p>
<h2 id="<!-￼6->"><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">#<span class="keyword">include</span> &lt;iostream&gt;</span><br><span class="line">#define <span class="keyword">M</span> 1000000007</span><br><span class="line">#<span class="keyword">include</span>&lt;cstring&gt;</span><br><span class="line">#<span class="keyword">include</span>&lt;cstdio&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">long long dp[1000005][3];</span><br><span class="line">long long <span class="keyword">n</span>,<span class="keyword">m</span>,k,<span class="keyword">u</span>,v;</span><br><span class="line">long long cal()</span><br><span class="line">&#123;</span><br><span class="line">    dp[0][0]=0; </span><br><span class="line">    dp[0][1]=1;  </span><br><span class="line">    dp[0][2]=0; </span><br><span class="line">    <span class="keyword">for</span>(int i=1;i&lt;=<span class="keyword">n</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        long long <span class="keyword">sum</span>=(dp[i-1][0]+dp[i-1][1]+dp[i-1][2])%<span class="keyword">M</span>;</span><br><span class="line">        dp[i][2]=<span class="keyword">sum</span>;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;=<span class="keyword">u</span>)   dp[i][0]=<span class="keyword">sum</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(i==<span class="keyword">u</span>+1)  dp[i][0]=<span class="keyword">sum</span>-1;</span><br><span class="line">        <span class="keyword">else</span>      dp[i][0]=<span class="keyword">sum</span>-dp[i-<span class="keyword">u</span>-1][1]-dp[i-<span class="keyword">u</span>-1][2];</span><br><span class="line">        <span class="keyword">if</span>(i&lt;=v)   dp[i][1]=<span class="keyword">sum</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(i==v+1)  dp[i][1]=<span class="keyword">sum</span>-1;</span><br><span class="line">        <span class="keyword">else</span>      dp[i][1]=<span class="keyword">sum</span>-dp[i-v-1][0]-dp[i-v-1][2];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (dp[<span class="keyword">n</span>][0]+dp[<span class="keyword">n</span>][1]+dp[<span class="keyword">n</span>][2])%<span class="keyword">M</span>;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">while</span>(~scanf(<span class="string">"%lld%lld%lld"</span>,&amp;<span class="keyword">n</span>,&amp;<span class="keyword">m</span>,&amp;k))</span><br><span class="line">      &#123;</span><br><span class="line">          long long ans;</span><br><span class="line">          <span class="keyword">u</span>=<span class="keyword">n</span>,v=k;</span><br><span class="line">          ans=cal();</span><br><span class="line">          <span class="keyword">u</span>=<span class="keyword">m</span>-1;</span><br><span class="line">          ans=((ans-cal())%<span class="keyword">M</span>+<span class="keyword">M</span>)%<span class="keyword">M</span>;</span><br><span class="line">          printf(<span class="string">"%lld\n"</span>,ans);  </span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2>]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2084" target="_blank" rel="external">hdu 2084 数塔</a></p>
<h2 id="<!-￼0->"><figure clas]]>
    </summary>
    
      <category term="动态规划" scheme="http://guoyuxiang.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="动态规划" scheme="http://guoyuxiang.com/categories/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2014 ACM/ICPC 西安赛区网络赛]]></title>
    <link href="http://guoyuxiang.com/2015/09/09/2014-ACM-ICPC-%E8%A5%BF%E5%AE%89%E8%B5%9B%E5%8C%BA%E7%BD%91%E7%BB%9C%E8%B5%9B/"/>
    <id>http://guoyuxiang.com/2015/09/09/2014-ACM-ICPC-西安赛区网络赛/</id>
    <published>2015-09-09T07:28:00.000Z</published>
    <updated>2015-09-09T11:28:15.738Z</updated>
    <content type="html"><![CDATA[<h2 id="1001_Post_Robot_hdu5007"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5007" target="_blank" rel="external">1001 Post Robot    hdu5007</a></h2><p>Problem Description<br>DT is a big fan of digital products. He writes posts about technological products almost everyday in his blog.</p>
<p>But there is such few comments of his posts that he feels depressed all the day. As his best friend and an excellent programmer, DT asked you to help make his blog look more popular. He is so warm that you have no idea how to refuse. But you are unwilling to read all of his boring posts word by word. So you decided to write a script to comment below his posts automatically.</p>
<p>After observation, you found words “Apple” appear everywhere in his posts. After your counting, you concluded that “Apple”, “iPhone”, “iPod”, “iPad” are the most high-frequency words in his blog. Once one of these words were read by your smart script, it will make a comment “MAI MAI MAI!”, and go on reading the post. </p>
<p>In order to make it more funny, you, as a fan of Sony, also want to make some comments about Sony. So you want to add a new rule to the script: make a comment “SONY DAFA IS GOOD!” when “Sony” appears.<br><a id="more"></a><br>Input<br>A blog article described above, which contains only printable characters(whose ASCII code is between 32 and 127), CR(ASCII code 13, ‘\r’ in C/C++), LF(ASCII code 10, ‘\n’ in C/C++), please process input until EOF. Note all characters are case sensitive.</p>
<p>The size of the article does not exceed 8KB.</p>
<p>Output<br>Output should contains comments generated by your script, one per line.</p>
<p>Sample Input<br>Apple bananaiPad lemon ApplepiSony<br>233<br>Tim cook is doubi from Apple<br>iPhoneipad<br>iPhone30 is so biiiiiiig Microsoft<br>makes good App.</p>
<p>Sample Output<br>MAI MAI MAI!<br>MAI MAI MAI!<br>MAI MAI MAI!<br>SONY DAFA IS GOOD!<br>MAI MAI MAI!<br>MAI MAI MAI!<br>MAI MAI MAI!</p>
<h3 id="题解">题解</h3><p>把苹果产品换成买买买，索尼换成大法好。一行一行读入，从前到后搜索一遍就好。开始想复杂了、</p>
<h2 id="<!-￼0->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;ctime&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cassert&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;climits&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;deque&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;list&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;set&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;numeric&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iomanip&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;bitset&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;sstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;fstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug puts("-----")</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> eps (1e-8)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf (1&lt;&lt;30)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> INF (1ll&lt;&lt;62)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> s,s1;</span><br><span class="line"><span class="keyword">while</span>(getline(<span class="built_in">cin</span>,s))</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.size();i++)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">if</span>(i+<span class="number">5</span>&lt;s.size())</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span>(s[i]==<span class="string">'i'</span>&amp;&amp;s[i+<span class="number">1</span>]==<span class="string">'P'</span>&amp;&amp;s[i+<span class="number">2</span>]==<span class="string">'h'</span>&amp;&amp;s[i+<span class="number">3</span>]==<span class="string">'o'</span>&amp;&amp;s[i+<span class="number">4</span>]==<span class="string">'n'</span>&amp;&amp;s[i+<span class="number">5</span>]==<span class="string">'e'</span>) <span class="built_in">cout</span>&lt;&lt;<span class="string">"MAI MAI MAI!"</span>&lt;&lt;endl;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span>(i+<span class="number">4</span>&lt;s.size())</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span>(s[i]==<span class="string">'A'</span>&amp;&amp;s[i+<span class="number">1</span>]==<span class="string">'p'</span>&amp;&amp;s[i+<span class="number">2</span>]==<span class="string">'p'</span>&amp;&amp;s[i+<span class="number">3</span>]==<span class="string">'l'</span>&amp;&amp;s[i+<span class="number">4</span>]==<span class="string">'e'</span>) <span class="built_in">cout</span>&lt;&lt;<span class="string">"MAI MAI MAI!"</span>&lt;&lt;endl;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span>(i+<span class="number">3</span>&lt;s.size())</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span>((s[i]==<span class="string">'i'</span>&amp;&amp;s[i+<span class="number">1</span>]==<span class="string">'P'</span>&amp;&amp;s[i+<span class="number">2</span>]==<span class="string">'o'</span>&amp;&amp;s[i+<span class="number">3</span>]==<span class="string">'d'</span>)||(s[i]==<span class="string">'i'</span>&amp;&amp;s[i+<span class="number">1</span>]==<span class="string">'P'</span>&amp;&amp;s[i+<span class="number">2</span>]==<span class="string">'a'</span>&amp;&amp;s[i+<span class="number">3</span>]==<span class="string">'d'</span>)) <span class="built_in">cout</span>&lt;&lt;<span class="string">"MAI MAI MAI!"</span>&lt;&lt;endl;</span><br><span class="line">           <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">'S'</span>&amp;&amp;s[i+<span class="number">1</span>]==<span class="string">'o'</span>&amp;&amp;s[i+<span class="number">2</span>]==<span class="string">'n'</span>&amp;&amp;s[i+<span class="number">3</span>]==<span class="string">'y'</span>)  <span class="built_in">cout</span>&lt;&lt;<span class="string">"SONY DAFA IS GOOD!"</span>&lt;&lt;endl;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="E-_Game"><a href="http://acm.bnu.edu.cn/bnuoj/problem_show.php?pid=43728" target="_blank" rel="external">E. Game</a></h2><p>Here is a game for two players. The rule of the game is described below: </p>
<p>● In the beginning of the game, there are a lot of piles of beads.</p>
<p>● Players take turns to play. Each turn, player choose a pile i and remove some (at least one) beads from it. Then he could do nothing or split pile i into two piles with a beads and b beads.(a,b &gt; 0 and a + b equals to the number of beads of pile i after removing) </p>
<p>● If after a player’s turn, there is no beads left, the player is the winner.</p>
<p>Suppose that the two players are all very clever and they will use optimal game strategies. Your job is to tell whether the player who plays first can win the game.<br>Input<br>There are multiple test cases. Please process till EOF.</p>
<p>For each test case, the first line contains a postive integer n(n &lt; 105) means there are n piles of beads. The next line contains n postive integer, the i-th postive integer ai(ai &lt; 231) means there are ai beads in the i-th pile.<br>Output<br>For each test case, if the first player can win the game, ouput “Win” and if he can’t, ouput “Lose”<br>Sample Input<br>1<br>1<br>2<br>1 1<br>3<br>1 2 3<br>Sample Output<br>Win<br>Lose<br>Lose</p>
<h3 id="题解-1">题解</h3><p>nim博弈样板题，一直异或。</p>
<h2 id="<!-￼1->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;ctime&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;deque&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;list&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;set&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;numeric&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iomanip&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;bitset&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;sstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;fstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;limits.h&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug "output for debug\n"</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> eps (1e-4)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf (1&lt;&lt;28)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> sqr(x) (x) * (x)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, s, n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        s = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</span><br><span class="line">            s ^= a;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Win\n"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Lose\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="F-_Dice"><a href="http://acm.bnu.edu.cn/bnuoj/problem_show.php?pid=43729" target="_blank" rel="external">F. Dice</a></h2><p>There are 2 special dices on the table. On each face of the dice, a distinct number was written. Consider a1.a2,a3,a4,a5,a6 to be numbers written on top face, bottom face, left face, right face, front face and back face of dice A. Similarly, consider b1.b2,b3,b4,b5,b6 to be numbers on specific faces of dice B. It’s guaranteed that all numbers written on dices are integers no smaller than 1 and no more than 6 while ai ≠ aj and bi ≠ bj for all i ≠ j. Specially, sum of numbers on opposite faces may not be 7.</p>
<p>At the beginning, the two dices may face different(which means there exist some i, ai ≠ bi). Ddy wants to make the two dices look the same from all directions(which means for all i, ai = bi) only by the following four rotation operations.(Please read the picture for more information)</p>
<p>Now Ddy wants to calculate the minimal steps that he has to take to achieve his goal.<br>Input<br>There are multiple test cases. Please process till EOF. </p>
<p>For each case, the first line consists of six integers a1,a2,a3,a4,a5,a6, representing the numbers on dice A. </p>
<p>The second line consists of six integers b1,b2,b3,b4,b5,b6, representing the numbers on dice B.<br>Output<br>For each test case, print a line with a number representing the answer. If there’s no way to make two dices exactly the same, output -1.<br>Sample Input<br>1 2 3 4 5 6<br>1 2 3 4 5 6<br>1 2 3 4 5 6<br>1 2 5 6 4 3<br>1 2 3 4 5 6<br>1 4 2 5 3 6<br>Sample Output<br>0<br>3<br>-1</p>
<h3 id="题解-2">题解</h3><p>一颗筛子，四种转的方式、问你最少转几次。BFS的题，每种情况都有4种方式入列。都pop完还没找到就输出-1；</p>
<h2 id="<!-￼2->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;ctime&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cassert&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;climits&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;deque&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;list&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;set&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;numeric&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iomanip&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;bitset&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;sstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;fstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug puts("-----")</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> eps (1e-8)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf (1&lt;&lt;30)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> INF (1ll&lt;&lt;62)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stdio.h&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string.h&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a1,a2,a3,a4,a5,a6,b1,b2,b3,b4,b5,b6,flag;</span><br><span class="line"><span class="keyword">struct</span> node</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">int</span> x1,x2,x3,x4,x5,x6,step;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">7</span>][<span class="number">7</span>][<span class="number">7</span>][<span class="number">7</span>][<span class="number">7</span>][<span class="number">7</span>];</span><br><span class="line">node now;</span><br><span class="line">node nex;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  vis[a1][a2][a3][a4][a5][a6]=<span class="number">0</span>;</span><br><span class="line">  <span class="built_in">queue</span>&lt;node&gt; q;</span><br><span class="line"></span><br><span class="line">  now.step=<span class="number">0</span>;</span><br><span class="line">  q.push(now);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span>(!q.empty())</span><br><span class="line">  &#123;</span><br><span class="line">    now=q.front();</span><br><span class="line">    q.pop();</span><br><span class="line">    <span class="keyword">if</span>(now.x1==b1&amp;&amp;now.x2==b2&amp;&amp;now.x3==b3&amp;&amp;now.x4==b4&amp;&amp;now.x5==b5&amp;&amp;now.x6==b6)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">cout</span>&lt;&lt;now.step&lt;&lt;endl;</span><br><span class="line">      flag=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    nex.x1=now.x4; nex.x2=now.x3; nex.x3=now.x1;</span><br><span class="line">    nex.x4=now.x2; nex.x5=now.x5; nex.x6=now.x6;</span><br><span class="line">    nex.step=now.step+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(vis[nex.x1][nex.x2][nex.x3][nex.x4][nex.x5][nex.x6])</span><br><span class="line">    &#123;</span><br><span class="line">       vis[nex.x1][nex.x2][nex.x3][nex.x4][nex.x5][nex.x6]=<span class="number">0</span>;</span><br><span class="line">       q.push(nex);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    nex.x1=now.x3; nex.x2=now.x4; nex.x3=now.x2;</span><br><span class="line">    nex.x4=now.x1; nex.x5=now.x5; nex.x6=now.x6;</span><br><span class="line">    nex.step=now.step+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(vis[nex.x1][nex.x2][nex.x3][nex.x4][nex.x5][nex.x6])</span><br><span class="line">    &#123;</span><br><span class="line">       vis[nex.x1][nex.x2][nex.x3][nex.x4][nex.x5][nex.x6]=<span class="number">0</span>;</span><br><span class="line">       q.push(nex);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    nex.x1=now.x6; nex.x2=now.x5; nex.x3=now.x3;</span><br><span class="line">    nex.x4=now.x4; nex.x5=now.x1; nex.x6=now.x2;</span><br><span class="line">    nex.step=now.step+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(vis[nex.x1][nex.x2][nex.x3][nex.x4][nex.x5][nex.x6])</span><br><span class="line">    &#123;</span><br><span class="line">       vis[nex.x1][nex.x2][nex.x3][nex.x4][nex.x5][nex.x6]=<span class="number">0</span>;</span><br><span class="line">       q.push(nex);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    nex.x1=now.x5; nex.x2=now.x6; nex.x3=now.x3;</span><br><span class="line">    nex.x4=now.x4; nex.x5=now.x2; nex.x6=now.x1;</span><br><span class="line">    nex.step=now.step+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(vis[nex.x1][nex.x2][nex.x3][nex.x4][nex.x5][nex.x6])</span><br><span class="line">    &#123;</span><br><span class="line">       vis[nex.x1][nex.x2][nex.x3][nex.x4][nex.x5][nex.x6]=<span class="number">0</span>;</span><br><span class="line">       q.push(nex);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;now.x1&gt;&gt;now.x2&gt;&gt;now.x3&gt;&gt;now.x4&gt;&gt;now.x5&gt;&gt;now.x6&gt;&gt;b1&gt;&gt;b2&gt;&gt;b3&gt;&gt;b4&gt;&gt;b5&gt;&gt;b6)</span><br><span class="line">    &#123;</span><br><span class="line">        flag=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">1</span>,<span class="keyword">sizeof</span> vis);</span><br><span class="line">        bfs();</span><br><span class="line">        <span class="keyword">if</span>(flag) <span class="built_in">cout</span>&lt;&lt;<span class="string">"-1"</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="H-_Number_Sequence"><a href="http://acm.bnu.edu.cn/bnuoj/problem_show.php?pid=43731" target="_blank" rel="external">H. Number Sequence</a></h2><p>There is a special number sequence which has n+1 integers. For each number in sequence, we have two rules:</p>
<p>● ai ∈ [0,n]<br>● ai ≠ aj( i ≠ j )</p>
<p>For sequence a and sequence b, the integrating degree t is defined as follows(“⊕” denotes exclusive or):</p>
<p>t = (a0 ⊕ b0) + (a1 ⊕ b1) +···+ (an ⊕ bn)</p>
<p>(sequence B should also satisfy the rules described above)</p>
<p>Now give you a number n and the sequence a. You should calculate the maximum integrating degree t and print the sequence b.<br>Input<br>There are multiple test cases. Please process till EOF. </p>
<p>For each case, the first line contains an integer n(1 ≤ n ≤ 105), The second line contains a0,a1,a2,…,an.<br>Output<br>For each case, output two lines.The first line contains the maximum integrating degree t. The second line contains n+1 integers b0,b1,b2,…,bn. There is exactly one space between bi and bi+1(0 ≤ i ≤ n - 1). Don’t ouput any spaces after bn.<br>Sample Input<br>4<br>2 0 1 4 3<br>Sample Output<br>20<br>1 0 2 3 4</p>
<h3 id="题解-3">题解</h3><p>两两异或最多的1。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;ctime&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;deque&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;list&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;set&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;numeric&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iomanip&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;bitset&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;sstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;fstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;limits.h&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug "output for debug\n"</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> eps (1e-4)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf (1&lt;&lt;28)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> sqr(x) (x) * (x)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">101000</span>], vis[<span class="number">101000</span>];</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;n) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(vis, -<span class="number">1</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">        <span class="keyword">int</span> m = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(m &lt; n)</span><br><span class="line">            m = m * <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = n; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i &lt;= m / <span class="number">2</span>)</span><br><span class="line">                m /= <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(vis[i] == -<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                vis[i] = i ^ m;</span><br><span class="line">                vis[i ^ m] = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> ans = n * (n + <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>, vis[a[i]]);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, vis[a[n]]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="1001_Post_Robot_hdu5007"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5007">1001 Post Robot    hdu5007</a></h2><p>Problem Description<br>DT is a big fan of digital products. He writes posts about technological products almost everyday in his blog.</p>
<p>But there is such few comments of his posts that he feels depressed all the day. As his best friend and an excellent programmer, DT asked you to help make his blog look more popular. He is so warm that you have no idea how to refuse. But you are unwilling to read all of his boring posts word by word. So you decided to write a script to comment below his posts automatically.</p>
<p>After observation, you found words “Apple” appear everywhere in his posts. After your counting, you concluded that “Apple”, “iPhone”, “iPod”, “iPad” are the most high-frequency words in his blog. Once one of these words were read by your smart script, it will make a comment “MAI MAI MAI!”, and go on reading the post. </p>
<p>In order to make it more funny, you, as a fan of Sony, also want to make some comments about Sony. So you want to add a new rule to the script: make a comment “SONY DAFA IS GOOD!” when “Sony” appears.<br>]]>
    
    </summary>
    
      <category term="网络赛" scheme="http://guoyuxiang.com/tags/%E7%BD%91%E7%BB%9C%E8%B5%9B/"/>
    
      <category term="网络赛" scheme="http://guoyuxiang.com/categories/%E7%BD%91%E7%BB%9C%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2014 ACM/ICPC 北京赛区网络赛]]></title>
    <link href="http://guoyuxiang.com/2015/09/09/2014-ACM-ICPC-%E5%8C%97%E4%BA%AC%E8%B5%9B%E5%8C%BA%E7%BD%91%E7%BB%9C%E8%B5%9B/"/>
    <id>http://guoyuxiang.com/2015/09/09/2014-ACM-ICPC-北京赛区网络赛/</id>
    <published>2015-09-08T20:42:31.000Z</published>
    <updated>2015-09-09T07:20:50.766Z</updated>
    <content type="html"><![CDATA[<h2 id="Problem_D_HDU_5035_Delivery"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5035" target="_blank" rel="external">Problem D    HDU 5035    Delivery</a></h2><p>Problem Description<br>Today, Matt goes to delivery a package to Ted. When he arrives at the post office, he finds there are N clerks numbered from 1 to N. All the clerks are busy but there is no one else waiting in line. Matt will go to the first clerk who has finished the service for the current customer. The service time ti for clerk i is a random variable satisfying distribution p(ti = t) = kie^(-kit) where e represents the base of natural logarithm and ki represents the efficiency of clerk i. Besides, accroding to the bulletin board, Matt can know the time ci which clerk i has already spent on the current customer. Matt wants to know the expected time he needs to wait until finishing his posting given current circumstances.<br><a id="more"></a><br>Input<br>The first line of the input contains an integer T,denoting the number of testcases. Then T test cases follow.</p>
<p>For each test case, the first line contains one integer:N(1&lt;=N&lt;=1000)</p>
<p>The second line contains N real numbers. The i-th real number ki(0&lt;=ki&lt;=1) indicates the efficiency of clerk i.</p>
<p>The third line contains N integers. The i-th integer indicates the time ci(0&lt;=ci&lt;=1000) which clerk i has already spent on the current customer.</p>
<p>Output<br>For each test case, output one line “Case #x: y”, where x is the case number (starting from 1), y is the answer which should be rounded to 6 decimal places.</p>
<p>Sample Input<br>2<br>2<br>0.5 0.4<br>2 3<br>3<br>0.1 0.1 0.1<br>3 2 5</p>
<p>Sample Output<br>Case #1: 3.333333<br>Case #2: 13.333333</p>
<h3 id="题解">题解</h3><p>猜公式的题，<br>1.首先，因为每个服务员是独立的。我们可以先求出等待时间的期望为 1/ (∑ki);<br>2.接着，我们求出期望的服务时间。对于每个服务员，选择他的概率为 ki /(∑ki),该服务员期望的服务时间为 1 / ki; 这样，期望的服务时间为： ∑（ki / (∑ki) * 1 / ki） = N / (∑ki)<br>3.所以总的的期望时间为：(n+1)/ (∑ki)</p>
<h2 id="<!-￼0->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;ctime&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cassert&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;climits&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;deque&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;list&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;set&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;numeric&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iomanip&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;bitset&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;sstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;fstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug puts("-----")</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> eps (1e-8)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf (1&lt;&lt;30)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> INF (1ll&lt;&lt;62)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">double</span> x,sum=<span class="number">0.0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;x);</span><br><span class="line">            sum+=x;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line"></span><br><span class="line">           <span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;x);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: %.6f\n"</span>,i,(n+<span class="number">1</span>)/sum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="Problem_G_HDU_5038_Grade"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5038" target="_blank" rel="external">Problem G    HDU 5038    Grade</a></h2><p>Problem Description<br>Ted is a employee of Always Cook Mushroom (ACM). His boss Matt gives him a pack of mushrooms and ask him to grade each mushroom according to its weight. Suppose the weight of a mushroom is w, then it’s grade s is </p>
<p>s = 10000 - (100 - w)^2</p>
<p>What’s more, Ted also has to report the mode of the grade of these mushrooms. The mode is the value that appears most often. Mode may not be unique. If not all the value are the same but the frequencies of them are the same, there is no mode.</p>
<p>Input<br>The first line of the input contains an integer T, denoting the number of testcases. Then T test cases follow.</p>
<p>The first line of each test cases contains one integers N (1&lt;=N&lt;=10^6),denoting the number of the mushroom.</p>
<p>The second line contains N integers, denoting the weight of each mushroom. The weight is greater than 0, and less than 200.</p>
<p>Output<br>For each test case, output 2 lines.</p>
<p>The first line contains “Case #x:”, where x is the case number (starting from 1) </p>
<p>The second line contains the mode of the grade of the given mushrooms. If there exists multiple modes, output them in ascending order. If there exists no mode, output “Bad Mushroom”.</p>
<p>Sample Input<br>3<br>6<br>100 100 100 99 98 101<br>6<br>100 100 100 99 99 101<br>6<br>100 100 98 99 99 97</p>
<p>Sample Output<br>Case #1:<br>10000<br>Case #2:<br>Bad Mushroom<br>Case #3:<br>9999 10000</p>
<h3 id="题解-1">题解</h3><p>这道题其实就是简单的求众数的一道水题，开始的时候读错题意了。输入一堆数，每个数映射到一个数，看看那个数出现次数多。特判出现次数都一样多就好。</p>
<h2 id="<!-￼1->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;ctime&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cassert&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;climits&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;deque&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;list&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;set&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;numeric&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iomanip&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;bitset&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;sstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;fstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug puts("-----")</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> eps (1e-8)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf (1&lt;&lt;30)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> INF (1ll&lt;&lt;62)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">10005</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> x)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">10000</span>-(<span class="number">100</span>-x)*(<span class="number">100</span>-x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n,sum=<span class="number">0</span>,flag=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="built_in">memset</span>(num,<span class="number">0</span>,<span class="keyword">sizeof</span> num);</span><br><span class="line">        <span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        <span class="keyword">while</span>(n--)</span><br><span class="line">        &#123;</span><br><span class="line">           <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">           <span class="keyword">if</span>(!num[fun(x)]) sum++;</span><br><span class="line">           num[fun(x)]++;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="built_in">printf</span>(<span class="string">"Case #%d:\n"</span>,i);</span><br><span class="line">        <span class="keyword">int</span> maxn=-<span class="number">1</span>,maxz;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">10000</span>;k++)</span><br><span class="line">       maxn=max(maxn,num[k]);</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">10000</span>;k++)</span><br><span class="line">        <span class="keyword">if</span>(num[k]==maxn)</span><br><span class="line">        v.push_back(k);</span><br><span class="line">        <span class="keyword">if</span>(sum==<span class="number">1</span>)  flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(sum&gt;<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">10000</span>;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(num[k]&amp;&amp;num[k]!=maxn)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)  <span class="built_in">cout</span>&lt;&lt;<span class="string">"Bad Mushroom"</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> j;</span><br><span class="line">            <span class="keyword">for</span>( j=<span class="number">0</span>;j&lt;v.size()-<span class="number">1</span>;j++)</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;v[j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;v[j]&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Problem_D_HDU_5035_Delivery"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5035">Problem D    HDU 5035    Delivery</a></h2><p>Problem Description<br>Today, Matt goes to delivery a package to Ted. When he arrives at the post office, he finds there are N clerks numbered from 1 to N. All the clerks are busy but there is no one else waiting in line. Matt will go to the first clerk who has finished the service for the current customer. The service time ti for clerk i is a random variable satisfying distribution p(ti = t) = kie^(-kit) where e represents the base of natural logarithm and ki represents the efficiency of clerk i. Besides, accroding to the bulletin board, Matt can know the time ci which clerk i has already spent on the current customer. Matt wants to know the expected time he needs to wait until finishing his posting given current circumstances.<br>]]>
    
    </summary>
    
      <category term="网络赛" scheme="http://guoyuxiang.com/tags/%E7%BD%91%E7%BB%9C%E8%B5%9B/"/>
    
      <category term="题解" scheme="http://guoyuxiang.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="网络赛" scheme="http://guoyuxiang.com/categories/%E7%BD%91%E7%BB%9C%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[bestcoder round #28]]></title>
    <link href="http://guoyuxiang.com/2015/09/07/bestcoder-round-28/"/>
    <id>http://guoyuxiang.com/2015/09/07/bestcoder-round-28/</id>
    <published>2015-09-07T13:22:14.000Z</published>
    <updated>2015-09-07T13:32:46.558Z</updated>
    <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5166" target="_blank" rel="external">1001 Missing number</a><br>Problem Description<br>There is a permutation without two numbers in it, and now you know what numbers the permutation has. Please find the two numbers it lose.<br><a id="more"></a><br>Input<br>There is a number T shows there are T test cases below. (T≤10)<br>For each test case , the first line contains a integers n , which means the number of numbers the permutation has. In following a line , there are n distinct postive integers.(1≤n≤1,000)</p>
<p>Output<br>For each case output two numbers , small number first.</p>
<p>Sample Input<br>2<br>3<br>3 4 5<br>1<br>1</p>
<p>Sample Output<br>1 2<br>2 3</p>
<h3 id="题解">题解</h3><p>给个N的排列，问你缺少哪两个，开个数组记录有没有出现过，就两个没有出现，所以两个for+break就好</p>
<h2 id="<!-￼0->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;ctime&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cassert&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;climits&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;deque&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;list&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;set&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;numeric&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iomanip&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;bitset&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;sstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;fstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug puts("-----")</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> eps (1e-8)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf (1&lt;&lt;30)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> INF (1ll&lt;&lt;62)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> n,x;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> num[n+<span class="number">3</span>];</span><br><span class="line">    <span class="built_in">memset</span>(num,<span class="number">0</span>,<span class="keyword">sizeof</span> num);</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">       num[x]=<span class="number">1</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line">   <span class="keyword">for</span>( i=<span class="number">1</span>;i&lt;=n+<span class="number">2</span>;i++)</span><br><span class="line">   &#123;</span><br><span class="line">        <span class="keyword">if</span>(!num[i])    &#123;<span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>;<span class="keyword">break</span>;&#125;</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="keyword">for</span>( i++;i&lt;=n+<span class="number">2</span>;i++)</span><br><span class="line">   &#123;</span><br><span class="line">        <span class="keyword">if</span>(!num[i])    &#123;<span class="built_in">cout</span>&lt;&lt;i&lt;&lt;endl;<span class="keyword">break</span>;&#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="1002_Fibonacci"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5167" target="_blank" rel="external">1002 Fibonacci</a></h2><p>Problem Description<br>Following is the recursive definition of Fibonacci sequence:<br>Fi=⎧⎩⎨01Fi−1+Fi−2i = 0i = 1i &gt; 1</p>
<p>Now we need to check whether a number can be expressed as the product of numbers in the Fibonacci sequence.</p>
<p>Input<br>There is a number T shows there are T test cases below. (T≤100,000)<br>For each test case , the first line contains a integers n , which means the number need to be checked.<br>0≤n≤1,000,000,000</p>
<p>Output<br>For each case output “Yes” or “No”.</p>
<p>Sample Input<br>3<br>4<br>17<br>233</p>
<p>Sample Output<br>Yes<br>No<br>Yes</p>
<h3 id="题解-1">题解</h3><p>第一眼觉得没法做，因为一个数可以由数列里的任何数，任何数量的数组成。但其实就是不超过10^9,本身斐波那契数列46就超过10^9,所以倒着除就好,搜索因子。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;ctime&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cassert&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;climits&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;deque&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;list&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;set&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;numeric&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iomanip&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;bitset&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;sstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;fstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug puts("-----")</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> eps (1e-8)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf (1&lt;&lt;30)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> INF (1ll&lt;&lt;62)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span>  fi[<span class="number">50</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> x)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;=<span class="number">3</span>)  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=x;i++)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(n%fi[i]==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">if</span>(dfs(n/fi[i],i))</span><br><span class="line">               <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">fi[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">fi[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">45</span>;i++)</span><br><span class="line">fi[i]=fi[i-<span class="number">1</span>]+fi[i-<span class="number">2</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> t,n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"> <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">  <span class="keyword">if</span>(dfs(n,<span class="number">45</span>))   <span class="built_in">cout</span>&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;endl;</span><br><span class="line">  <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5166">1001 Missing number</a><br>Problem Description<br>There is a permutation without two numbers in it, and now you know what numbers the permutation has. Please find the two numbers it lose.<br>]]>
    
    </summary>
    
      <category term="bestcoder" scheme="http://guoyuxiang.com/tags/bestcoder/"/>
    
      <category term="题解" scheme="http://guoyuxiang.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="bestcoder" scheme="http://guoyuxiang.com/categories/bestcoder/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CUGBACM-2014鞍山网赛重现]]></title>
    <link href="http://guoyuxiang.com/2015/08/28/CUGBACM-2014%E9%9E%8D%E5%B1%B1%E7%BD%91%E8%B5%9B%E9%87%8D%E7%8E%B0/"/>
    <id>http://guoyuxiang.com/2015/08/28/CUGBACM-2014鞍山网赛重现/</id>
    <published>2015-08-28T03:16:15.000Z</published>
    <updated>2015-08-28T03:36:59.610Z</updated>
    <content type="html"><![CDATA[<h2 id="Problem_D_HDU_5000_Clone"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5000" target="_blank" rel="external">Problem D    HDU 5000    Clone</a></h2><p>Problem Description<br>After eating food from Chernobyl, DRD got a super power: he could clone himself right now! He used this power for several times. He found out that this power was not as perfect as he wanted. For example, some of the cloned objects were tall, while some were short; some of them were fat, and some were thin. </p>
<p>More evidence showed that for two clones A and B, if A was no worse than B in all fields, then B could not survive. More specifically, DRD used a vector v to represent each of his clones. The vector v has n dimensions, representing a clone having N abilities. For the i-th dimension, v[i] is an integer between 0 and T[i], where 0 is the worst and T[i] is the best. For two clones A and B, whose corresponding vectors were p and q, if for 1 &lt;= i &lt;= N, p[i] &gt;= q[i], then B could not survive. </p>
<p>Now, as DRD’s friend, ATM wants to know how many clones can survive at most.<br><a id="more"></a><br>Input<br>The first line contains an integer T, denoting the number of the test cases.<br>For each test case: The first line contains 1 integer N, 1 &lt;= N &lt;= 2000. The second line contains N integers indicating T[1], T[2], …, T[N]. It guarantees that the sum of T[i] in each test case is no more than 2000 and 1 &lt;= T[i]. </p>
<p>Output<br>For each test case, output an integer representing the answer MOD 10^9 + 7. </p>
<p>Sample Input<br>2<br>1<br>5<br>2<br>8 6</p>
<p>Sample Output<br>1<br>7</p>
<h3 id="题解">题解</h3><p>有一堆克隆人，都具有n种属性，对于任意两个克隆体A、B来说，如果A各项属性均大于B，那么B就会死去。研究样例可知sum值一样的个体共存最大，且sum=最大值/2时取得最大值。<br>dp[i][j]表示前i项属性和为j的种类数，易知对于dp[i][j+属性j可取所有值]=dp[i-1][j];遍历完后取dp[n][sum/2];</p>
<h2 id="<!-￼0->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;ctime&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cassert&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;climits&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;deque&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;list&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;set&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;numeric&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iomanip&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;bitset&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;sstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;fstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug puts("-----")</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> eps (1e-8)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf (1&lt;&lt;30)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> INF (1ll&lt;&lt;62)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span>  dp[<span class="number">2005</span>][<span class="number">2005</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">        <span class="keyword">int</span> v[n],sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;v[i];</span><br><span class="line">            sum+=v[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>)  <span class="built_in">cout</span>&lt;&lt;<span class="number">1</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;=v[<span class="number">0</span>]; j++)   dp[<span class="number">1</span>][j]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=n; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;=sum/<span class="number">2</span>; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;=v[i-<span class="number">1</span>]; k++)</span><br><span class="line"></span><br><span class="line">                    &#123;</span><br><span class="line">                        dp[i][j+k] +=dp[i-<span class="number">1</span>][j];</span><br><span class="line">                        dp[i][j+k] %=<span class="number">1000000007</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;dp[n][sum/<span class="number">2</span>]&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="Problem_E_HDU_5001_Walk"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5001" target="_blank" rel="external">Problem E    HDU 5001    Walk</a></h2><p>Problem Description<br>I used to think I could be anything, but now I know that I couldn’t do anything. So I started traveling.</p>
<p>The nation looks like a connected bidirectional graph, and I am randomly walking on it. It means when I am at node i, I will travel to an adjacent node with the same probability in the next step. I will pick up the start node randomly (each node in the graph has the same probability.), and travel for d steps, noting that I may go through some nodes multiple times.</p>
<p>If I miss some sights at a node, it will make me unhappy. So I wonder for each node, what is the probability that my path doesn’t contain it.</p>
<p>Input<br>The first line contains an integer T, denoting the number of the test cases.</p>
<p>For each test case, the first line contains 3 integers n, m and d, denoting the number of vertices, the number of edges and the number of steps respectively. Then m lines follows, each containing two integers a and b, denoting there is an edge between node a and node b.</p>
<p>T&lt;=20, n&lt;=50, n-1&lt;=m&lt;=n*(n-1)/2, 1&lt;=d&lt;=10000. There is no self-loops or multiple edges in the graph, and the graph is connected. The nodes are indexed from 1.</p>
<p>Output<br>For each test cases, output n lines, the i-th line containing the desired probability for the i-th node.</p>
<p>Your answer will be accepted if its absolute error doesn’t exceed 1e-5.</p>
<p>Sample Input<br>2<br>5 10 100<br>1 2<br>2 3<br>3 4<br>4 5<br>1 5<br>2 4<br>3 5<br>2 5<br>1 4<br>1 3<br>10 10 10<br>1 2<br>2 3<br>3 4<br>4 5<br>5 6<br>6 7<br>7 8<br>8 9<br>9 10<br>4 9</p>
<p>Sample Output<br>0.0000000000<br>0.0000000000<br>0.0000000000<br>0.0000000000<br>0.0000000000<br>0.6993317967<br>0.5864284952<br>0.4440860821<br>0.2275896991<br>0.4294074591<br>0.4851048742<br>0.4896018842<br>0.4525044250<br>0.3406567483<br>0.6421630037</p>
<h3 id="题解-1">题解</h3><p>有n个点，m条双向边，走d步，问每一步未走到的概率。对于每一步，求出走到i点的概率，最后1-加和就行。dp[i][j-1]表示第j-1步走到i的概率，dp[临接][j]=dp[i][j-1]/临接个数；</p>
<h2 id="<!-￼1->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;ctime&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cassert&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;climits&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;deque&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;list&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;set&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;numeric&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iomanip&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;bitset&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;sstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;fstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug puts("-----")</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> eps (1e-8)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf (1&lt;&lt;30)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> INF (1ll&lt;&lt;62)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">double</span> f[<span class="number">55</span>][<span class="number">10005</span>],ans;</span><br><span class="line"><span class="keyword">int</span> t,n,m,d;</span><br><span class="line"><span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; g[<span class="number">55</span>];</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> x)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=d;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(j==x)   <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">double</span> p=<span class="number">1.0</span>/g[j].size();</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;g[j].size();k++)</span><br><span class="line">                f[g[j][k]][i]+=f[j][i-<span class="number">1</span>]*p;</span><br><span class="line">        &#125;</span><br><span class="line">        ans+=f[x][i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1.0</span>-ans-f[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;d;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">        g[i].clear();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        g[x].push_back(y);</span><br><span class="line">        g[y].push_back(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span> f);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=n;j++)</span><br><span class="line">            f[j][<span class="number">0</span>]=<span class="number">1.0</span>/n;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.10f\n"</span>,solve(i));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="Problem_G_HDU_5003_Osu!"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5003" target="_blank" rel="external">Problem G    HDU 5003    Osu!</a></h2><p>Problem Description<br>Osu! is a famous music game that attracts a lot of people. In osu!, there is a performance scoring system, which evaluates your performance. Each song you have played will have a score. And the system will sort all you scores in descending order. After that, the i-th song scored ai will add 0.95^(i-1)*ai to your total score.</p>
<p>Now you are given the task to write a calculator for this system.</p>
<p>Input<br>The first line contains an integer T, denoting the number of the test cases.</p>
<p>For each test case, the first line contains an integer n, denoting the number of songs you have played. The second line contains n integers a1, a2, …, an separated by a single space, denoting the score of each song.</p>
<p>T&lt;=20, n&lt;=50, 1&lt;=ai&lt;=500.</p>
<p>Output<br>For each test case, output one line for the answer.</p>
<p>Your answers will be considered correct if its absolute error is smaller than 1e-5.</p>
<p>Sample Input<br>1<br>2<br>530 478</p>
<p>Sample Output<br>984.1000000000</p>
<h3 id="题解-2">题解</h3><p>从大到小排序，去权值简单计算加和，签到题</p>
<h2 id="<!-￼2->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;ctime&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cassert&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;climits&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;deque&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;list&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;set&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;numeric&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iomanip&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;bitset&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;sstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;fstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug puts("-----")</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> eps (1e-8)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf (1&lt;&lt;30)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> INF (1ll&lt;&lt;62)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span> <span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">      <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">      <span class="keyword">int</span> a[n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">        sort(a,a+n,cmp);</span><br><span class="line">        <span class="keyword">double</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            sum+=(<span class="built_in">pow</span>(<span class="number">0.95</span>,i)*a[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.10lf\n"</span>,sum);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Problem_D_HDU_5000_Clone"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5000">Problem D    HDU 5000    Clone</a></h2><p>Problem Description<br>After eating food from Chernobyl, DRD got a super power: he could clone himself right now! He used this power for several times. He found out that this power was not as perfect as he wanted. For example, some of the cloned objects were tall, while some were short; some of them were fat, and some were thin. </p>
<p>More evidence showed that for two clones A and B, if A was no worse than B in all fields, then B could not survive. More specifically, DRD used a vector v to represent each of his clones. The vector v has n dimensions, representing a clone having N abilities. For the i-th dimension, v[i] is an integer between 0 and T[i], where 0 is the worst and T[i] is the best. For two clones A and B, whose corresponding vectors were p and q, if for 1 &lt;= i &lt;= N, p[i] &gt;= q[i], then B could not survive. </p>
<p>Now, as DRD’s friend, ATM wants to know how many clones can survive at most.<br>]]>
    
    </summary>
    
      <category term="DP" scheme="http://guoyuxiang.com/tags/DP/"/>
    
      <category term="网赛" scheme="http://guoyuxiang.com/tags/%E7%BD%91%E8%B5%9B/"/>
    
      <category term="题解" scheme="http://guoyuxiang.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="DP" scheme="http://guoyuxiang.com/categories/DP/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BestCoder Round #20]]></title>
    <link href="http://guoyuxiang.com/2015/08/25/BestCoder-Round-20/"/>
    <id>http://guoyuxiang.com/2015/08/25/BestCoder-Round-20/</id>
    <published>2015-08-25T02:25:40.000Z</published>
    <updated>2015-08-25T03:15:43.930Z</updated>
    <content type="html"><![CDATA[<h2 id="1001_who_is_the_best?"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5123" target="_blank" rel="external">1001 who is the best?</a></h2><p>Problem Description<br>There are N people want to choose the best person. Each person select the best person ai, .John wants to know that who received the most number of votes.<br><a id="more"></a><br>Input<br>The first line contains a single integer T(1≤T≤50),indicating the number of test cases.<br>Each test case begins with an integer N(1≤N≤100),indicating the number of person.<br>Next N lines contains an integer ai(1≤ai≤N).</p>
<p>Output<br>For each case, output an integer means who is the best person. If there are multiple answers, print the minimum index.</p>
<p>Sample Input<br>2<br>10<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>5<br>3<br>3<br>3<br>3<br>3</p>
<p>Sample Output<br>1<br>3</p>
<h3 id="题解">题解</h3><p>简单题，最近出水题老出BUG……</p>
<h2 id="<!-￼0->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> t,n;</span><br><span class="line">   <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">   <span class="keyword">while</span>(t--)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">      <span class="keyword">int</span> num[n+<span class="number">1</span>];</span><br><span class="line">      <span class="built_in">memset</span>(num,<span class="number">0</span>,<span class="keyword">sizeof</span>(num));</span><br><span class="line">      <span class="keyword">int</span> a,maxn=-<span class="number">1</span>,x;</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">          num[a]++;</span><br><span class="line">      &#125;</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">if</span>(num[i]&gt;maxn)</span><br><span class="line">          &#123;</span><br><span class="line">              maxn=num[i];</span><br><span class="line">              x=i;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">cout</span>&lt;&lt;x&lt;&lt;endl;</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="1002_lines"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5124" target="_blank" rel="external">1002 lines</a></h2><p>Problem Description<br>John has several lines. The lines are covered on the X axis. Let A is a point which is covered by the most lines. John wants to know how many lines cover A.</p>
<p>Input<br>The first line contains a single integer T(1≤T≤100)(the data for N&gt;100 less than 11 cases),indicating the number of test cases.<br>Each test case begins with an integer N(1≤N≤105),indicating the number of lines.<br>Next N lines contains two integers Xi and Yi(1≤Xi≤Yi≤109),describing a line.</p>
<p>Output<br>For each case, output an integer means how many lines cover A.</p>
<p>Sample Input<br>2<br>5<br>1 2<br>2 2<br>2 4<br>3 4<br>5 1000<br>5<br>1 1<br>2 2<br>3 3<br>4 4<br>5 5</p>
<p>Sample Output<br>3<br>1</p>
<h3 id="题解-1">题解</h3><p>给你一堆线段，问你线段覆盖最多的点。起点标-1,终点标1，从前往后搜就好。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> pi acos(-1.0)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> eps 1e-6</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf 1&lt;&lt;30</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> INF 1ll&lt;&lt;60</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; a[<span class="number">210010</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> x,y;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">            a[i*<span class="number">2</span>]=make_pair(x,-<span class="number">1</span>);</span><br><span class="line">            a[i*<span class="number">2</span>+<span class="number">1</span>]=make_pair(y,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a,a+<span class="number">2</span>*n);</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> tmp=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n+n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i].second==-<span class="number">1</span>)</span><br><span class="line">                tmp++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                tmp--;</span><br><span class="line">            ans=max(ans,tmp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="1001_who_is_the_best?"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5123">1001 who is the best?</a></h2><p>Problem Description<br>There are N people want to choose the best person. Each person select the best person ai, .John wants to know that who received the most number of votes.<br>]]>
    
    </summary>
    
      <category term="bestcoder" scheme="http://guoyuxiang.com/tags/bestcoder/"/>
    
      <category term="题解" scheme="http://guoyuxiang.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="bestcoder" scheme="http://guoyuxiang.com/categories/bestcoder/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BestCoder Round #21]]></title>
    <link href="http://guoyuxiang.com/2015/08/24/BestCoder-Round-21/"/>
    <id>http://guoyuxiang.com/2015/08/24/BestCoder-Round-21/</id>
    <published>2015-08-24T13:06:28.000Z</published>
    <updated>2015-08-24T13:15:16.362Z</updated>
    <content type="html"><![CDATA[<h2 id="1001_CET-6_test"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5138" target="_blank" rel="external">1001 CET-6 test</a></h2><p>Problem Description<br>Small W will take part in CET-6 test which will be held on December 20th. In order to pass it he must remember a lot of words.<br>He remembers the words according to Ebbinghaus memory curve method.<br>He separates the words into many lists. Every day he picks up a new list, and in the next 1st,2nd,4th,7th,15th day, he reviews this list.<br>So every day he has many lists to review. However he is so busy, he does not know which list should be reviewed in a certain day. Now he invites you to write a program to tell him which list should to be reviewed in a certain day.<br>Lists are numbered from 1. For example list 1 should be reviewed in the 2nd,3rd,5th,8th,16th day.<br><a id="more"></a><br>Input<br>Multi test cases (about 100), every case contains an integer n in a single line.<br>Please process to the end of file.</p>
<p>[Technical Specification]<br>2≤n≤100000</p>
<p>Output<br>For each n，output the list which should be reviewed in the nth day in ascending order.</p>
<p>Sample Input<br>2<br>100</p>
<p>Sample Output<br>1<br>85 93 96 98 99</p>
<h3 id="题解">题解</h3><p>没什么好说的，大水题。开始的时候还PE了两发……对此表示遗憾……</p>
<h2 id="<!-￼0->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;vector&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">if</span>(n-<span class="number">15</span>&gt;<span class="number">0</span>)   v.push_back(n-<span class="number">15</span>);</span><br><span class="line">        <span class="keyword">if</span>(n-<span class="number">7</span>&gt;<span class="number">0</span>)   v.push_back(n-<span class="number">7</span>);</span><br><span class="line">        <span class="keyword">if</span>(n-<span class="number">4</span>&gt;<span class="number">0</span>)   v.push_back(n-<span class="number">4</span>);</span><br><span class="line">        <span class="keyword">if</span>(n-<span class="number">2</span>&gt;<span class="number">0</span>)   v.push_back(n-<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span>(n-<span class="number">1</span>&gt;<span class="number">0</span>)   v.push_back(n-<span class="number">1</span>);</span><br><span class="line">       <span class="keyword">for</span>( i=<span class="number">0</span>;i&lt;v.size()-<span class="number">1</span>;i++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;v[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;v[i];</span><br><span class="line">       <span class="built_in">cout</span>&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="1002_Formula"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5139" target="_blank" rel="external">1002 Formula</a></h2><p>Problem Description<br>f(n)=(∏i=1nin−i+1)%1000000007<br>You are expected to write a program to calculate f(n) when a certain n is given.</p>
<p>Input<br>Multi test cases (about 100000), every case contains an integer n in a single line.<br>Please process to the end of file.</p>
<p>[Technical Specification]<br>1≤n≤10000000</p>
<p>Output<br>For each n，output f(n) in a single line.</p>
<p>Sample Input<br>2<br>100</p>
<p>Sample Output<br>2<br>148277692</p>
<h3 id="题解-1">题解</h3><p>输入n,输出n!*(n-1)!*……1!,每十个数据储存一个，最后计算<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;fstream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1000100</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD =<span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">int</span> d[maxn],f[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    d[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    f[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">1</span>,i,n;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> td=<span class="number">1</span>,fd=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">2</span>; i&lt;=<span class="number">10000000</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        fd=fd*i%MOD;</span><br><span class="line">        td=td*fd%MOD;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">10</span>==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            d[k]=td;</span><br><span class="line">            f[k++]=fd;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> pos=n/<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> len=n%<span class="number">10</span>;</span><br><span class="line">        td=d[pos],fd=f[pos];</span><br><span class="line">        <span class="keyword">for</span>(k=<span class="number">1</span>,i=n/<span class="number">10</span>*<span class="number">10</span>+<span class="number">1</span>;k&lt;=len; k++,i++)</span><br><span class="line">        &#123;</span><br><span class="line">            fd=fd*i%MOD;</span><br><span class="line">            td=td*fd%MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;td&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="1001_CET-6_test"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5138">1001 CET-6 test</a></h2><p>Problem Description<br>Small W will take part in CET-6 test which will be held on December 20th. In order to pass it he must remember a lot of words.<br>He remembers the words according to Ebbinghaus memory curve method.<br>He separates the words into many lists. Every day he picks up a new list, and in the next 1st,2nd,4th,7th,15th day, he reviews this list.<br>So every day he has many lists to review. However he is so busy, he does not know which list should be reviewed in a certain day. Now he invites you to write a program to tell him which list should to be reviewed in a certain day.<br>Lists are numbered from 1. For example list 1 should be reviewed in the 2nd,3rd,5th,8th,16th day.<br>]]>
    
    </summary>
    
      <category term="bestcoder" scheme="http://guoyuxiang.com/tags/bestcoder/"/>
    
      <category term="题解" scheme="http://guoyuxiang.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="bestcoder" scheme="http://guoyuxiang.com/categories/bestcoder/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BestCoder Round #18]]></title>
    <link href="http://guoyuxiang.com/2015/08/19/BestCoder-Round-18/"/>
    <id>http://guoyuxiang.com/2015/08/19/BestCoder-Round-18/</id>
    <published>2015-08-19T13:39:23.000Z</published>
    <updated>2015-08-19T13:44:46.210Z</updated>
    <content type="html"><![CDATA[<h2 id="Primes_Problem"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5104" target="_blank" rel="external">Primes Problem</a></h2><p>Problem Description<br>Given a number n, please count how many tuple(p1, p2, p3) satisfied that p1&lt;=p2&lt;=p3, p1,p2,p3 are primes and p1 + p2 + p3 = n.<br><a id="more"></a><br>Input<br>Multiple test cases(less than 100), for each test case, the only line indicates the positive integer n(n≤10000).</p>
<p>Output<br>For each test case, print the number of ways.</p>
<p>Sample Input<br>3<br>9</p>
<p>Sample Output<br>0<br>2</p>
<h3 id="题解">题解</h3><p>求出10000以内素数，然后暴力求解，用的琦神筛素数模板</p>
<h2 id="<!-￼0->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;fstream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn 1000000</span></span><br><span class="line"><span class="keyword">int</span> ans[maxn], valid[maxn], tot = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getPrime</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> &amp;tot, <span class="keyword">int</span> ans[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!valid[i]) ans[tot++] = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; tot &amp;&amp; i * ans[j] &lt;= n; j++) &#123;</span><br><span class="line">            valid[i * ans[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % ans[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    getPrime(<span class="number">10000</span>,tot,ans);</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;tot;i++)</span><br><span class="line">         <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;tot;j++)</span><br><span class="line">           <span class="keyword">if</span>((!valid[n-ans[i]-ans[j]])&amp;&amp;(n-ans[i]-ans[j]&gt;=ans[j]))    sum++;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="Math_Problem"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5105" target="_blank" rel="external">Math Problem</a></h2><p>Problem Description<br>Here has an function:<br>  f(x)=|a∗x3+b∗x2+c∗x+d|(L≤x≤R)<br>Please figure out the maximum result of f(x).</p>
<p>Input<br>Multiple test cases(less than 100). For each test case, there will be only 1 line contains 6 numbers a, b, c, d, L and R. (−10≤a,b,c,d≤10,−100≤L≤R≤100)</p>
<p>Output<br>For each test case, print the answer that was rounded to 2 digits after decimal point in 1 line.</p>
<p>Sample Input<br>1.00 2.00 3.00 4.00 5.00 6.00</p>
<p>Sample Output<br>310.00</p>
<h3 id="题解-1">题解</h3><p>恶心死人的数学题……就是求一元三次方程最大值</p>
<h2 id="<!-￼1->"><figure class="highlight openscad"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">#</span><span class="preprocessor"><span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="built_in">#</span><span class="preprocessor"><span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="built_in">#</span><span class="preprocessor"><span class="keyword">include</span>&lt;fstream&gt;</span></span><br><span class="line"><span class="built_in">#</span><span class="preprocessor"><span class="keyword">include</span>&lt;cstdio&gt;</span></span><br><span class="line"><span class="built_in">#</span><span class="preprocessor"><span class="keyword">include</span>&lt;cmath&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">double a,b,c,d,l,r,x1,x2;</span><br><span class="line">double f<span class="params">(double x)</span></span><br><span class="line">&#123;</span><br><span class="line">    return fabs<span class="params">(a*x*x*x+b*x*x+c*x+d)</span>;</span><br><span class="line">&#125;</span><br><span class="line">int main<span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">   double ans;</span><br><span class="line">    double ans1,ans2;</span><br><span class="line">   while<span class="params">(cin&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d&gt;&gt;l&gt;&gt;r)</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">if</span><span class="params">(a==<span class="number">0</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">if</span><span class="params">(b==<span class="number">0</span>)</span>   printf<span class="params">(<span class="string">"%.2f\n"</span>,max<span class="params">(f<span class="params">(l)</span>,f<span class="params">(r)</span>)</span>)</span>;</span><br><span class="line">            <span class="keyword">else</span>     printf<span class="params">(<span class="string">"%.2f\n"</span>,max<span class="params">(f<span class="params">(l)</span>,max<span class="params">(f<span class="params">(r)</span>,f<span class="params">(<span class="params">(-c)</span>/<span class="params">(<span class="number">2</span>*b)</span>)</span>)</span>)</span>)</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span><span class="params">(<span class="params">(b*b-<span class="number">3</span>*a*c)</span>&gt;<span class="number">0</span>)</span></span><br><span class="line">       &#123;</span><br><span class="line">           x1=<span class="params">(sqrt<span class="params">(b*b-<span class="number">3</span>*a*c)</span>-b)</span>/<span class="params">(<span class="number">3</span>*a)</span>;</span><br><span class="line">           x2=<span class="params">(-sqrt<span class="params">(b*b-<span class="number">3</span>*a*c)</span>-b)</span>/<span class="params">(<span class="number">3</span>*a)</span>;</span><br><span class="line">          ans=<span class="built_in">max</span><span class="params">(max<span class="params">(f<span class="params">(l)</span>,f<span class="params">(r)</span>)</span>,max<span class="params">(f<span class="params">(x1)</span>,f<span class="params">(x2)</span>)</span>)</span>;</span><br><span class="line">          printf<span class="params">(<span class="string">"%.2f\n"</span>,ans)</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">       &#123;</span><br><span class="line">          ans=<span class="built_in">max</span><span class="params">(f<span class="params">(l)</span>,f<span class="params">(r)</span>)</span>;</span><br><span class="line">        printf<span class="params">(<span class="string">"%.2f\n"</span>,ans)</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">          </span><br><span class="line">   &#125;</span><br><span class="line">    return <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Primes_Problem"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5104">Primes Problem</a></h2><p>Problem Description<br>Given a number n, please count how many tuple(p1, p2, p3) satisfied that p1&lt;=p2&lt;=p3, p1,p2,p3 are primes and p1 + p2 + p3 = n.<br>]]>
    
    </summary>
    
      <category term="bestcoder" scheme="http://guoyuxiang.com/tags/bestcoder/"/>
    
      <category term="题解" scheme="http://guoyuxiang.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="bestcoder" scheme="http://guoyuxiang.com/categories/bestcoder/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2015 Multi-University Training Contest 9]]></title>
    <link href="http://guoyuxiang.com/2015/08/18/2015-Multi-University-Training-Contest-9/"/>
    <id>http://guoyuxiang.com/2015/08/18/2015-Multi-University-Training-Contest-9/</id>
    <published>2015-08-18T13:19:57.000Z</published>
    <updated>2015-08-18T13:31:32.630Z</updated>
    <content type="html"><![CDATA[<h2 id="1004_Too_Simple"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5399" target="_blank" rel="external">1004 Too Simple</a></h2><p>Problem Description<br>Rhason Cheung had a simple problem, and asked Teacher Mai for help. But Teacher Mai thought this problem was too simple, sometimes naive. So she ask you for help.</p>
<p>Teacher Mai has m functions f1,f2,⋯,fm:{1,2,⋯,n}→{1,2,⋯,n}(that means for all x∈{1,2,⋯,n},f(x)∈{1,2,⋯,n}). But Rhason only knows some of these functions, and others are unknown.</p>
<p>She wants to know how many different function series f1,f2,⋯,fm there are that for every i(1≤i≤n),f1(f2(⋯fm(i)))=i. Two function series f1,f2,⋯,fm and g1,g2,⋯,gm are considered different if and only if there exist i(1≤i≤m),j(1≤j≤n),fi(j)≠gi(j).<br> <a id="more"></a><br>Input<br>For each test case, the first lines contains two numbers n,m(1≤n,m≤100).</p>
<p>The following are m lines. In i-th line, there is one number −1 or n space-separated numbers.</p>
<p>If there is only one number −1, the function fi is unknown. Otherwise the j-th number in the i-th line means fi(j).</p>
<p>Output<br>For each test case print the answer modulo 109+7.</p>
<p>Sample Input<br>3 3<br>1 2 3<br>-1<br>3 2 1</p>
<p>Sample Output<br>1<br>Hint<br>The order in the function series is determined. What she can do is to assign the values to the unknown functions.</p>
<h3 id="题解">题解</h3><p>留坑</p>
<h2 id="<!-￼0->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;ctime&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;deque&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;list&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;set&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cctype&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;numeric&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iomanip&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;bitset&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;sstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;fstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug "output for debug\n"</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> eps (1e-8)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf 0x3f3f3f3f</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">105</span>][<span class="number">105</span>];</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line">ll a[<span class="number">105</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">105</span>];</span><br><span class="line">    <span class="keyword">int</span> f[<span class="number">105</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        a[i]=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=m; i&gt;=<span class="number">1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">            f[j]=b[i][a[j]];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">            a[j]=f[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">if</span>(a[i]!=i)</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    a[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++)</span><br><span class="line">        a[i] = i * a[i - <span class="number">1</span>] % mod;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m)!=EOF)</span><br><span class="line">     &#123;</span><br><span class="line">        <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">int</span> sum[<span class="number">111</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b[i][<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">if</span> (b[i][<span class="number">1</span>] == -<span class="number">1</span>) &#123;</span><br><span class="line">                k++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            sum[b[i][<span class="number">1</span>]]++;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt;= n; j++)</span><br><span class="line">             &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b[i][j]);</span><br><span class="line">                sum[b[i][j]]++;</span><br><span class="line">                <span class="keyword">if</span> (sum[b[i][j]] &gt; <span class="number">1</span>) flag = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (k == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, check());</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ll ans = <span class="number">1</span>;</span><br><span class="line">        k--;</span><br><span class="line">        <span class="keyword">while</span>(k--) &#123;</span><br><span class="line">            ans = ans * a[n];</span><br><span class="line">            ans %= mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="1005_Arithmetic_Sequence"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5400" target="_blank" rel="external">1005 Arithmetic Sequence</a></h2><p>Problem Description<br>A sequence b1,b2,⋯,bn are called (d1,d2)-arithmetic sequence if and only if there exist i(1≤i≤n) such that for every j(1≤j&lt;i),bj+1=bj+d1 and for every j(i≤j&lt;n),bj+1=bj+d2.</p>
<p>Teacher Mai has a sequence a1,a2,⋯,an. He wants to know how many intervals <a href="1≤l≤r≤n">l,r</a> there are that al,al+1,⋯,ar are (d1,d2)-arithmetic sequence.</p>
<p>Input<br>There are multiple test cases.</p>
<p>For each test case, the first line contains three numbers n,d1,d2(1≤n≤105,|d1|,|d2|≤1000), the next line contains n integers a1,a2,⋯,an(|ai|≤109).</p>
<p>Output<br>For each test case, print the answer.</p>
<p>Sample Input<br>5 2 -2<br>0 2 0 -2 0<br>5 2 3<br>2 3 3 3 3</p>
<p>Sample Output<br>12<br>5</p>
<h3 id="题解-1">题解</h3><p>实话实说。这是签到题，以前做过的，枚举I,然后搞左节点和右节点。</p>
<h2 id="<!-￼1->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># <span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor"># <span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100100</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],pre[maxn],suf[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,d1,d2;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;d1,&amp;d2))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,a+i);</span><br><span class="line">        pre[<span class="number">1</span>]=<span class="number">1</span>; suf[n]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]==a[i-<span class="number">1</span>]+d1) pre[i]=pre[i-<span class="number">1</span>]+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> pre[i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n-<span class="number">1</span>;i&gt;<span class="number">0</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]==a[i+<span class="number">1</span>]-d2) suf[i]=suf[i+<span class="number">1</span>]+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> suf[i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        LL ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(d1==d2) <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) ans+=(LL)pre[i];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) ans+=(LL)pre[i]*(LL)suf[i];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="1007_Travelling_Salesman_Problem"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5402" target="_blank" rel="external">1007 Travelling Salesman Problem</a></h2><p>Problem Description<br>Teacher Mai is in a maze with n rows and m columns. There is a non-negative number in each cell. Teacher Mai wants to walk from the top left corner (1,1) to the bottom right corner (n,m). He can choose one direction and walk to this adjacent cell. However, he can’t go out of the maze, and he can’t visit a cell more than once.</p>
<p>Teacher Mai wants to maximize the sum of numbers in his path. And you need to print this path.</p>
<p>Input<br>There are multiple test cases.</p>
<p>For each test case, the first line contains two numbers n,m(1≤n,m≤100,n∗m≥2).</p>
<p>In following n lines, each line contains m numbers. The j-th number in the i-th line means the number in the cell (i,j). Every number in the cell is not more than 104.</p>
<p>Output<br>For each test case, in the first line, you should print the maximum sum.</p>
<p>In the next line you should print a string consisting of “L”,”R”,”U” and “D”, which represents the path you find. If you are in the cell (x,y), “L” means you walk to cell (x,y−1), “R” means you walk to cell (x,y+1), “U” means you walk to cell (x−1,y), “D” means you walk to cell (x+1,y).</p>
<p>Sample Input<br>3 3<br>2 3 3<br>3 3 3<br>3 3 2</p>
<p>Sample Output<br>25<br>RRDLLDRR</p>
<h3 id="题解-2">题解</h3><p>一不小心就想出题解了~如果两条边有一条是奇数的话就一定可以全部遍历，构造方法是这样，首先RRRRDLLLLD这样的路径走到这个格子所在行或者上一行，然后DRUR这样走到这个格子的所在列或者前一列，然后绕过这个格子。然后走完这两行，接着按LLLLDRRRR这样的路径往下走。</p>
<h2 id="<!-￼2->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;ctime&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;deque&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;list&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;set&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;numeric&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iomanip&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;bitset&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;sstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;fstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;limits.h&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug "output for debug\n"</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> eps (1e-4)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf (1&lt;&lt;28)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> sqr(x) (x) * (x)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m, ans, a[<span class="number">120</span>][<span class="number">120</span>];</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> minn = <span class="number">9999999</span>, x, y;</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i][j]);</span><br><span class="line">                ans += a[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n &amp; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; n / <span class="number">2</span>; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m - <span class="number">1</span>; i++)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"R"</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"D"</span>);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m - <span class="number">1</span>; i++)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"L"</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"D"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m - <span class="number">1</span>; i++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"R"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(m &amp; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; m / <span class="number">2</span>; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"D"</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"R"</span>);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"U"</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"R"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"D"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(((i+j)&amp;<span class="number">1</span>) &amp;&amp; a[i][j] &lt; minn)</span><br><span class="line">                    &#123;</span><br><span class="line">                        minn = a[i][j];</span><br><span class="line">                        x = i; y = j;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ans -= minn;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">            <span class="keyword">if</span>(x % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; x / <span class="number">2</span>; k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m - <span class="number">1</span>; i++)</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"R"</span>);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"D"</span>);</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m - <span class="number">1</span>; i++)</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"L"</span>);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"D"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"D"</span>);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; y / <span class="number">2</span>; i++)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"RURD"</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"R"</span>);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (m - y) / <span class="number">2</span>; i++)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"RURD"</span>);</span><br><span class="line">                <span class="keyword">if</span>(x != n - <span class="number">2</span>)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"D"</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; (n - x - <span class="number">1</span>) / <span class="number">2</span>; k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m - <span class="number">1</span>; i++)</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"L"</span>);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"D"</span>);</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m - <span class="number">1</span>; i++)</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"R"</span>);</span><br><span class="line">                    <span class="keyword">if</span>(k == (n - x - <span class="number">1</span>) / <span class="number">2</span> - <span class="number">1</span>)  <span class="keyword">break</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"D"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(y % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; y / <span class="number">2</span>; k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"D"</span>);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"R"</span>);</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"U"</span>);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"R"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"R"</span>);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; x / <span class="number">2</span>; i++)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"DLDR"</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"D"</span>);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (n - x) / <span class="number">2</span>; i++)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"DLDR"</span>);</span><br><span class="line">                <span class="keyword">if</span>(y != m - <span class="number">2</span>)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"R"</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; (m - y - <span class="number">1</span>) / <span class="number">2</span>; k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"U"</span>);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"R"</span>);</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"D"</span>);</span><br><span class="line">                    <span class="keyword">if</span>(k == (m - y - <span class="number">1</span>) / <span class="number">2</span> - <span class="number">1</span>)  <span class="keyword">break</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"R"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="1004_Too_Simple"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5399">1004 Too Simple</a></h2><p>Problem Description<br>Rhason Cheung had a simple problem, and asked Teacher Mai for help. But Teacher Mai thought this problem was too simple, sometimes naive. So she ask you for help.</p>
<p>Teacher Mai has m functions f1,f2,⋯,fm:{1,2,⋯,n}→{1,2,⋯,n}(that means for all x∈{1,2,⋯,n},f(x)∈{1,2,⋯,n}). But Rhason only knows some of these functions, and others are unknown.</p>
<p>She wants to know how many different function series f1,f2,⋯,fm there are that for every i(1≤i≤n),f1(f2(⋯fm(i)))=i. Two function series f1,f2,⋯,fm and g1,g2,⋯,gm are considered different if and only if there exist i(1≤i≤m),j(1≤j≤n),fi(j)≠gi(j).<br>]]>
    
    </summary>
    
      <category term="多校" scheme="http://guoyuxiang.com/tags/%E5%A4%9A%E6%A0%A1/"/>
    
      <category term="题解" scheme="http://guoyuxiang.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="多校" scheme="http://guoyuxiang.com/categories/%E5%A4%9A%E6%A0%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2015 Multi-University Training Contest 8]]></title>
    <link href="http://guoyuxiang.com/2015/08/17/2015-Multi-University-Training-Contest-8/"/>
    <id>http://guoyuxiang.com/2015/08/17/2015-Multi-University-Training-Contest-8/</id>
    <published>2015-08-17T01:45:01.000Z</published>
    <updated>2015-08-17T03:37:46.074Z</updated>
    <content type="html"><![CDATA[<h2 id="1009_Clock"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5387" target="_blank" rel="external">1009 Clock</a></h2><p>Problem Description<br>Give a time.(hh:mm:ss)，you should answer the angle between any two of the minute.hour.second hand<br>Notice that the answer must be not more 180 and not less than 0<br><a id="more"></a><br>Input<br>There are T(1≤T≤104) test cases<br>for each case,one line include the time</p>
<p>0≤hh&lt;24,0≤mm&lt;60,0≤ss&lt;60</p>
<p>Output<br>for each case,output there real number like A/B.(A and B are coprime).if it’s an integer then just print it.describe the angle between hour and minute,hour and second hand,minute and second hand.</p>
<p>Sample Input<br>4<br>00:00:00<br>06:00:00<br>12:54:55<br>04:40:00</p>
<p>Sample Output<br>0 0 0<br>180 180 0<br>1391/24 1379/24 1/2<br>100 140 120 </p>
<h3 id="题解">题解</h3><p>本来是不难的，关键你防不住脑子抽经啊。小时的问题，24小时制和12小时制，秒针走3600时针走1……</p>
<h2 id="<!-￼0->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b?gcd(b,a%b):a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> hh,mm,ss;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> c;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;hh&gt;&gt;c&gt;&gt;mm&gt;&gt;c&gt;&gt;ss;</span><br><span class="line">        hh=min(hh,hh%<span class="number">12</span>);</span><br><span class="line">        hh=(<span class="number">3600</span>*hh+<span class="number">60</span>*mm+ss);</span><br><span class="line">        mm=<span class="number">720</span>*mm+<span class="number">12</span>*ss;</span><br><span class="line">        ss=<span class="number">720</span>*ss;</span><br><span class="line">        <span class="keyword">int</span> angel;</span><br><span class="line">        angel=min(<span class="built_in">abs</span>(hh-mm),<span class="number">60</span>*<span class="number">720</span>-<span class="built_in">abs</span>(hh-mm));</span><br><span class="line">        <span class="keyword">if</span>(angel%<span class="number">120</span>==<span class="number">0</span>)  <span class="built_in">cout</span>&lt;&lt;angel/<span class="number">120</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;angel/gcd(angel,<span class="number">120</span>)&lt;&lt;<span class="string">"/"</span>&lt;&lt;<span class="number">120</span>/gcd(angel,<span class="number">120</span>)&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        angel=min(<span class="built_in">abs</span>(hh-ss),<span class="number">60</span>*<span class="number">720</span>-<span class="built_in">abs</span>(hh-ss));</span><br><span class="line">        <span class="keyword">if</span>(angel%<span class="number">120</span>==<span class="number">0</span>)  <span class="built_in">cout</span>&lt;&lt;angel/<span class="number">120</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;angel/gcd(angel,<span class="number">120</span>)&lt;&lt;<span class="string">"/"</span>&lt;&lt;<span class="number">120</span>/gcd(angel,<span class="number">120</span>)&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        angel=min(<span class="built_in">abs</span>(ss-mm),<span class="number">60</span>*<span class="number">720</span>-<span class="built_in">abs</span>(ss-mm));</span><br><span class="line">        <span class="keyword">if</span>(angel%<span class="number">120</span>==<span class="number">0</span>)  <span class="built_in">cout</span>&lt;&lt;angel/<span class="number">120</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;angel/gcd(angel,<span class="number">120</span>)&lt;&lt;<span class="string">"/"</span>&lt;&lt;<span class="number">120</span>/gcd(angel,<span class="number">120</span>)&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="1009_Clock"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5387">1009 Clock</a></h2><p>Problem Description<br>Give a time.(hh:mm:ss)，you should answer the angle between any two of the minute.hour.second hand<br>Notice that the answer must be not more 180 and not less than 0<br>]]>
    
    </summary>
    
      <category term="多校" scheme="http://guoyuxiang.com/tags/%E5%A4%9A%E6%A0%A1/"/>
    
      <category term="题解" scheme="http://guoyuxiang.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="多校" scheme="http://guoyuxiang.com/categories/%E5%A4%9A%E6%A0%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[c++ string详解]]></title>
    <link href="http://guoyuxiang.com/2015/08/15/c-string%E8%AF%A6%E8%A7%A3/"/>
    <id>http://guoyuxiang.com/2015/08/15/c-string详解/</id>
    <published>2015-08-15T03:32:09.000Z</published>
    <updated>2015-08-15T03:38:44.248Z</updated>
    <content type="html"><![CDATA[<p>对string有一定了解以后，我们可以来了解C++标准库定义的一系列丰富的字符串操作，当然都是基于string类型。从某一种程度上来说，string就是一种字符容器。<br><blockquote><p>a) =,assign()   赋以新值<br>b) swap()   交换两个字符串的内容<br>c) +=,append(),push_back() 在尾部添加字符<br>d) insert() 插入字符<br>e) erase() 删除字符<br>f) clear() 删除全部字符<br>g) replace() 替换字符<br>h) + 串联字符串<br>i) ==,!=,&lt;,&lt;=,&gt;,&gt;=,compare()  比较字符串<br>j) size(),length()  返回字符数量<br>l) empty()  判断字符串是否为空<br>p) &gt;&gt;,getline() 从stream读取某值<br>r) copy() 将某值赋值为一个C_string<br>s) c_str() 将内容以C_string返回<br>u) substr() 返回某个子字符串</p>
</blockquote><br><a id="more"></a><br>标准库为string定义了很多方法，包括构造、插入(insert)、替换(assign和replace)、比较(compare)、查找(find)、删除(erase)、连接(append)以及对子串的操作(substr)。而每一种操作都有很多种重载。</p>
<h2 id="构造">构造</h2><p>声明一个字符串变量很简单：<br>string Str;<br>这样我们就声明了一个字符串变量，但既然是一个类，就有构造函数和析构函数。上面的声明没有传入参数，所以就直接使用了string的默认的构造函数，这个函数所作的就是把Str初始化为一个空字符串。String类的构造函数和析构函数如下：<br><blockquote><p>a)    string s;  生成一个空字符串s<br>b)    string s(str) 拷贝构造函数 生成str的复制品<br>c)    string s(str,pos) 将字符串str内“始于位置pos”的部分当作字符串的初值<br>d)    string s(str,pos,len) 将字符串str内“始于pos且长度顶多len”的部分作为字符串的初值</p>
</blockquote></p>
<h2 id="插入（insert）">插入（insert）</h2><p>string类特有的插入方法:<br><blockquote><p>str.insert(pos, n, ch); 在下标为pos的字符之前插入n个字符ch</p>
<p>str.insert(pos, str2); 在下标为pos的字符之前插入string类型的对象str2的副本</p>
<p>str.insert(pos1, str2, pos2, len); 在下标为pos1的z字符之前插入string类型str2中从下表为pos2开始的len个字符</p>
</blockquote><br>总之string是一种非常灵活的字符串类型，标准库让我们可以忽略内存管理和具体实现方式，我们只需要关注其接口就好。并且初学者在使用字符串的时候也应尽量使用这种类型，而不是C风格的字符串。</p>
<p>之所以抛弃char*的字符串而选用C++标准程序库中的string类，是因为他和前者比较起来，不必担心内存是否足够、字符串长度等等，而且作为一个类出现，他集成的操作函数足以完成我们大多数情况下(甚至是100%)的需要。我们可以用 = 进行赋值操作，== 进行比较，+ 做串联（是不是很简单?）。我们尽可以把它看成是C++的基本数据类型。</p>
<h2 id="替换(assign,swap和replace)">替换(assign,swap和replace)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">s</span><span class="params">(10,'k')</span></span>;    <span class="comment">//分配10个字符,初值都是'k'</span></span><br><span class="line">    s.assign(<span class="string">"fkdhfkdfd"</span>,<span class="number">5</span>);    <span class="comment">//重新分配指定字符串的前5的元素内容</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;s&lt;&lt;endl;        </span><br><span class="line">    <span class="built_in">cin</span>.get();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//replace</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s = <span class="string">"abcdefg"</span>;</span><br><span class="line">    s.replace(<span class="number">2</span>,<span class="number">3</span>,<span class="string">"!!!!!"</span>);<span class="comment">//从索引2开始3个字节的字符全替换成"!!!!!"</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">cin</span>.get();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//swap方法交换</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s1 = <span class="string">"hehe"</span>;</span><br><span class="line">    <span class="built_in">string</span> s2 = <span class="string">"gagaga"</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"s1 : "</span>&lt;&lt;s1&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"s2 : "</span>&lt;&lt;s2&lt;&lt;endl;</span><br><span class="line">    s1.swap(s2);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"s1 : "</span>&lt;&lt;s1&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"s2 : "</span>&lt;&lt;s2&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">cin</span>.get();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="比较(compare)">比较(compare)</h2><p>   C++字符串支持常见的比较操作符（&gt;,&gt;=,&lt;,&lt;=,==,!=），甚至支持string与C-string的比较(如 str&lt;”hello”)。在使用&gt;,&gt;=,&lt;,&lt;=这些操作符的时候是根据“当前字符特性”将字符按字典顺序进行逐一得比较。字典排序靠前的字符小，比较的顺序是从前向后比较，遇到不相等的字符就按这个位置上的两个字符的比较结果确定两个字符串的大小。同时，string(“aaaa”)    另一个功能强大的比较函数是成员函数compare()。他支持多参数处理，支持用索引值和长度定位子串来进行比较。他返回一个整数来表示比较结果，返回值意义如下：0-相等 〉0-大于 <0-小于。举例如下： <blockquote=""><p>string s(“abcd”);</p>
<p>s.compare(“abcd”); 返回0<br>s.compare(“dcba”); 返回一个小于0的值<br>s.compare(“ab”); 返回大于0的值<br>s.compare(s); 相等<br>s.compare(0,2,s,2,2); 用”ab”和”cd”进行比较 小于零<br>s.compare(1,2,”bcx”,2); 用”bc”和”bc”比较。</p>
</0-小于。举例如下：></p>
<h2 id="查找(find)">查找(find)</h2><p>第一个参数是被搜寻的对象。第二个参数（可有可无）指出string内的搜寻起点索引，第三个参数（可有可无）指出搜寻的字符个数。比较简单，不多说不理解的可以向我提出，我再仔细的解答。当然，更加强大的STL搜寻在后面会有提及。<br>最后再说说npos的含义，string::npos的类型是string::size_type,所以，一旦需要把一个索引与npos相比，这个索引值必须是string::size)type类型的，更多的情况下，我们可以直接把函数和npos进行比较（如：if(s.find(“jia”)==<br>string::npos)）。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// find 查找函数</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s = <span class="string">"abcdefg1111"</span>;</span><br><span class="line">    <span class="built_in">string</span> pattern = <span class="string">"fg"</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> pos = s.find(pattern,<span class="number">0</span>);        <span class="comment">//从索引0开始,查找符合字符串"f"的头索引</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;pos&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">string</span> str = s.substr(pos,pattern.size());</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;str&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">cin</span>.get();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="删除(erase,clear)">删除(erase,clear)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s = <span class="string">"abcdefg"</span>;</span><br><span class="line">    s.erase(<span class="number">0</span>,<span class="number">1</span>);    <span class="comment">//从索引0到索引1,即删除掉了'a'</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">    <span class="comment">//其实,还可以使用replace方法来执行删除操作</span></span><br><span class="line">    s.replace(<span class="number">2</span>,<span class="number">3</span>,<span class="string">""</span>);<span class="comment">//即将指定范围内的字符替换成"",即变相删除了</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">cin</span>.get();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//clear() 删除全部字符</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s = <span class="string">"abcdefg"</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;s.length()&lt;&lt;endl;</span><br><span class="line">    s.clear();</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;s.length()&lt;&lt;endl;</span><br><span class="line">    <span class="comment">//使用earse方法变相全删除</span></span><br><span class="line">    s = <span class="string">"dkjfd"</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;s.length()&lt;&lt;endl;</span><br><span class="line">    s.erase(<span class="number">0</span>,s.length());</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;s.length()&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cin</span>.get();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="对子串的操作(substr)">对子串的操作(substr)</h2><blockquote><p>s.substr();//返回s的全部内容<br>s.substr(11);//从索引11往后的子串<br>s.substr(5,6);//从索引5开始6个字符</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// substr() 返回某个子字符串</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s = <span class="string">"abcdefg1111"</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">string</span> str = s.substr(<span class="number">5</span>,<span class="number">3</span>);<span class="comment">//从索引5开始3个字节</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;str&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cin</span>.get();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>对string有一定了解以后，我们可以来了解C++标准库定义的一系列丰富的字符串操作，当然都是基于string类型。从某一种程度上来说，string就是一种字符容器。<br><blockquote><p>a) =,assign()   赋以新值<br>b) swap()   交换两个字符串的内容<br>c) +=,append(),push_back() 在尾部添加字符<br>d) insert() 插入字符<br>e) erase() 删除字符<br>f) clear() 删除全部字符<br>g) replace() 替换字符<br>h) + 串联字符串<br>i) ==,!=,&lt;,&lt;=,&gt;,&gt;=,compare()  比较字符串<br>j) size(),length()  返回字符数量<br>l) empty()  判断字符串是否为空<br>p) &gt;&gt;,getline() 从stream读取某值<br>r) copy() 将某值赋值为一个C_string<br>s) c_str() 将内容以C_string返回<br>u) substr() 返回某个子字符串</p>
</blockquote><br>]]>
    
    </summary>
    
      <category term="string" scheme="http://guoyuxiang.com/tags/string/"/>
    
      <category term="学习" scheme="http://guoyuxiang.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="string" scheme="http://guoyuxiang.com/categories/string/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Codeforces Round #316 (Div. 2)]]></title>
    <link href="http://guoyuxiang.com/2015/08/14/Codeforces-Round-316-Div-2/"/>
    <id>http://guoyuxiang.com/2015/08/14/Codeforces-Round-316-Div-2/</id>
    <published>2015-08-14T02:22:55.000Z</published>
    <updated>2015-08-14T03:02:02.238Z</updated>
    <content type="html"><![CDATA[<h2 id="A-_Elections"><a href="http://codeforces.com/contest/570/problem/A" target="_blank" rel="external">A. Elections</a></h2><p>The country of Byalechinsk is running elections involving n candidates. The country consists of m cities. We know how many people in each city voted for each candidate.</p>
<p>The electoral system in the country is pretty unusual. At the first stage of elections the votes are counted for each city: it is assumed that in each city won the candidate who got the highest number of votes in this city, and if several candidates got the maximum number of votes, then the winner is the one with a smaller index.</p>
<p>At the second stage of elections the winner is determined by the same principle over the cities: the winner of the elections is the candidate who won in the maximum number of cities, and among those who got the maximum number of cities the winner is the one with a smaller index.</p>
<p>Determine who will win the elections.<br><a id="more"></a><br>Input<br>The first line of the input contains two integers n, m (1 ≤ n, m ≤ 100) — the number of candidates and of cities, respectively.</p>
<p>Each of the next m lines contains n non-negative integers, the j-th number in the i-th line aij (1 ≤ j ≤ n, 1 ≤ i ≤ m, 0 ≤ aij ≤ 109) denotes the number of votes for candidate j in city i.</p>
<p>It is guaranteed that the total number of people in all the cities does not exceed 109.</p>
<p>Output<br>Print a single number — the index of the candidate who won the elections. The candidates are indexed starting from one.</p>
<p>Sample test(s)<br>input<br>3 3<br>1 2 3<br>2 3 1<br>1 2 1<br>output<br>2<br>input<br>3 4<br>10 10 3<br>5 1 6<br>2 2 2<br>1 5 7<br>output<br>1<br>Note<br>Note to the first sample test. At the first stage city 1 chosen candidate 3, city 2 chosen candidate 2, city 3 chosen candidate 2. The winner is candidate 2, he gained 2 votes.</p>
<p>Note to the second sample test. At the first stage in city 1 candidates 1 and 2 got the same maximum number of votes, but candidate 1 has a smaller index, so the city chose candidate 1. City 2 chosen candidate 3. City 3 chosen candidate 1, due to the fact that everyone has the same number of votes, and 1 has the smallest index. City 4 chosen the candidate 3. On the second stage the same number of cities chose candidates 1 and 3. The winner is candidate 1, the one with the smaller index.</p>
<h3 id="题解">题解</h3><p>每个城市选择一个候选人，最后看候选人的城市数，结构体排个序结果储存在数组里，max值初始化为-1就好。</p>
<h2 id="<!-￼0->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;algorithm&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">struct</span> node</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> v,pos;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.v==b.v)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> a.pos&lt;b.pos;</span><br><span class="line">    <span class="keyword">return</span> a.v&gt;b.v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> n,m,ans;</span><br><span class="line">   <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">   <span class="keyword">int</span> vis[n];</span><br><span class="line">   <span class="keyword">int</span> maxn=-<span class="number">1</span>;</span><br><span class="line">   <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">   <span class="keyword">while</span>(m--)</span><br><span class="line">   &#123;</span><br><span class="line">       node num[n];</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;num[i].v;</span><br><span class="line">            num[i].pos=i;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(num,num+n,cmp);</span><br><span class="line">        vis[num[<span class="number">0</span>].pos]++;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(vis[i]&gt;maxn)</span><br><span class="line">           &#123;</span><br><span class="line">               maxn=vis[i];</span><br><span class="line">        ans=i;</span><br><span class="line">           &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">cout</span>&lt;&lt;ans+<span class="number">1</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="B-_Simple_Game"><a href="http://codeforces.com/contest/570/problem/B" target="_blank" rel="external">B. Simple Game</a></h2><p>One day Misha and Andrew were playing a very simple game. First, each player chooses an integer in the range from 1 to n. Let’s assume that Misha chose number m, and Andrew chose number a.</p>
<p>Then, by using a random generator they choose a random integer c in the range between 1 and n (any integer from 1 to n is chosen with the same probability), after which the winner is the player, whose number was closer to c. The boys agreed that if m and a are located on the same distance from c, Misha wins.</p>
<p>Andrew wants to win very much, so he asks you to help him. You know the number selected by Misha, and number n. You need to determine which value of a Andrew must choose, so that the probability of his victory is the highest possible.</p>
<p>More formally, you need to find such integer a (1 ≤ a ≤ n), that the probability that  is maximal, where c is the equiprobably chosen integer from 1 to n (inclusive).</p>
<p>Input<br>The first line contains two integers n and m (1 ≤ m ≤ n ≤ 109) — the range of numbers in the game, and the number selected by Misha respectively.</p>
<p>Output<br>Print a single number — such value a, that probability that Andrew wins is the highest. If there are multiple such values, print the minimum of them.</p>
<p>Sample test(s)<br>input<br>3 1<br>output<br>2<br>input<br>4 3<br>output<br>2<br>Note<br>In the first sample test: Andrew wins if c is equal to 2 or 3. The probability that Andrew wins is 2 / 3. If Andrew chooses a = 3, the probability of winning will be 1 / 3. If a = 1, the probability of winning is 0.</p>
<p>In the second sample test: Andrew wins if c is equal to 1 and 2. The probability that Andrew wins is 1 / 2. For other choices of a the probability of winning is less.</p>
<h3 id="题解-1">题解</h3><p>简单题，就是hack点太多，1，1；5，3；</p>
<h2 id="<!-￼1->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;algorithm&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m,n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>) <span class="built_in">cout</span>&lt;&lt;<span class="string">"1"</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span> &#123;<span class="keyword">if</span>(m-<span class="number">1</span>&gt;=n-m)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;m-<span class="number">1</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;m+<span class="number">1</span>&lt;&lt;endl;&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="C-_Replacement"><a href="http://codeforces.com/contest/570/problem/C" target="_blank" rel="external">C. Replacement</a></h2><p>Daniel has a string s, consisting of lowercase English letters and period signs (characters ‘.’). Let’s define the operation of replacement as the following sequence of steps: find a substring “..” (two consecutive periods) in string s, of all occurrences of the substring let’s choose the first one, and replace this substring with string “.”. In other words, during the replacement operation, the first two consecutive periods are replaced by one. If string s contains no two consecutive periods, then nothing happens.</p>
<p>Let’s define f(s) as the minimum number of operations of replacement to perform, so that the string does not have any two consecutive periods left.</p>
<p>You need to process m queries, the i-th results in that the character at position xi (1 ≤ xi ≤ n) of string s is assigned value ci. After each operation you have to calculate and output the value of f(s).</p>
<p>Help Daniel to process all queries.</p>
<p>Input<br>The first line contains two integers n and m (1 ≤ n, m ≤ 300 000) the length of the string and the number of queries.</p>
<p>The second line contains string s, consisting of n lowercase English letters and period signs.</p>
<p>The following m lines contain the descriptions of queries. The i-th line contains integer xi and ci (1 ≤ xi ≤ n, ci — a lowercas English letter or a period sign), describing the query of assigning symbol ci to position xi.</p>
<p>Output<br>Print m numbers, one per line, the i-th of these numbers must be equal to the value of f(s) after performing the i-th assignment.</p>
<p>Sample test(s)<br>input<br>10 3<br>.b..bz….<br>1 h<br>3 c<br>9 f<br>output<br>4<br>3<br>1<br>input<br>4 4<br>.cc.<br>2 .<br>3 .<br>2 a<br>1 a<br>output<br>1<br>3<br>1<br>1<br>Note<br>Note to the first sample test (replaced periods are enclosed in square brackets).</p>
<p>The original string is “.b..bz….”.</p>
<p>after the first query f(hb..bz….) = 4    (“hb[..]bz….”  →  “hb.bz[..]..”  →  “hb.bz[..].”  →  “hb.bz[..]”  →  “hb.bz.”)<br>after the second query f(hbс.bz….) = 3    (“hbс.bz[..]..”  →  “hbс.bz[..].”  →  “hbс.bz[..]”  →  “hbс.bz.”)<br>after the third query f(hbс.bz..f.) = 1    (“hbс.bz[..]f.”  →  “hbс.bz.f.”)<br>Note to the second sample test.</p>
<p>The original string is “.cc.”.</p>
<p>after the first query: f(..c.) = 1    (“[..]c.”  →  “.c.”)<br>after the second query: f(….) = 3    (“[..]..”  →  “[..].”  →  “[..]”  →  “.”)<br>after the third query: f(.a..) = 1    (“.a[..]”  →  “.a.”)<br>after the fourth query: f(aa..) = 1    (“aa[..]”  →  “aa.”)</p>
<h3 id="题解-2">题解</h3><p>开始的时候妄图搜多遍，结果T了。其实只要搜第一遍，后面的是要更行就好。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">    <span class="keyword">int</span> ind;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    m--;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">      <span class="built_in">cin</span>&gt;&gt;ind&gt;&gt;c;</span><br><span class="line">      s[ind-<span class="number">1</span>]=c;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.size()-<span class="number">1</span>;i++)</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="string">'.'</span>&amp;&amp;s[i+<span class="number">1</span>]==<span class="string">'.'</span>)</span><br><span class="line">        ans++;</span><br><span class="line">      <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">      <span class="keyword">while</span>(m--)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="built_in">cin</span>&gt;&gt;ind&gt;&gt;c;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span>(c==<span class="string">'.'</span>&amp;&amp;(s[ind-<span class="number">1</span>]!=<span class="string">'.'</span>)&amp;&amp;s[ind-<span class="number">2</span>]==<span class="string">'.'</span>&amp;&amp;s[ind]==<span class="string">'.'</span>)</span><br><span class="line">            ans+=<span class="number">2</span>;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span>((c==<span class="string">'.'</span>&amp;&amp;(s[ind-<span class="number">1</span>]!=<span class="string">'.'</span>)&amp;&amp;s[ind-<span class="number">2</span>]==<span class="string">'.'</span>&amp;&amp;(s[ind]!=<span class="string">'.'</span>))||(c==<span class="string">'.'</span>&amp;&amp;(s[ind-<span class="number">1</span>]!=<span class="string">'.'</span>)&amp;&amp;s[ind]==<span class="string">'.'</span>&amp;&amp;(s[ind-<span class="number">2</span>]!=<span class="string">'.'</span>)))</span><br><span class="line">            ans++;</span><br><span class="line">           <span class="keyword">else</span> <span class="keyword">if</span>((c!=<span class="string">'.'</span>)&amp;&amp;(s[ind-<span class="number">1</span>]==<span class="string">'.'</span>)&amp;&amp;s[ind-<span class="number">2</span>]==<span class="string">'.'</span>&amp;&amp;s[ind]==<span class="string">'.'</span>)</span><br><span class="line">            ans-=<span class="number">2</span>;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span>(((c!=<span class="string">'.'</span>)&amp;&amp;(s[ind-<span class="number">1</span>]==<span class="string">'.'</span>)&amp;&amp;s[ind-<span class="number">2</span>]==<span class="string">'.'</span>&amp;&amp;(s[ind]!=<span class="string">'.'</span>))||((c!=<span class="string">'.'</span>)&amp;&amp;(s[ind-<span class="number">1</span>]==<span class="string">'.'</span>)&amp;&amp;s[ind]==<span class="string">'.'</span>&amp;&amp;(s[ind-<span class="number">2</span>]!=<span class="string">'.'</span>)))</span><br><span class="line">            ans--;</span><br><span class="line">            s[ind-<span class="number">1</span>]=c;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">-------</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="A-_Elections"><a href="http://codeforces.com/contest/570/problem/A">A. Elections</a></h2><p>The country of Byalechinsk is running elections involving n candidates. The country consists of m cities. We know how many people in each city voted for each candidate.</p>
<p>The electoral system in the country is pretty unusual. At the first stage of elections the votes are counted for each city: it is assumed that in each city won the candidate who got the highest number of votes in this city, and if several candidates got the maximum number of votes, then the winner is the one with a smaller index.</p>
<p>At the second stage of elections the winner is determined by the same principle over the cities: the winner of the elections is the candidate who won in the maximum number of cities, and among those who got the maximum number of cities the winner is the one with a smaller index.</p>
<p>Determine who will win the elections.<br>]]>
    
    </summary>
    
      <category term="codeforces" scheme="http://guoyuxiang.com/tags/codeforces/"/>
    
      <category term="题解" scheme="http://guoyuxiang.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="codeforces" scheme="http://guoyuxiang.com/categories/codeforces/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BestCoder Round #14]]></title>
    <link href="http://guoyuxiang.com/2015/08/12/BestCoder-Round-14/"/>
    <id>http://guoyuxiang.com/2015/08/12/BestCoder-Round-14/</id>
    <published>2015-08-12T13:43:49.000Z</published>
    <updated>2015-08-12T13:50:17.660Z</updated>
    <content type="html"><![CDATA[<h2 id="1001_Harry_And_Physical_Teacher"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5066" target="_blank" rel="external">1001 Harry And Physical Teacher</a></h2><p>Problem Description<br>As we all know, Harry Porter learns magic at Hogwarts School. However, learning magical knowledge alone is insufficient to become a great magician. Sometimes, Harry also has to gain knowledge from other certain subjects, such as language, mathematics, English, and even algorithm.<br>Today, Harry’s physical teacher set him a difficult problem: if a small ball moving with a speed V0 made a completely elastic collision with a car moving towards the same direction with a speed V(V&lt;V0), and the car far outweighs the ball, what was the speed of the small ball after the collision?<br>This problem was so difficult that Harry hasn’t figure out how to solve it. Therefore, he asks you for help. Could you do him this favor?<br><a id="more"></a><br>Input<br>They are several test cases, you should process to the end of file.<br>There are two integers V and V0 for each test case. All the integers are 32-bit signed non-negative integers.</p>
<p>Output<br>For each test case, just output one line that contains an integer indicate the speed of the small ball after the collision.</p>
<p>Sample Input<br>0 10</p>
<p>Sample Output<br>-10</p>
<h3 id="题解">题解</h3><p>简单物理问题，完全弹性碰撞</p>
<h2 id="<!-￼0->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  <span class="keyword">long</span> <span class="keyword">long</span> a,b;</span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b)</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;<span class="number">2</span>*a-b&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="1002_Harry_And_Dig_Machine"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5067" target="_blank" rel="external">1002 Harry And Dig Machine</a></h2><p>Problem Description<br>  As we all know, Harry Porter learns magic at Hogwarts School. However, learning magical knowledge alone is insufficient to become a great magician. Sometimes, Harry also has to gain knowledge from other certain subjects, such as language, mathematics, English, and even algorithm.<br>  Dumbledore, the headmaster of Hogwarts, is planning to construct a new teaching building in his school. The area he selects can be considered as an n*m grid, some (but no more than ten) cells of which might contain stones. We should remove the stones there in order to save place for the teaching building. However, the stones might be useful, so we just move them to the top-left cell. Taking it into account that Harry learned how to operate dig machine in Lanxiang School several years ago, Dumbledore decides to let him do this job and wants it done as quickly as possible. Harry needs one unit time to move his dig machine from one cell to the adjacent one. Yet skilled as he is, it takes no time for him to move stones into or out of the dig machine, which is big enough to carry infinite stones. Given Harry and his dig machine at the top-left cell in the beginning, if he wants to optimize his work, what is the minimal time Harry needs to finish it?</p>
<p>Input<br>They are sever test cases, you should process to the end of file.<br>For each test case, there are two integers n and m.(1≤n,m≤50).<br>The next n line, each line contains m integer. The j-th number of ith line a[i][j] means there are a[i][j] stones on the jth cell of the ith line.( 0≤a[i][j]≤100 , and no more than 10 of a[i][j] will be positive integer).</p>
<p>Output<br>For each test case, just output one line that contains an integer indicate the minimal time that Harry can finish his job.</p>
<p>Sample Input<br>3 3<br>0 0 0<br>0 100 0<br>0 0 0<br>2 2<br>1 1<br>1 1</p>
<p>Sample Output<br>4<br>4</p>
<h3 id="题解-1">题解</h3><p>题目大意是图中不多于10个点，从原点开始遍历完以后求路径最小。由于点数较少，所以暴力枚举即可。最多为10！</p>
<h2 id="<!-￼1->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;algorithm&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">struct</span> node</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">&#125;dian[<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> maps[<span class="number">50</span>][<span class="number">50</span>];</span><br><span class="line">  <span class="keyword">int</span> n,m;</span><br><span class="line">   <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">int</span> k=<span class="number">0</span>,a;</span><br><span class="line">       <span class="keyword">int</span> ans=<span class="number">0x7fffffff</span>;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">           <span class="keyword">if</span>(a)</span><br><span class="line">           &#123;</span><br><span class="line">               dian[k].x=i;</span><br><span class="line">               dian[k++].y=j;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">int</span> num[k];</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++)</span><br><span class="line">        num[i]=i;</span><br><span class="line">        <span class="keyword">int</span> i,flag=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">do</span></span><br><span class="line">       &#123;  <span class="keyword">int</span> flag=<span class="number">0</span>,path=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;k;i++)</span><br><span class="line">       &#123;</span><br><span class="line">           path+=(<span class="built_in">abs</span>(dian[num[i]].x-dian[num[i-<span class="number">1</span>]].x)+<span class="built_in">abs</span>(dian[num[i]].y-dian[num[i-<span class="number">1</span>]].y));</span><br><span class="line">           <span class="keyword">if</span>(path&gt;=ans)&#123;flag=<span class="number">1</span>;<span class="keyword">break</span>;&#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span>(flag)    <span class="keyword">continue</span>;</span><br><span class="line">       path+=(dian[num[i-<span class="number">1</span>]].x+dian[num[i-<span class="number">1</span>]].y+dian[num[<span class="number">0</span>]].x+dian[num[<span class="number">0</span>]].y);</span><br><span class="line">          ans=min(ans,path);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">while</span>(next_permutation(num,num+k));</span><br><span class="line">       <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="1001_Harry_And_Physical_Teacher"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5066">1001 Harry And Physical Teacher</a></h2><p>Problem Description<br>As we all know, Harry Porter learns magic at Hogwarts School. However, learning magical knowledge alone is insufficient to become a great magician. Sometimes, Harry also has to gain knowledge from other certain subjects, such as language, mathematics, English, and even algorithm.<br>Today, Harry’s physical teacher set him a difficult problem: if a small ball moving with a speed V0 made a completely elastic collision with a car moving towards the same direction with a speed V(V&lt;V0), and the car far outweighs the ball, what was the speed of the small ball after the collision?<br>This problem was so difficult that Harry hasn’t figure out how to solve it. Therefore, he asks you for help. Could you do him this favor?<br>]]>
    
    </summary>
    
      <category term="bestcoder" scheme="http://guoyuxiang.com/tags/bestcoder/"/>
    
      <category term="题解" scheme="http://guoyuxiang.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="bestcoder" scheme="http://guoyuxiang.com/categories/bestcoder/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Codeforces Round #315 (Div. 2)]]></title>
    <link href="http://guoyuxiang.com/2015/08/12/Codeforces-Round-315-Div-2/"/>
    <id>http://guoyuxiang.com/2015/08/12/Codeforces-Round-315-Div-2/</id>
    <published>2015-08-12T01:50:42.000Z</published>
    <updated>2015-08-12T02:10:44.417Z</updated>
    <content type="html"><![CDATA[<h2 id="A-_Music"><a href="http://codeforces.com/contest/569/problem/A" target="_blank" rel="external">A. Music</a></h2><p>ittle Lesha loves listening to music via his smartphone. But the smartphone doesn’t have much memory, so Lesha listens to his favorite songs in a well-known social network InTalk.</p>
<p>Unfortunately, internet is not that fast in the city of Ekaterinozavodsk and the song takes a lot of time to download. But Lesha is quite impatient. The song’s duration is T seconds. Lesha downloads the first S seconds of the song and plays it. When the playback reaches the point that has not yet been downloaded, Lesha immediately plays the song from the start (the loaded part of the song stays in his phone, and the download is continued from the same place), and it happens until the song is downloaded completely and Lesha listens to it to the end. For q seconds of real time the Internet allows you to download q - 1 seconds of the track.</p>
<p>Tell Lesha, for how many times he will start the song, including the very first start.<br><a id="more"></a><br>Input<br>The single line contains three integers T,S,q (2≤q≤10^4, 1≤S&lt;T≤10^5).</p>
<p>Output<br>Print a single integer — the number of times the song will be restarted.</p>
<p>Sample test(s)<br>input<br>5 2 2<br>output<br>2<br>input<br>5 4 7<br>output<br>1<br>input<br>6 2 3<br>output<br>1<br>Note<br>In the first test, the song is played twice faster than it is downloaded, which means that during four first seconds Lesha reaches the moment that has not been downloaded, and starts the song again. After another two seconds, the song is downloaded completely, and thus, Lesha starts the song twice.</p>
<p>In the second test, the song is almost downloaded, and Lesha will start it only once.</p>
<p>In the third sample test the download finishes and Lesha finishes listening at the same moment. Note that song isn’t restarted in this case.</p>
<h3 id="题解">题解</h3><p>题意给出，下载一首歌，刚开始下载s,然后，当听的时候有q,同步下载的为q -1 ,当听到没有下载的时候，就会回退到刚开始，要求，返回头的次<br>数。<br>列方程听到t的时候，刚好听到没下载的位置。得 s + (q -1 ) <em> t = q </em> t;所以t = s;听到q * s的时候，就要回退开始，统计一下就可以了。</p>
<h2 id="<!-￼0->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,s,q;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t&gt;&gt;s&gt;&gt;q;</span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(s&lt;t)</span><br><span class="line">    &#123;</span><br><span class="line">        s*=q;</span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;num&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="B-_Inventory"><a href="http://codeforces.com/contest/569/problem/B" target="_blank" rel="external">B. Inventory</a></h2><p>Companies always have a lot of equipment, furniture and other things. All of them should be tracked. To do this, there is an inventory number assigned with each item. It is much easier to create a database by using those numbers and keep the track of everything.</p>
<p>During an audit, you were surprised to find out that the items are not numbered sequentially, and some items even share the same inventory number! There is an urgent need to fix it. You have chosen to make the numbers of the items sequential, starting with 1. Changing a number is quite a time-consuming process, and you would like to make maximum use of the current numbering.</p>
<p>You have been given information on current inventory numbers for n items in the company. Renumber items so that their inventory numbers form a permutation of numbers from 1 to n by changing the number of as few items as possible. Let us remind you that a set of n numbers forms a permutation if all the numbers are in the range from 1 to n, and no two numbers are equal.</p>
<p>Input<br>The first line contains a single integer n — the number of items (1 ≤ n ≤ 105).</p>
<p>The second line contains n numbers a1, a2, …, an (1 ≤ ai ≤ 105) — the initial inventory numbers of the items.</p>
<p>Output<br>Print n numbers — the final inventory numbers of the items in the order they occur in the input. If there are multiple possible answers, you may print any of them.</p>
<p>Sample test(s)<br>input<br>3<br>1 3 2<br>output<br>1 3 2<br>input<br>4<br>2 2 3 3<br>output<br>2 1 3 4<br>input<br>1<br>2<br>output<br>1<br>Note<br>In the first test the numeration is already a permutation, so there is no need to change anything.</p>
<p>In the second test there are two pairs of equal numbers, in each pair you need to replace one number.</p>
<p>In the third test you need to replace 2 by 1, as the numbering should start from one.</p>
<h3 id="题解-1">题解</h3><p>给n个数，变其中最少的数，使得数列里的数为1~n。刚开始没有考虑大于n的情况，wa掉一发</p>
<h2 id="<!-￼1->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;algorithm&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">struct</span> node</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> shu,pos;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.shu&lt;b.shu;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(node a,node b)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.pos&lt;b.pos;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">         <span class="built_in">cout</span>&lt;&lt;<span class="string">'1'</span>&lt;&lt;endl;<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">   node num[n];</span><br><span class="line">   <span class="keyword">int</span> ind[<span class="number">100005</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="built_in">cin</span>&gt;&gt;num[i].shu;</span><br><span class="line">       <span class="keyword">if</span>(num[i].shu&gt;n)   num[i].shu=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">if</span>(ind[num[i].shu]==<span class="number">1</span>)   num[i].shu=<span class="number">0</span>;</span><br><span class="line">       ind[num[i].shu]=<span class="number">1</span>;</span><br><span class="line">       num[i].pos=i;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    sort(num,num+n,cmp);</span><br><span class="line"><span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="keyword">if</span>(ind[i]!=<span class="number">1</span>)  num[k++].shu=i;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">   sort(num,num+n,cmp1);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;num[i].shu&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="A-_Music"><a href="http://codeforces.com/contest/569/problem/A">A. Music</a></h2><p>ittle Lesha loves listening to music via his smartphone. But the smartphone doesn’t have much memory, so Lesha listens to his favorite songs in a well-known social network InTalk.</p>
<p>Unfortunately, internet is not that fast in the city of Ekaterinozavodsk and the song takes a lot of time to download. But Lesha is quite impatient. The song’s duration is T seconds. Lesha downloads the first S seconds of the song and plays it. When the playback reaches the point that has not yet been downloaded, Lesha immediately plays the song from the start (the loaded part of the song stays in his phone, and the download is continued from the same place), and it happens until the song is downloaded completely and Lesha listens to it to the end. For q seconds of real time the Internet allows you to download q - 1 seconds of the track.</p>
<p>Tell Lesha, for how many times he will start the song, including the very first start.<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[BestCoder Round #13]]></title>
    <link href="http://guoyuxiang.com/2015/08/12/BestCoder-Round-13/"/>
    <id>http://guoyuxiang.com/2015/08/12/BestCoder-Round-13/</id>
    <published>2015-08-12T01:13:57.000Z</published>
    <updated>2015-08-12T01:43:56.683Z</updated>
    <content type="html"><![CDATA[<h2 id="1001_Beautiful_Palindrome_Number"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5062" target="_blank" rel="external">1001 Beautiful Palindrome Number</a></h2><p>Problem Description<br>A positive integer x can represent as (a1a2…akak…a2a1)10 or (a1a2…ak−1akak−1…a2a1)10 of a 10-based notational system, we always call x is a Palindrome Number. If it satisfies 0<a1<a2<…<ak≤9, 1="" we="" call="" x="" is="" a="" beautiful="" palindrome="" number.="" now,="" want="" to="" know="" how="" many="" numbers="" are="" between="" and="" 10n.="" <a="" id="more"><br>Input<br>The first line in the input file is an integer T(1≤T≤7), indicating the number of test cases.<br>Then T lines follow, each line represent an integer N(0≤N≤6).</a1<a2<…<ak≤9,></p>
<p>Output<br>For each test case, output the number of Beautiful Palindrome Number.</p>
<p>Sample Input<br>2<br>1<br>6</p>
<p>Sample Output<br>9<br>258</p>
<h3 id="题解">题解</h3><p>测试样例太水了只有6组样例所以就直接手算打表了</p>
<h2 id="<!-￼0->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;fstream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> f[<span class="number">9</span>]=&#123;<span class="number">1</span>,<span class="number">9</span>,<span class="number">18</span>,<span class="number">54</span>,<span class="number">90</span>,<span class="number">174</span>,<span class="number">258</span>&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> t,n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;f[n]&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="1002_Operation_the_Sequence"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5063" target="_blank" rel="external">1002 Operation the Sequence</a></h2><p>Problem Description<br>You have an array consisting of n integers: a1=1,a2=2,a3=3,…,an=n. Then give you m operators, you should process all the operators in order. Each operator is one of four types:<br>Type1: O 1 call fun1();<br>Type2: O 2 call fun2();<br>Type3: O 3 call fun3();<br>Type4: Q i query current value of a[i], this operator will have at most 50.<br>Global Variables: a[1…n],b[1…n];<br>fun1() {<br>index=1;<br>  for(i=1; i&lt;=n; i +=2)<br>    b[index++]=a[i];<br>  for(i=2; i&lt;=n; i +=2)<br>    b[index++]=a[i];<br>  for(i=1; i&lt;=n; ++i)<br>    a[i]=b[i];<br>}<br>fun2() {<br>  L = 1;R = n;<br>  while(L&lt;R) {<br>    Swap(a[L], a[R]);<br>    ++L;—R;<br>  }<br>}<br>fun3() {<br>  for(i=1; i&lt;=n; ++i)<br>    a[i]=a[i]*a[i];<br>}</p>
<p>Input<br>The first line in the input file is an integer T(1≤T≤20), indicating the number of test cases.<br>The first line of each test case contains two integer n(0&lt;n≤100000), m(0&lt;m≤100000).<br>Then m lines follow, each line represent an operator above.</p>
<p>Output<br>For each test case, output the query values, the values may be so large, you just output the values mod 1000000007(1e9+7).</p>
<p>Sample Input<br>1<br>3 5<br>O 1<br>O 2<br>Q 1<br>O 3<br>Q 1</p>
<p>Sample Output<br>2<br>4</p>
<h3 id="题解-1">题解</h3><p>模拟题，关键是操作数太多，给定一个数列，函数1把奇数位置抽出放在最前面，函数2左右交换数列，函数3乘方，还有一个查询，查询次数较少为50，所以考虑从查询回溯回去，减少时间复杂度。</p>
<h2 id="<!-￼1->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;vector&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> s;</span><br><span class="line">        <span class="keyword">int</span> x,n,m,cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        <span class="keyword">while</span>(m--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;s&gt;&gt;x;</span><br><span class="line">            <span class="keyword">if</span>(s==<span class="string">"O"</span>)</span><br><span class="line">            v.push_back(x);</span><br><span class="line">            <span class="keyword">if</span>(s==<span class="string">"Q"</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> i,ind=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(i=v.size()-<span class="number">1</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(v[i]==<span class="number">3</span>)</span><br><span class="line">                        ind++;</span><br><span class="line">                    <span class="keyword">if</span>(v[i]==<span class="number">2</span>)</span><br><span class="line">                        x=n+<span class="number">1</span>-x;</span><br><span class="line">                    <span class="keyword">if</span>(v[i]==<span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>(n&amp;<span class="number">1</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">if</span>(x&lt;=(n+<span class="number">1</span>)/<span class="number">2</span>)</span><br><span class="line">                                x=x*<span class="number">2</span>-<span class="number">1</span>;</span><br><span class="line">                            <span class="keyword">else</span> x=x*<span class="number">2</span>-n-<span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">if</span>(x&lt;=n/<span class="number">2</span>)</span><br><span class="line">                                x=x*<span class="number">2</span>-<span class="number">1</span>;</span><br><span class="line">                            <span class="keyword">else</span> x=x*<span class="number">2</span>-n;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">long</span> <span class="keyword">long</span> ans=x;</span><br><span class="line">                <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;ind; i++)</span><br><span class="line">                    ans=(ans*ans)%<span class="number">1000000007</span>;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="1001_Beautiful_Palindrome_Number"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5062">1001 Beautiful Palindrome Number</a></h2><p>Problem Description<br>A positive integer x can represent as (a1a2…akak…a2a1)10 or (a1a2…ak−1akak−1…a2a1)10 of a 10-based notational system, we always call x is a Palindrome Number. If it satisfies 0<a1<a2<…<ak≤9, we call x is a Beautiful Palindrome Number.
Now, we want to know how many Beautiful Palindrome Numbers are between 1 and 10N.]]>
    
    </summary>
    
      <category term="bestcoder" scheme="http://guoyuxiang.com/tags/bestcoder/"/>
    
      <category term="题解" scheme="http://guoyuxiang.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="bestcoder" scheme="http://guoyuxiang.com/categories/bestcoder/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BestCoder Round #50 (div.2)]]></title>
    <link href="http://guoyuxiang.com/2015/08/10/BestCoder-Round-50-div-2/"/>
    <id>http://guoyuxiang.com/2015/08/10/BestCoder-Round-50-div-2/</id>
    <published>2015-08-10T02:20:28.000Z</published>
    <updated>2015-08-10T06:05:34.114Z</updated>
    <content type="html"><![CDATA[<h2 id="1001_Distribution_money"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5364" target="_blank" rel="external">1001 Distribution money</a></h2><p>问题描述<br>地主小花难得当一回好人，这次她准备给长工们发津贴。有些长工会偷偷地在领完津贴后又排回队伍里去领津贴。不过小花对此表示无所谓，因为她发的是固定数额的津贴。但是如果有人领到的津贴超过其他所有人的总和的话，小花为了显示自己的公正，会去惩罚他。现已知每个来领津贴的人会登记下自己的工号。<br>输入描述<br>输入有多组数据，每组第一行为一个n(1 &lt; = n &lt; = 1000)，表示有多少津贴被领，第二行n个数字a1,a2…an，表示n个来领津贴的人的工号（0 &lt; = a[i] &lt; 10000）。<br><a id="more"></a><br>输出描述<br>输出一个数字，表示被惩罚的人的工号。<br>若没有人需要被惩罚，则输出-1。<br>输入样例<br>3<br>1 1 2<br>4<br>2 1 4 3<br>输出样例<br>1<br>-1<br>Hint<br>第一个样例中，1号工人拿走的钱超过其他所有人总和，所以输出1。<br>第二个样例中，没有拿到的钱超过其他所有人的总和，所以输出-1.</p>
<h3 id="题解">题解</h3><p>某个人领的工资不能超过其他人的总和，数据上限不是很大我就直接用数组存了~每份钱都是一样的最后判断有没有某人超一半就好。</p>
<h2 id="<!-￼0->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">10001</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;t)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> num[t],flag=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;t;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;num[i];</span><br><span class="line">            vis[num[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(t%<span class="number">2</span>)</span><br><span class="line">         &#123; <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10001</span>;i++)</span><br><span class="line">        <span class="keyword">if</span>(vis[i]&gt;=t/<span class="number">2</span>)  &#123;<span class="built_in">cout</span>&lt;&lt;i&lt;&lt;endl;flag=<span class="number">0</span>;<span class="keyword">break</span>;&#125;&#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">            &#123;<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10001</span>;i++)</span><br><span class="line">          <span class="keyword">if</span>(vis[i]&gt;t/<span class="number">2</span>)    &#123;<span class="built_in">cout</span>&lt;&lt;i&lt;&lt;endl;flag=<span class="number">0</span>;<span class="keyword">break</span>;&#125;&#125;</span><br><span class="line">          <span class="keyword">if</span>(flag)   <span class="built_in">cout</span>&lt;&lt;<span class="string">"-1"</span>&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="1002_Run"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5365" target="_blank" rel="external">1002 Run</a></h2><p>问题描述<br>小花是一个热爱健身的姑娘，这天她下载了一个跑步软件，这个软件可以记录下小花跑步的轨迹。小花决定去公园跑步。公园里有许许多多的座椅，小花希望在一些座椅休息一下，并且她在两条座椅之间只跑直线。小花是一个完美主义者，她希望自己最后的轨迹是一个正三边形或者正四边形或者正五边形或者正六边形。小花会从某条座椅开始打开跑步软件，并在回到这个座椅后关闭。<br>请问小花有多少种跑法。注：若两种跑法经过的座椅集合相同则认为是一种跑法。且经过一条座椅时没有必要一定停下来<br>输入描述<br>输入有多组数据<br>每组数据第一行为一个n（1 &lt; = n &lt; = 20）表示座椅数量<br>接下来n行，每行两个整数xi,yi(0 &lt; = xi,yi &lt; = 8)表示座椅的坐标<br>输出描述<br>输出方案数<br>输入样例<br>4<br>0 0<br>0 1<br>1 0<br>1 1<br>输出样例<br>1</p>
<h3 id="题解-1">题解</h3><p>细想还正是，坐标上的点不可能组成正三角形，正五边形，正六边形的……所以暴力枚举每四个点判断能不能组成正方形就好<br><figure class="highlight stata"><figcaption><span>c++文件输入输出</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#<span class="keyword">include</span>&lt;fstream&gt;</span><br><span class="line">istream <span class="keyword">in</span>(<span class="string">"in.txt"</span>);</span><br><span class="line">ostream <span class="keyword">out</span>(<span class="string">"out.txt"</span>);</span><br><span class="line"><span class="keyword">in</span>.<span class="keyword">close</span>();</span><br><span class="line"><span class="keyword">out</span>.<span class="keyword">close</span>();</span><br></pre></td></tr></table></figure></p>
<h2 id="<!-￼2->"><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">#<span class="atom">include</span> &lt;<span class="atom">iostream</span>&gt;</span><br><span class="line">#<span class="atom">include</span>&lt;<span class="atom">cstring</span>&gt;</span><br><span class="line">#<span class="atom">include</span>&lt;<span class="atom">algorithm</span>&gt;</span><br><span class="line">#<span class="atom">include</span>&lt;<span class="atom">fstream</span>&gt;</span><br><span class="line"><span class="atom">using</span> <span class="atom">namespace</span> <span class="atom">std</span>;</span><br><span class="line"><span class="atom">int</span> <span class="atom">ans</span>;</span><br><span class="line">//<span class="atom">ofstream</span> <span class="atom">f1</span>(<span class="string">"out.txt"</span>);</span><br><span class="line"></span><br><span class="line"><span class="atom">struct</span> <span class="atom">node</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="atom">int</span> <span class="atom">x</span>,<span class="atom">y</span>,<span class="atom">pos</span>;</span><br><span class="line">&#125;<span class="atom">chat</span>[<span class="number">20</span>];</span><br><span class="line"><span class="atom">void</span> <span class="atom">check</span>(<span class="atom">int</span> <span class="atom">a</span>,<span class="atom">int</span> <span class="atom">b</span>,<span class="atom">int</span> <span class="atom">c</span>,<span class="atom">int</span> <span class="atom">d</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="atom">int</span> <span class="atom">vis</span>[<span class="number">6</span>];</span><br><span class="line">    <span class="atom">vis</span>[<span class="number">0</span>]=(<span class="atom">chat</span>[<span class="atom">a</span>].<span class="atom">x</span>-<span class="atom">chat</span>[<span class="atom">b</span>].<span class="atom">x</span>)*(<span class="atom">chat</span>[<span class="atom">a</span>].<span class="atom">x</span>-<span class="atom">chat</span>[<span class="atom">b</span>].<span class="atom">x</span>)+(<span class="atom">chat</span>[<span class="atom">a</span>].<span class="atom">y</span>-<span class="atom">chat</span>[<span class="atom">b</span>].<span class="atom">y</span>)*(<span class="atom">chat</span>[<span class="atom">a</span>].<span class="atom">y</span>-<span class="atom">chat</span>[<span class="atom">b</span>].<span class="atom">y</span>);</span><br><span class="line">    <span class="atom">vis</span>[<span class="number">1</span>]=(<span class="atom">chat</span>[<span class="atom">a</span>].<span class="atom">x</span>-<span class="atom">chat</span>[<span class="atom">c</span>].<span class="atom">x</span>)*(<span class="atom">chat</span>[<span class="atom">a</span>].<span class="atom">x</span>-<span class="atom">chat</span>[<span class="atom">c</span>].<span class="atom">x</span>)+(<span class="atom">chat</span>[<span class="atom">a</span>].<span class="atom">y</span>-<span class="atom">chat</span>[<span class="atom">c</span>].<span class="atom">y</span>)*(<span class="atom">chat</span>[<span class="atom">a</span>].<span class="atom">y</span>-<span class="atom">chat</span>[<span class="atom">c</span>].<span class="atom">y</span>);</span><br><span class="line">    <span class="atom">vis</span>[<span class="number">2</span>]=(<span class="atom">chat</span>[<span class="atom">a</span>].<span class="atom">x</span>-<span class="atom">chat</span>[<span class="atom">d</span>].<span class="atom">x</span>)*(<span class="atom">chat</span>[<span class="atom">a</span>].<span class="atom">x</span>-<span class="atom">chat</span>[<span class="atom">d</span>].<span class="atom">x</span>)+(<span class="atom">chat</span>[<span class="atom">a</span>].<span class="atom">y</span>-<span class="atom">chat</span>[<span class="atom">d</span>].<span class="atom">y</span>)*(<span class="atom">chat</span>[<span class="atom">a</span>].<span class="atom">y</span>-<span class="atom">chat</span>[<span class="atom">d</span>].<span class="atom">y</span>);</span><br><span class="line">    <span class="atom">vis</span>[<span class="number">3</span>]=(<span class="atom">chat</span>[<span class="atom">c</span>].<span class="atom">x</span>-<span class="atom">chat</span>[<span class="atom">b</span>].<span class="atom">x</span>)*(<span class="atom">chat</span>[<span class="atom">c</span>].<span class="atom">x</span>-<span class="atom">chat</span>[<span class="atom">b</span>].<span class="atom">x</span>)+(<span class="atom">chat</span>[<span class="atom">c</span>].<span class="atom">y</span>-<span class="atom">chat</span>[<span class="atom">b</span>].<span class="atom">y</span>)*(<span class="atom">chat</span>[<span class="atom">c</span>].<span class="atom">y</span>-<span class="atom">chat</span>[<span class="atom">b</span>].<span class="atom">y</span>);</span><br><span class="line">    <span class="atom">vis</span>[<span class="number">4</span>]=(<span class="atom">chat</span>[<span class="atom">d</span>].<span class="atom">x</span>-<span class="atom">chat</span>[<span class="atom">b</span>].<span class="atom">x</span>)*(<span class="atom">chat</span>[<span class="atom">d</span>].<span class="atom">x</span>-<span class="atom">chat</span>[<span class="atom">b</span>].<span class="atom">x</span>)+(<span class="atom">chat</span>[<span class="atom">d</span>].<span class="atom">y</span>-<span class="atom">chat</span>[<span class="atom">b</span>].<span class="atom">y</span>)*(<span class="atom">chat</span>[<span class="atom">d</span>].<span class="atom">y</span>-<span class="atom">chat</span>[<span class="atom">b</span>].<span class="atom">y</span>);</span><br><span class="line">    <span class="atom">vis</span>[<span class="number">5</span>]=(<span class="atom">chat</span>[<span class="atom">d</span>].<span class="atom">x</span>-<span class="atom">chat</span>[<span class="atom">c</span>].<span class="atom">x</span>)*(<span class="atom">chat</span>[<span class="atom">d</span>].<span class="atom">x</span>-<span class="atom">chat</span>[<span class="atom">c</span>].<span class="atom">x</span>)+(<span class="atom">chat</span>[<span class="atom">d</span>].<span class="atom">y</span>-<span class="atom">chat</span>[<span class="atom">c</span>].<span class="atom">y</span>)*(<span class="atom">chat</span>[<span class="atom">d</span>].<span class="atom">y</span>-<span class="atom">chat</span>[<span class="atom">c</span>].<span class="atom">y</span>);</span><br><span class="line">    <span class="atom">sort</span>(<span class="atom">vis</span>,<span class="atom">vis</span>+<span class="number">6</span>);</span><br><span class="line">    //<span class="atom">for</span>(<span class="atom">int</span> <span class="atom">i</span>=<span class="number">0</span>;<span class="atom">i</span>&lt;<span class="number">6</span>;<span class="atom">i</span>++)</span><br><span class="line">  // <span class="atom">f1</span>&lt;&lt;<span class="atom">vis</span>[<span class="atom">i</span>]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">    //<span class="atom">f1</span>&lt;&lt;<span class="atom">endl</span>;</span><br><span class="line">    <span class="atom">if</span>(<span class="atom">vis</span>[<span class="number">0</span>]==<span class="atom">vis</span>[<span class="number">1</span>]&amp;&amp;<span class="atom">vis</span>[<span class="number">0</span>]==<span class="atom">vis</span>[<span class="number">2</span>]&amp;&amp;<span class="atom">vis</span>[<span class="number">0</span>]==<span class="atom">vis</span>[<span class="number">3</span>]&amp;&amp;<span class="atom">vis</span>[<span class="number">5</span>]==<span class="atom">vis</span>[<span class="number">4</span>])  <span class="atom">ans</span>++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="atom">int</span> <span class="atom">main</span>()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">   <span class="atom">int</span> <span class="atom">t</span>;</span><br><span class="line">   <span class="atom">while</span>(<span class="atom">cin</span>&gt;&gt;<span class="atom">t</span>)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="atom">for</span>(<span class="atom">int</span> <span class="atom">i</span>=<span class="number">0</span>;<span class="atom">i</span>&lt;<span class="atom">t</span>;<span class="atom">i</span>++)</span><br><span class="line">           <span class="atom">cin</span>&gt;&gt;<span class="atom">chat</span>[<span class="atom">i</span>].<span class="atom">x</span>&gt;&gt;<span class="atom">chat</span>[<span class="atom">i</span>].<span class="atom">y</span>;</span><br><span class="line">       <span class="atom">ans</span>=<span class="number">0</span>;</span><br><span class="line">       <span class="atom">for</span>(<span class="atom">int</span> <span class="atom">i</span>=<span class="number">0</span>;<span class="atom">i</span>&lt;<span class="atom">t</span>-<span class="number">3</span>;<span class="atom">i</span>++)</span><br><span class="line">        <span class="atom">for</span>(<span class="atom">int</span> <span class="atom">k</span>=<span class="atom">i</span>+<span class="number">1</span>;<span class="atom">k</span>&lt;<span class="atom">t</span>-<span class="number">2</span>;<span class="atom">k</span>++)</span><br><span class="line">          <span class="atom">for</span>(<span class="atom">int</span> <span class="atom">j</span>=<span class="atom">k</span>+<span class="number">1</span>;<span class="atom">j</span>&lt;<span class="atom">t</span>-<span class="number">1</span>;<span class="atom">j</span>++)</span><br><span class="line">            <span class="atom">for</span>(<span class="atom">int</span> <span class="atom">x</span>=<span class="atom">j</span>+<span class="number">1</span>;<span class="atom">x</span>&lt;<span class="atom">t</span>;<span class="atom">x</span>++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="atom">if</span>(<span class="atom">i</span>==<span class="atom">k</span>||<span class="atom">i</span>==<span class="atom">j</span>||<span class="atom">i</span>==<span class="atom">x</span>||<span class="atom">k</span>==<span class="atom">j</span>||<span class="atom">k</span>==<span class="atom">x</span>||<span class="atom">j</span>==<span class="atom">x</span>)   <span class="atom">continue</span>;</span><br><span class="line">                //<span class="atom">f1</span>&lt;&lt;<span class="atom">i</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;<span class="atom">k</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;<span class="atom">j</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;<span class="atom">x</span>&lt;&lt;<span class="atom">endl</span>;</span><br><span class="line"></span><br><span class="line">                <span class="atom">check</span>(<span class="atom">i</span>,<span class="atom">k</span>,<span class="atom">j</span>,<span class="atom">x</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">       <span class="atom">cout</span>&lt;&lt;<span class="atom">ans</span>&lt;&lt;<span class="atom">endl</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> //  <span class="atom">f1</span>.<span class="atom">close</span>();</span><br><span class="line">    <span class="atom">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="1003_The_mook_jong"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5366" target="_blank" rel="external">1003 The mook jong</a></h2><p>问题描述<br>ZJiaQ为了强身健体，决定通过木人桩练习武术。ZJiaQ希望把木人桩摆在自家的那个由1<em>1的地砖铺成的1</em>n的院子里。由于ZJiaQ是个强迫症，所以他要把一个木人桩正好摆在一个地砖上，由于木人桩手比较长，所以两个木人桩之间地砖必须大于等于两个，现在ZJiaQ想知道在至少摆放一个木人桩的情况下，有多少种摆法。<br>输入描述<br>输入有多组数据，每组数据第一行为一个整数n(1 &lt; = n &lt; = 60)<br>输出描述<br>对于每组数据输出一行表示摆放方案数<br>输入样例<br>1<br>2<br>3<br>4<br>5<br>6<br>输出样例<br>1<br>2<br>3<br>5<br>8<br>12</p>
<h3 id="题解-2">题解</h3><p>比赛的时候用的DFS打表，然后交表过的……不优越啊=。=令f[i]为最后一个木人桩摆放在i位置的方案，令s[i]为f[i]的前缀和。很容易就能想到f[i]=s[i-3]+1,s[i]=s[i-1]+f[i],而s[n]即是所求答案。本题唯一一个值得注意的点就是当n接近60时会爆int。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">   <span class="keyword">long</span> <span class="keyword">long</span> f[<span class="number">61</span>],s[<span class="number">61</span>];</span><br><span class="line">   <span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">   <span class="built_in">memset</span>(s,<span class="number">0</span>,<span class="keyword">sizeof</span>(s));</span><br><span class="line">   s[<span class="number">1</span>]=<span class="number">1</span>;s[<span class="number">2</span>]=<span class="number">2</span>;s[<span class="number">3</span>]=<span class="number">3</span>;</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">4</span>;i&lt;=<span class="number">60</span>;i++)</span><br><span class="line">   &#123;</span><br><span class="line">       f[i]=s[i-<span class="number">3</span>]+<span class="number">1</span>;</span><br><span class="line">       s[i]=s[i-<span class="number">1</span>]+f[i];</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">int</span> t;</span><br><span class="line">   <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;t)</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;s[t]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>DFS<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> sum;</span><br><span class="line">   <span class="keyword">int</span> t;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x+<span class="number">3</span>&gt;=t)   <span class="keyword">return</span>;</span><br><span class="line">     sum+=(t-x-<span class="number">3</span>);</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">int</span> i=x+<span class="number">3</span>;i&lt;t;i++)</span><br><span class="line">     dfs(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;t)</span><br><span class="line">    &#123;</span><br><span class="line">        sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;t;i++)</span><br><span class="line">            dfs(i);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;sum+t&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>上帝说要有DP，于是我们来发DP</p>
<h2 id="<!-￼5->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> dp[<span class="number">60</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            dp[i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j + <span class="number">3</span> &lt;= i; ++j)</span><br><span class="line">            &#123;</span><br><span class="line">                dp[i] += dp[j];</span><br><span class="line">            &#125;</span><br><span class="line">            ans += dp[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="1001_Distribution_money"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5364">1001 Distribution money</a></h2><p>问题描述<br>地主小花难得当一回好人，这次她准备给长工们发津贴。有些长工会偷偷地在领完津贴后又排回队伍里去领津贴。不过小花对此表示无所谓，因为她发的是固定数额的津贴。但是如果有人领到的津贴超过其他所有人的总和的话，小花为了显示自己的公正，会去惩罚他。现已知每个来领津贴的人会登记下自己的工号。<br>输入描述<br>输入有多组数据，每组第一行为一个n(1 &lt; = n &lt; = 1000)，表示有多少津贴被领，第二行n个数字a1,a2…an，表示n个来领津贴的人的工号（0 &lt; = a[i] &lt; 10000）。<br>]]>
    
    </summary>
    
      <category term="bestcoder" scheme="http://guoyuxiang.com/tags/bestcoder/"/>
    
      <category term="题解" scheme="http://guoyuxiang.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="bestcoder" scheme="http://guoyuxiang.com/categories/bestcoder/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BestCoder Round #12]]></title>
    <link href="http://guoyuxiang.com/2015/08/10/BestCoder-Round-12/"/>
    <id>http://guoyuxiang.com/2015/08/10/BestCoder-Round-12/</id>
    <published>2015-08-10T01:37:23.000Z</published>
    <updated>2015-08-10T01:48:22.876Z</updated>
    <content type="html"><![CDATA[<h2 id="1001_So_easy"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5058" target="_blank" rel="external">1001 So easy</a></h2><p>Problem Description<br>Small W gets two files. There are n integers in each file. Small W wants to know whether these two files are same. So he invites you to write a program to check whether these two files are same. Small W thinks that two files are same when they have the same integer set.<br>For example file A contains (5,3,7,7),and file B contains (7,5,3,3). They have the same integer set (3,5,7), so they are same.<br>Another sample file C contains(2,5,2,5), and file D contains (2,5,2,3).<br><a id="more"></a><br>The integer set of C is (2,5),but the integer set of D is (2,3,5),so they are not same.<br>Now you are expected to write a program to compare two files with size of n.</p>
<p>Input<br>Multi test cases (about 100). Each case contain three lines. The first line contains one integer n represents the size of file. The second line contains n integers a1,a2,a3,…,an - represents the content of the first file. The third line contains n integers b1,b2,b3,…,bn - represents the content of the second file.<br>Process to the end of file.<br>1≤n≤100<br>1≤ai,bi≤1000000000</p>
<p>Output<br>For each case, output “YES” (without quote) if these two files are same, otherwise output “NO” (without quote).</p>
<p>Sample Input<br>3<br>1 1 2<br>1 2 2<br>4<br>5 3 7 7<br>7 5 3 3<br>4<br>2 5 2 3<br>2 5 2 5<br>3<br>1 2 3<br>1 2 4</p>
<p>Sample Output<br>YES<br>YES<br>NO<br>NO</p>
<h3 id="题解">题解</h3><p>简单的SET运用，不难，写的时候脑抽写搓了……</p>
<h2 id="<!-￼0->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;set&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;s1,s2;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n))</span><br><span class="line">    &#123;</span><br><span class="line">        s1.clear();</span><br><span class="line">        s2.clear();</span><br><span class="line">        <span class="keyword">int</span> tt;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;tt);</span><br><span class="line">            s1.insert(tt);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;tt);</span><br><span class="line">            s2.insert(tt);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s1.size() != s2.size())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it1, it2;</span><br><span class="line">        <span class="keyword">for</span>(it1 = s1.begin(),it2 = s2.begin(); it1!=s1.end()&amp;&amp;it2!=s2.end(); it1++,it2++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(*it1 != *it2)</span><br><span class="line">            &#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="1002_Help_him"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5059" target="_blank" rel="external">1002 Help him</a></h2><p>Problem Description<br>As you know, when you want to hack someone’s program, you must submit your test data. However sometimes you will submit invalid data, so we need a data checker to check your data. Now small W has prepared a problem for BC, but he is too busy to write the data checker. Please help him to write a data check which judges whether the input is an integer ranged from a to b (inclusive).<br>Note: a string represents a valid integer when it follows below rules.</p>
<ol>
<li>When it represents a non-negative integer, it contains only digits without leading zeros.</li>
<li>When it represents a negative integer, it contains exact one negative sign (‘-‘) followed by digits without leading zeros and there are no characters before ‘-‘.</li>
<li>Otherwise it is not a valid integer.</li>
</ol>
<p>Input<br>Multi test cases (about 100), every case occupies two lines, the first line contain a string which represents the input string, then second line contains a and b separated by space. Process to the end of file.</p>
<p>Length of string is no more than 100.<br>The string may contain any characters other than ‘\n’,’\r’.<br>-1000000000≤a≤b≤1000000000</p>
<p>Output<br>For each case output “YES” (without quote) when the string is an integer ranged from a to b, otherwise output “NO” (without quote).</p>
<p>Sample Input<br>10<br>-100 100<br>1a0<br>-100 100</p>
<p>Sample Output<br>YES<br>NO</p>
<h3 id="题解-1">题解</h3><p>判断输入的数是否合法，确实如一开始想的那样是一道字符转int，int转字符的题，但是trick其实蛮多的，输入的时候要用getline，要处理末尾空格，要判断0与一堆零的区别，要判断前导零；</p>
<h2 id="<!-￼1->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;sstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">int</span> t,a,b;</span><br><span class="line">   <span class="built_in">string</span> s,s1;</span><br><span class="line">   <span class="keyword">while</span>(getline(<span class="built_in">cin</span>,s))</span><br><span class="line"></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="built_in">stringstream</span> str,str1;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    getchar();</span><br><span class="line">    str&lt;&lt;s;</span><br><span class="line">    str&gt;&gt;t;</span><br><span class="line">    str1&lt;&lt;t;</span><br><span class="line">    str1&gt;&gt;s1;</span><br><span class="line">   <span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">'0'</span>)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">if</span>(s==<span class="string">"0"</span>&amp;&amp;s.size()==<span class="number">1</span>)</span><br><span class="line">       &#123;</span><br><span class="line">         <span class="keyword">if</span>(a&lt;=<span class="number">0</span>&amp;&amp;b&gt;=<span class="number">0</span>)   <span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;endl;</span><br><span class="line">          <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</span><br><span class="line">      <span class="comment">// char c=getchar();</span></span><br><span class="line">       <span class="keyword">continue</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(s==s1&amp;&amp;t&gt;=a&amp;&amp;t&lt;=b)</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;endl;</span><br><span class="line">   <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//</span></span><br><span class="line">   &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="1001_So_easy"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5058">1001 So easy</a></h2><p>Problem Description<br>Small W gets two files. There are n integers in each file. Small W wants to know whether these two files are same. So he invites you to write a program to check whether these two files are same. Small W thinks that two files are same when they have the same integer set.<br>For example file A contains (5,3,7,7),and file B contains (7,5,3,3). They have the same integer set (3,5,7), so they are same.<br>Another sample file C contains(2,5,2,5), and file D contains (2,5,2,3).<br>]]>
    
    </summary>
    
      <category term="bestcoder" scheme="http://guoyuxiang.com/tags/bestcoder/"/>
    
      <category term="题解" scheme="http://guoyuxiang.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="bestcoder" scheme="http://guoyuxiang.com/categories/bestcoder/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2015 Multi-University Training Contest 5 1009 模板]]></title>
    <link href="http://guoyuxiang.com/2015/08/08/2015-Multi-University-Training-Contest-5-1009-%E6%A8%A1%E6%9D%BF/"/>
    <id>http://guoyuxiang.com/2015/08/08/2015-Multi-University-Training-Contest-5-1009-模板/</id>
    <published>2015-08-08T06:30:02.000Z</published>
    <updated>2015-08-08T06:32:22.169Z</updated>
    <content type="html"><![CDATA[<p>题目本身不难，关键是大数模板啊……<a href="http://blog.csdn.net/u013050857/article/details/47280431" target="_blank" rel="external">1009 MZL’s Border</a><br><a id="more"></a></p>
<h2 id="<!-￼0->"><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;cstdio&gt;</span></span><br><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;cstring&gt;</span></span><br><span class="line">//<span class="comment">#include&lt;cstdio&gt;</span></span><br><span class="line">//const int mod=258280327;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line"><span class="comment">#define DIGIT   4      //四位隔开,即万进制</span></span><br><span class="line"><span class="comment">#define DEPTH   10000        //万进制</span></span><br><span class="line"><span class="comment">#define MAX     5000    //题目最大位数/4，要不大直接设为最大位数也行</span></span><br><span class="line">typedef int bignum_t[MAX+1];</span><br><span class="line"></span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span> 读取操作数，对操作数进行处理存储在数组里                             <span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">int read(bignum_t a,istream&amp;is=cin)</span><br><span class="line">&#123;</span><br><span class="line">    char buf[MAX<span class="keyword">*</span>DIGIT+1],ch ;</span><br><span class="line">    int i,j ;</span><br><span class="line">    memset((void<span class="keyword">*</span>)a,0,sizeof(bignum_t));</span><br><span class="line">    if(!(is&gt;&gt;buf))return 0 ;</span><br><span class="line">    for(a[0]=strlen(buf),i=a[0]/2-1; i&gt;=0; i--)</span><br><span class="line">        ch=buf[i],buf[i]=buf[a[0]-1-i],buf[a[0]-1-i]=ch ;</span><br><span class="line">    for(a[0]=(a[0]+DIGIT-1)/DIGIT,j=strlen(buf); j<span class="variable">&lt;a[0]*DIGIT; buf[j++]='0');</span><br><span class="line">    for(i=1; i&lt;=a[0]; i++)</span><br><span class="line">        for(a[i]=0,j=0; j&lt;DIGIT; j++)</span><br><span class="line">            a[i]=a[i]*10+buf[i*DIGIT-1-j]-'0' ;</span><br><span class="line">    for(; !a[a[0]]&amp;&amp;a[0]&gt;</span>1; a[0]--);</span><br><span class="line">    return 1 ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void write(const bignum_t a,ostream&amp;os=cout)</span><br><span class="line">&#123;</span><br><span class="line">    int i,j ;</span><br><span class="line">    for(os<span class="variable">&lt;&lt;a[i=a[0]],i--; i; i--)</span><br><span class="line">        for(j=DEPTH/10; j; j/=10)</span><br><span class="line">            os&lt;&lt;a[i]/j%10 ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int comp(const bignum_t a,const bignum_t b)</span><br><span class="line">&#123;</span><br><span class="line">    int i ;</span><br><span class="line">    if(a[0]!=b[0])</span><br><span class="line">        return a[0]-b[0];</span><br><span class="line">    for(i=a[0]; i; i--)</span><br><span class="line">        if(a[i]!=b[i])</span><br><span class="line">            return a[i]-b[i];</span><br><span class="line">    return 0 ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int comp(const bignum_t a,const int b)</span><br><span class="line">&#123;</span><br><span class="line">    int c[12]=</span><br><span class="line">    &#123;</span><br><span class="line">        1</span><br><span class="line">    &#125;</span><br><span class="line">    ;</span><br><span class="line">    for(c[1]=b; c[c[0]]&gt;</span>=DEPTH; c[c[0]+1]=c[c[0]]/DEPTH,c[c[0]]%=DEPTH,c[0]++);</span><br><span class="line">    return comp(a,c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int comp(const bignum_t a,const int c,const int d,const bignum_t b)</span><br><span class="line">&#123;</span><br><span class="line">    int i,t=0,O=-DEPTH<span class="keyword">*</span>2 ;</span><br><span class="line">    if(b[0]-a[0]<span class="variable">&lt;d&amp;&amp;c)</span><br><span class="line">        return 1 ;</span><br><span class="line">    for(i=b[0]; i&gt;</span>d; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        t=t<span class="keyword">*</span>DEPTH+a[i-d]<span class="keyword">*</span>c-b[i];</span><br><span class="line">        if(t&gt;0)return 1 ;</span><br><span class="line">        if(t<span class="variable">&lt;O)return 0 ;</span><br><span class="line">    &#125;</span><br><span class="line">    for(i=d; i; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        t=t*DEPTH-b[i];</span><br><span class="line">        if(t&gt;</span>0)return 1 ;</span><br><span class="line">        if(t<span class="variable">&lt;O)return 0 ;</span><br><span class="line">    &#125;</span><br><span class="line">    return t&gt;</span>0 ;</span><br><span class="line">&#125;</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span> 大数与大数相加                                                       <span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">void add(bignum_t a,const bignum_t b)</span><br><span class="line">&#123;</span><br><span class="line">    int i ;</span><br><span class="line">    for(i=1; i<span class="variable">&lt;=b[0]; i++)</span><br><span class="line">        if((a[i]+=b[i])&gt;</span>=DEPTH)</span><br><span class="line">            a[i]-=DEPTH,a[i+1]++;</span><br><span class="line">    if(b[0]&gt;=a[0])</span><br><span class="line">        a[0]=b[0];</span><br><span class="line">    else</span><br><span class="line">        for(; a[i]&gt;=DEPTH&amp;&amp;i<span class="variable">&lt;a[0]; a[i]-=DEPTH,i++,a[i]++);</span><br><span class="line">    a[0]+=(a[a[0]+1]&gt;</span>0);</span><br><span class="line">&#125;</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span> 大数与小数相加                                                       <span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">void add(bignum_t a,const int b)</span><br><span class="line">&#123;</span><br><span class="line">    int i=1 ;</span><br><span class="line">    for(a[1]+=b; a[i]&gt;=DEPTH&amp;&amp;i<span class="variable">&lt;a[0]; a[i+1]+=a[i]/DEPTH,a[i]%=DEPTH,i++);</span><br><span class="line">    for(; a[a[0]]&gt;</span>=DEPTH; a[a[0]+1]=a[a[0]]/DEPTH,a[a[0]]%=DEPTH,a[0]++);</span><br><span class="line">&#125;</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span> 大数相减(被减数&gt;=减数)                                               <span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">void sub(bignum_t a,const bignum_t b)</span><br><span class="line">&#123;</span><br><span class="line">    int i ;</span><br><span class="line">    for(i=1; i<span class="variable">&lt;=b[0]; i++)</span><br><span class="line">        if((a[i]-=b[i])&lt;0)</span><br><span class="line">            a[i+1]--,a[i]+=DEPTH ;</span><br><span class="line">    for(; a[i]&lt;0; a[i]+=DEPTH,i++,a[i]--);</span><br><span class="line">    for(; !a[a[0]]&amp;&amp;a[0]&gt;</span>1; a[0]--);</span><br><span class="line">&#125;</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span> 大数减去小数(被减数&gt;=减数)                                           <span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">void sub(bignum_t a,const int b)</span><br><span class="line">&#123;</span><br><span class="line">    int i=1 ;</span><br><span class="line">    for(a[1]-=b; a[i]<span class="variable">&lt;0; a[i+1]+=(a[i]-DEPTH+1)/DEPTH,a[i]-=(a[i]-DEPTH+1)/DEPTH*DEPTH,i++);</span><br><span class="line">    for(; !a[a[0]]&amp;&amp;a[0]&gt;</span>1; a[0]--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void sub(bignum_t a,const bignum_t b,const int c,const int d)</span><br><span class="line">&#123;</span><br><span class="line">    int i,O=b[0]+d ;</span><br><span class="line">    for(i=1+d; i<span class="variable">&lt;=O; i++)</span><br><span class="line">        if((a[i]-=b[i-d]*c)&lt;0)</span><br><span class="line">            a[i+1]+=(a[i]-DEPTH+1)/DEPTH,a[i]-=(a[i]-DEPTH+1)/DEPTH*DEPTH ;</span><br><span class="line">    for(; a[i]&lt;0; a[i+1]+=(a[i]-DEPTH+1)/DEPTH,a[i]-=(a[i]-DEPTH+1)/DEPTH*DEPTH,i++);</span><br><span class="line">    for(; !a[a[0]]&amp;&amp;a[0]&gt;</span>1; a[0]--);</span><br><span class="line">&#125;</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span> 大数相乘，读入被乘数a，乘数b，结果保存在c[]                          <span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">void mul(bignum_t c,const bignum_t a,const bignum_t b)</span><br><span class="line">&#123;</span><br><span class="line">    int i,j ;</span><br><span class="line">    memset((void<span class="keyword">*</span>)c,0,sizeof(bignum_t));</span><br><span class="line">    for(c[0]=a[0]+b[0]-1,i=1; i<span class="variable">&lt;=a[0]; i++)</span><br><span class="line">        for(j=1; j&lt;=b[0]; j++)</span><br><span class="line">            if((c[i+j-1]+=a[i]*b[j])&gt;</span>=DEPTH)</span><br><span class="line">                c[i+j]+=c[i+j-1]/DEPTH,c[i+j-1]%=DEPTH ;</span><br><span class="line">    for(c[0]+=(c[c[0]+1]&gt;0); !c[c[0]]&amp;&amp;c[0]&gt;1; c[0]--);</span><br><span class="line">&#125;</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span> 大数乘以小数，读入被乘数a，乘数b，结果保存在被乘数                   <span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">void mul(bignum_t a,const int b)</span><br><span class="line">&#123;</span><br><span class="line">    int i ;</span><br><span class="line">    for(a[1]<span class="keyword">*</span>=b,i=2; i<span class="variable">&lt;=a[0]; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i]*=b ;</span><br><span class="line">        if(a[i-1]&gt;</span>=DEPTH)</span><br><span class="line">            a[i]+=a[i-1]/DEPTH,a[i-1]%=DEPTH ;</span><br><span class="line">    &#125;</span><br><span class="line">    for(; a[a[0]]&gt;=DEPTH; a[a[0]+1]=a[a[0]]/DEPTH,a[a[0]]%=DEPTH,a[0]++);</span><br><span class="line">    for(; !a[a[0]]&amp;&amp;a[0]&gt;1; a[0]--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void mul(bignum_t b,const bignum_t a,const int c,const int d)</span><br><span class="line">&#123;</span><br><span class="line">    int i ;</span><br><span class="line">    memset((void<span class="keyword">*</span>)b,0,sizeof(bignum_t));</span><br><span class="line">    for(b[0]=a[0]+d,i=d+1; i<span class="variable">&lt;=b[0]; i++)</span><br><span class="line">        if((b[i]+=a[i-d]*c)&gt;</span>=DEPTH)</span><br><span class="line">            b[i+1]+=b[i]/DEPTH,b[i]%=DEPTH ;</span><br><span class="line">    for(; b[b[0]+1]; b[0]++,b[b[0]+1]=b[b[0]]/DEPTH,b[b[0]]%=DEPTH);</span><br><span class="line">    for(; !b[b[0]]&amp;&amp;b[0]&gt;1; b[0]--);</span><br><span class="line">&#125;</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span> 大数相除,读入被除数a，除数b，结果保存在c[]数组                         <span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span> 需要comp()函数                                                         <span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">void div(bignum_t c,bignum_t a,const bignum_t b)</span><br><span class="line">&#123;</span><br><span class="line">    int h,l,m,i ;</span><br><span class="line">    memset((void<span class="keyword">*</span>)c,0,sizeof(bignum_t));</span><br><span class="line">    c[0]=(b[0]<span class="variable">&lt;a[0]+1)?(a[0]-b[0]+2):1 ;</span><br><span class="line">    for(i=c[0]; i; sub(a,b,c[i]=m,i-1),i--)</span><br><span class="line">        for(h=DEPTH-1,l=0,m=(h+l+1)&gt;</span>&gt;1; h&gt;l; m=(h+l+1)&gt;&gt;1)</span><br><span class="line">            if(comp(b,m,i-1,a))h=m-1 ;</span><br><span class="line">            else l=m ;</span><br><span class="line">    for(; !c[c[0]]&amp;&amp;c[0]&gt;1; c[0]--);</span><br><span class="line">    c[0]=c[0]&gt;1?c[0]:1 ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void div(bignum_t a,const int b,int&amp;c)</span><br><span class="line">&#123;</span><br><span class="line">    int i ;</span><br><span class="line">    for(c=0,i=a[0]; i; c=c<span class="keyword">*</span>DEPTH+a[i],a[i]=c/b,c%=b,i--);</span><br><span class="line">    for(; !a[a[0]]&amp;&amp;a[0]&gt;1; a[0]--);</span><br><span class="line">&#125;</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span> 大数平方根，读入大数a，结果保存在b[]数组里                           <span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span> 需要comp()函数                                                       <span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">void sqrt(bignum_t b,bignum_t a)</span><br><span class="line">&#123;</span><br><span class="line">    int h,l,m,i ;</span><br><span class="line">    memset((void<span class="keyword">*</span>)b,0,sizeof(bignum_t));</span><br><span class="line">    for(i=b[0]=(a[0]+1)&gt;&gt;1; i; sub(a,b,m,i-1),b[i]+=m,i--)</span><br><span class="line">        for(h=DEPTH-1,l=0,b[i]=m=(h+l+1)&gt;&gt;1; h&gt;l; b[i]=m=(h+l+1)&gt;&gt;1)</span><br><span class="line">            if(comp(b,m,i-1,a))h=m-1 ;</span><br><span class="line">            else l=m ;</span><br><span class="line">    for(; !b[b[0]]&amp;&amp;b[0]&gt;1; b[0]--);</span><br><span class="line">    for(i=1; i<span class="variable">&lt;=b[0]; b[i++]&gt;</span>&gt;=1);</span><br><span class="line">&#125;</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span> 返回大数的长度                                                       <span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">int length(const bignum_t a)</span><br><span class="line">&#123;</span><br><span class="line">    int t,ret ;</span><br><span class="line">    for(ret=(a[0]-1)<span class="keyword">*</span>DIGIT,t=a[a[0]]; t; t/=10,ret++);</span><br><span class="line">    return ret&gt;0?ret:1 ;</span><br><span class="line">&#125;</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span> 返回指定位置的数字，从低位开始数到第b位，返回b位上的数               <span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">int digit(const bignum_t a,const int b)</span><br><span class="line">&#123;</span><br><span class="line">    int i,ret ;</span><br><span class="line">    for(ret=a[(b-1)/DIGIT+1],i=(b-1)%DIGIT; i; ret/=10,i--);</span><br><span class="line">    return ret%10 ;</span><br><span class="line">&#125;</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span> 返回大数末尾0的个数                                                  <span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">int zeronum(const bignum_t a)</span><br><span class="line">&#123;</span><br><span class="line">    int ret,t ;</span><br><span class="line">    for(ret=0; !a[ret+1]; ret++);</span><br><span class="line">    for(t=a[ret+1],ret<span class="keyword">*</span>=DIGIT; !(t%10); t/=10,ret++);</span><br><span class="line">    return ret ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void comp(int<span class="keyword">*</span>a,const int l,const int h,const int d)</span><br><span class="line">&#123;</span><br><span class="line">    int i,j,t ;</span><br><span class="line">    for(i=l; i<span class="variable">&lt;=h; i++)</span><br><span class="line">        for(t=i,j=2; t&gt;</span>1; j++)</span><br><span class="line">            while(!(t%j))</span><br><span class="line">                a[j]+=d,t/=j ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void convert(int<span class="keyword">*</span>a,const int h,bignum_t b)</span><br><span class="line">&#123;</span><br><span class="line">    int i,j,t=1 ;</span><br><span class="line">    memset(b,0,sizeof(bignum_t));</span><br><span class="line">    for(b[0]=b[1]=1,i=2; i<span class="variable">&lt;=h; i++)</span><br><span class="line">        if(a[i])</span><br><span class="line">            for(j=a[i]; j; t*=i,j--)</span><br><span class="line">                if(t*i&gt;</span>DEPTH)</span><br><span class="line">                    mul(b,t),t=1 ;</span><br><span class="line">    mul(b,t);</span><br><span class="line">&#125;</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span> 组合数                                                               <span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">void combination(bignum_t a,int m,int n)</span><br><span class="line">&#123;</span><br><span class="line">    int<span class="keyword">*</span>t=new int[m+1];</span><br><span class="line">    memset((void<span class="keyword">*</span>)t,0,sizeof(int)<span class="keyword">*</span>(m+1));</span><br><span class="line">    comp(t,n+1,m,1);</span><br><span class="line">    comp(t,2,m-n,-1);</span><br><span class="line">    convert(t,m,a);</span><br><span class="line">    delete[]t ;</span><br><span class="line">&#125;</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span> 排列数                                                               <span class="keyword">*</span>/</span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">void permutation(bignum_t a,int m,int n)</span><br><span class="line">&#123;</span><br><span class="line">    int i,t=1 ;</span><br><span class="line">    memset(a,0,sizeof(bignum_t));</span><br><span class="line">    a[0]=a[1]=1 ;</span><br><span class="line">    for(i=m-n+1; i<span class="variable">&lt;=m; t*=i++)</span><br><span class="line">        if(t*i&gt;</span>DEPTH)</span><br><span class="line">            mul(a,t),t=1 ;</span><br><span class="line">    mul(a,t);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#define SGN(x) ((x)&gt;0?1:((x)&lt;0?-1:0))</span></span><br><span class="line"><span class="comment">#define ABS(x) ((x)&gt;0?(x):-(x))</span></span><br><span class="line"></span><br><span class="line">int read(bignum_t a,int&amp;sgn,istream&amp;is=cin)</span><br><span class="line">&#123;</span><br><span class="line">    char str[MAX<span class="keyword">*</span>DIGIT+2],ch,<span class="keyword">*</span>buf ;</span><br><span class="line">    int i,j ;</span><br><span class="line">    memset((void<span class="keyword">*</span>)a,0,sizeof(bignum_t));</span><br><span class="line">    if(!(is&gt;&gt;str))return 0 ;</span><br><span class="line">    buf=str,sgn=1 ;</span><br><span class="line">    if(<span class="keyword">*</span>buf=='-')sgn=-1,buf++;</span><br><span class="line">    for(a[0]=strlen(buf),i=a[0]/2-1; i&gt;=0; i--)</span><br><span class="line">        ch=buf[i],buf[i]=buf[a[0]-1-i],buf[a[0]-1-i]=ch ;</span><br><span class="line">    for(a[0]=(a[0]+DIGIT-1)/DIGIT,j=strlen(buf); j<span class="variable">&lt;a[0]*DIGIT; buf[j++]='0');</span><br><span class="line">    for(i=1; i&lt;=a[0]; i++)</span><br><span class="line">        for(a[i]=0,j=0; j&lt;DIGIT; j++)</span><br><span class="line">            a[i]=a[i]*10+buf[i*DIGIT-1-j]-'0' ;</span><br><span class="line">    for(; !a[a[0]]&amp;&amp;a[0]&gt;</span>1; a[0]--);</span><br><span class="line">    if(a[0]==1&amp;&amp;!a[1])sgn=0 ;</span><br><span class="line">    return 1 ;</span><br><span class="line">&#125;</span><br><span class="line">struct bignum</span><br><span class="line">&#123;</span><br><span class="line">    bignum_t num ;</span><br><span class="line">    int sgn ;</span><br><span class="line">public :</span><br><span class="line">    inline bignum()</span><br><span class="line">    &#123;</span><br><span class="line">        memset(num,0,sizeof(bignum_t));</span><br><span class="line">        num[0]=1 ;</span><br><span class="line">        sgn=0 ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline int operator!()</span><br><span class="line">    &#123;</span><br><span class="line">        return num[0]==1&amp;&amp;!num[1];</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum&amp;operator=(const bignum&amp;a)</span><br><span class="line">    &#123;</span><br><span class="line">        memcpy(num,a.num,sizeof(bignum_t));</span><br><span class="line">        sgn=a.sgn ;</span><br><span class="line">        return<span class="keyword">*</span>this ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum&amp;operator=(const int a)</span><br><span class="line">    &#123;</span><br><span class="line">        memset(num,0,sizeof(bignum_t));</span><br><span class="line">        num[0]=1 ;</span><br><span class="line">        sgn=SGN (a);</span><br><span class="line">        add(num,sgn<span class="keyword">*</span>a);</span><br><span class="line">        return<span class="keyword">*</span>this ;</span><br><span class="line">    &#125;</span><br><span class="line">    ;</span><br><span class="line">    inline bignum&amp;operator+=(const bignum&amp;a)</span><br><span class="line">    &#123;</span><br><span class="line">        if(sgn==a.sgn)add(num,a.num);</span><br><span class="line">        else if</span><br><span class="line">        (sgn&amp;&amp;a.sgn)</span><br><span class="line">        &#123;</span><br><span class="line">            int ret=comp(num,a.num);</span><br><span class="line">            if(ret&gt;0)sub(num,a.num);</span><br><span class="line">            else if(ret<span class="variable">&lt;0)</span><br><span class="line">            &#123;</span><br><span class="line">                bignum_t t ;</span><br><span class="line">                memcpy(t,num,sizeof(bignum_t));</span><br><span class="line">                memcpy(num,a.num,sizeof(bignum_t));</span><br><span class="line">                sub (num,t);</span><br><span class="line">                sgn=a.sgn ;</span><br><span class="line">            &#125;</span><br><span class="line">            else memset(num,0,sizeof(bignum_t)),num[0]=1,sgn=0 ;</span><br><span class="line">        &#125;</span><br><span class="line">        else if(!sgn)</span><br><span class="line">            memcpy(num,a.num,sizeof(bignum_t)),sgn=a.sgn ;</span><br><span class="line">        return*this ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum&amp;operator+=(const int a)</span><br><span class="line">    &#123;</span><br><span class="line">        if(sgn*a&gt;</span>0)add(num,ABS(a));</span><br><span class="line">        else if(sgn&amp;&amp;a)</span><br><span class="line">        &#123;</span><br><span class="line">            int  ret=comp(num,ABS(a));</span><br><span class="line">            if(ret&gt;0)sub(num,ABS(a));</span><br><span class="line">            else if(ret<span class="variable">&lt;0)</span><br><span class="line">            &#123;</span><br><span class="line">                bignum_t t ;</span><br><span class="line">                memcpy(t,num,sizeof(bignum_t));</span><br><span class="line">                memset(num,0,sizeof(bignum_t));</span><br><span class="line">                num[0]=1 ;</span><br><span class="line">                add(num,ABS (a));</span><br><span class="line">                sgn=-sgn ;</span><br><span class="line">                sub(num,t);</span><br><span class="line">            &#125;</span><br><span class="line">            else memset(num,0,sizeof(bignum_t)),num[0]=1,sgn=0 ;</span><br><span class="line">        &#125;</span><br><span class="line">        else if</span><br><span class="line">        (!sgn)sgn=SGN(a),add(num,ABS(a));</span><br><span class="line">        return*this ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum operator+(const bignum&amp;a)</span><br><span class="line">    &#123;</span><br><span class="line">        bignum ret ;</span><br><span class="line">        memcpy(ret.num,num,sizeof (bignum_t));</span><br><span class="line">        ret.sgn=sgn ;</span><br><span class="line">        ret+=a ;</span><br><span class="line">        return ret ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum operator+(const int a)</span><br><span class="line">    &#123;</span><br><span class="line">        bignum ret ;</span><br><span class="line">        memcpy(ret.num,num,sizeof (bignum_t));</span><br><span class="line">        ret.sgn=sgn ;</span><br><span class="line">        ret+=a ;</span><br><span class="line">        return ret ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum&amp;operator-=(const bignum&amp;a)</span><br><span class="line">    &#123;</span><br><span class="line">        if(sgn*a.sgn&lt;0)add(num,a.num);</span><br><span class="line">        else if</span><br><span class="line">        (sgn&amp;&amp;a.sgn)</span><br><span class="line">        &#123;</span><br><span class="line">            int ret=comp(num,a.num);</span><br><span class="line">            if(ret&gt;</span>0)sub(num,a.num);</span><br><span class="line">            else if(ret<span class="variable">&lt;0)</span><br><span class="line">            &#123;</span><br><span class="line">                bignum_t t ;</span><br><span class="line">                memcpy(t,num,sizeof(bignum_t));</span><br><span class="line">                memcpy(num,a.num,sizeof(bignum_t));</span><br><span class="line">                sub(num,t);</span><br><span class="line">                sgn=-sgn ;</span><br><span class="line">            &#125;</span><br><span class="line">            else memset(num,0,sizeof(bignum_t)),num[0]=1,sgn=0 ;</span><br><span class="line">        &#125;</span><br><span class="line">        else if(!sgn)add (num,a.num),sgn=-a.sgn ;</span><br><span class="line">        return*this ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum&amp;operator-=(const int a)</span><br><span class="line">    &#123;</span><br><span class="line">        if(sgn*a&lt;0)add(num,ABS(a));</span><br><span class="line">        else if(sgn&amp;&amp;a)</span><br><span class="line">        &#123;</span><br><span class="line">            int  ret=comp(num,ABS(a));</span><br><span class="line">            if(ret&gt;</span>0)sub(num,ABS(a));</span><br><span class="line">            else if(ret<span class="variable">&lt;0)</span><br><span class="line">            &#123;</span><br><span class="line">                bignum_t t ;</span><br><span class="line">                memcpy(t,num,sizeof(bignum_t));</span><br><span class="line">                memset(num,0,sizeof(bignum_t));</span><br><span class="line">                num[0]=1 ;</span><br><span class="line">                add(num,ABS(a));</span><br><span class="line">                sub(num,t);</span><br><span class="line">                sgn=-sgn ;</span><br><span class="line">            &#125;</span><br><span class="line">            else memset(num,0,sizeof(bignum_t)),num[0]=1,sgn=0 ;</span><br><span class="line">        &#125;</span><br><span class="line">        else if</span><br><span class="line">        (!sgn)sgn=-SGN(a),add(num,ABS(a));</span><br><span class="line">        return*this ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum operator-(const bignum&amp;a)</span><br><span class="line">    &#123;</span><br><span class="line">        bignum ret ;</span><br><span class="line">        memcpy(ret.num,num,sizeof(bignum_t));</span><br><span class="line">        ret.sgn=sgn ;</span><br><span class="line">        ret-=a ;</span><br><span class="line">        return ret ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum operator-(const int a)</span><br><span class="line">    &#123;</span><br><span class="line">        bignum ret ;</span><br><span class="line">        memcpy(ret.num,num,sizeof(bignum_t));</span><br><span class="line">        ret.sgn=sgn ;</span><br><span class="line">        ret-=a ;</span><br><span class="line">        return ret ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum&amp;operator*=(const bignum&amp;a)</span><br><span class="line">    &#123;</span><br><span class="line">        bignum_t t ;</span><br><span class="line">        mul(t,num,a.num);</span><br><span class="line">        memcpy(num,t,sizeof(bignum_t));</span><br><span class="line">        sgn*=a.sgn ;</span><br><span class="line">        return*this ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum&amp;operator*=(const int a)</span><br><span class="line">    &#123;</span><br><span class="line">        mul(num,ABS(a));</span><br><span class="line">        sgn*=SGN(a);</span><br><span class="line">        return*this ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum operator*(const bignum&amp;a)</span><br><span class="line">    &#123;</span><br><span class="line">        bignum ret ;</span><br><span class="line">        mul(ret.num,num,a.num);</span><br><span class="line">        ret.sgn=sgn*a.sgn ;</span><br><span class="line">        return ret ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum operator*(const int a)</span><br><span class="line">    &#123;</span><br><span class="line">        bignum ret ;</span><br><span class="line">        memcpy(ret.num,num,sizeof (bignum_t));</span><br><span class="line">        mul(ret.num,ABS(a));</span><br><span class="line">        ret.sgn=sgn*SGN(a);</span><br><span class="line">        return ret ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum&amp;operator/=(const bignum&amp;a)</span><br><span class="line">    &#123;</span><br><span class="line">        bignum_t t ;</span><br><span class="line">        div(t,num,a.num);</span><br><span class="line">        memcpy (num,t,sizeof(bignum_t));</span><br><span class="line">        sgn=(num[0]==1&amp;&amp;!num[1])?0:sgn*a.sgn ;</span><br><span class="line">        return*this ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum&amp;operator/=(const int a)</span><br><span class="line">    &#123;</span><br><span class="line">        int t ;</span><br><span class="line">        div(num,ABS(a),t);</span><br><span class="line">        sgn=(num[0]==1&amp;&amp;!num [1])?0:sgn*SGN(a);</span><br><span class="line">        return*this ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum operator/(const bignum&amp;a)</span><br><span class="line">    &#123;</span><br><span class="line">        bignum ret ;</span><br><span class="line">        bignum_t t ;</span><br><span class="line">        memcpy(t,num,sizeof(bignum_t));</span><br><span class="line">        div(ret.num,t,a.num);</span><br><span class="line">        ret.sgn=(ret.num[0]==1&amp;&amp;!ret.num[1])?0:sgn*a.sgn ;</span><br><span class="line">        return ret ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum operator/(const int a)</span><br><span class="line">    &#123;</span><br><span class="line">        bignum ret ;</span><br><span class="line">        int t ;</span><br><span class="line">        memcpy(ret.num,num,sizeof(bignum_t));</span><br><span class="line">        div(ret.num,ABS(a),t);</span><br><span class="line">        ret.sgn=(ret.num[0]==1&amp;&amp;!ret.num[1])?0:sgn*SGN(a);</span><br><span class="line">        return ret ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum&amp;operator%=(const bignum&amp;a)</span><br><span class="line">    &#123;</span><br><span class="line">        bignum_t t ;</span><br><span class="line">        div(t,num,a.num);</span><br><span class="line">        if(num[0]==1&amp;&amp;!num[1])sgn=0 ;</span><br><span class="line">        return*this ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline int operator%=(const int a)</span><br><span class="line">    &#123;</span><br><span class="line">        int t ;</span><br><span class="line">        div(num,ABS(a),t);</span><br><span class="line">        memset(num,0,sizeof (bignum_t));</span><br><span class="line">        num[0]=1 ;</span><br><span class="line">        add(num,t);</span><br><span class="line">        return t ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum operator%(const bignum&amp;a)</span><br><span class="line">    &#123;</span><br><span class="line">        bignum ret ;</span><br><span class="line">        bignum_t t ;</span><br><span class="line">        memcpy(ret.num,num,sizeof(bignum_t));</span><br><span class="line">        div(t,ret.num,a.num);</span><br><span class="line">        ret.sgn=(ret.num[0]==1&amp;&amp;!ret.num [1])?0:sgn ;</span><br><span class="line">        return ret ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline int operator%(const int a)</span><br><span class="line">    &#123;</span><br><span class="line">        bignum ret ;</span><br><span class="line">        int t ;</span><br><span class="line">        memcpy(ret.num,num,sizeof(bignum_t));</span><br><span class="line">        div(ret.num,ABS(a),t);</span><br><span class="line">        memset(ret.num,0,sizeof(bignum_t));</span><br><span class="line">        ret.num[0]=1 ;</span><br><span class="line">        add(ret.num,t);</span><br><span class="line">        return t ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum&amp;operator++()</span><br><span class="line">    &#123;</span><br><span class="line">        *this+=1 ;</span><br><span class="line">        return*this ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum&amp;operator--()</span><br><span class="line">    &#123;</span><br><span class="line">        *this-=1 ;</span><br><span class="line">        return*this ;</span><br><span class="line">    &#125;</span><br><span class="line">    ;</span><br><span class="line">    inline int operator&gt;</span>(const bignum&amp;a)</span><br><span class="line">    &#123;</span><br><span class="line">        return sgn&gt;0?(a.sgn&gt;0?comp(num,a.num)&gt;0:1):(sgn<span class="variable">&lt;0?(a.sgn&lt;0?comp(num,a.num)&lt;0:0):a.sgn&lt;0);</span><br><span class="line">    &#125;</span><br><span class="line">    inline int operator&gt;</span>(const int a)</span><br><span class="line">    &#123;</span><br><span class="line">        return sgn&gt;0?(a&gt;0?comp(num,a)&gt;0:1):(sgn<span class="variable">&lt;0?(a&lt;0?comp(num,-a)&lt;0:0):a&lt;0);</span><br><span class="line">    &#125;</span><br><span class="line">    inline int operator&gt;</span>=(const bignum&amp;a)</span><br><span class="line">    &#123;</span><br><span class="line">        return sgn&gt;0?(a.sgn&gt;0?comp(num,a.num)&gt;=0:1):(sgn<span class="variable">&lt;0?(a.sgn&lt;0?comp(num,a.num)&lt;=0:0):a.sgn&lt;=0);</span><br><span class="line">    &#125;</span><br><span class="line">    inline int operator&gt;</span>=(const int a)</span><br><span class="line">    &#123;</span><br><span class="line">        return sgn&gt;0?(a&gt;0?comp(num,a)&gt;=0:1):(sgn<span class="variable">&lt;0?(a&lt;0?comp(num,-a)&lt;=0:0):a&lt;=0);</span><br><span class="line">    &#125;</span><br><span class="line">    inline int operator&lt;(const bignum&amp;a)</span><br><span class="line">    &#123;</span><br><span class="line">        return sgn&lt;0?(a.sgn&lt;0?comp(num,a.num)&gt;</span>0:1):(sgn&gt;0?(a.sgn&gt;0?comp(num,a.num)<span class="variable">&lt;0:0):a.sgn&gt;</span>0);</span><br><span class="line">    &#125;</span><br><span class="line">    inline int operator<span class="variable">&lt;(const int a)</span><br><span class="line">    &#123;</span><br><span class="line">        return sgn&lt;0?(a&lt;0?comp(num,-a)&gt;</span>0:1):(sgn&gt;0?(a&gt;0?comp(num,a)<span class="variable">&lt;0:0):a&gt;</span>0);</span><br><span class="line">    &#125;</span><br><span class="line">    inline int operator<span class="variable">&lt;=(const bignum&amp;a)</span><br><span class="line">    &#123;</span><br><span class="line">        return sgn&lt;0?(a.sgn&lt;0?comp(num,a.num)&gt;</span>=0:1):(sgn&gt;0?(a.sgn&gt;0?comp(num,a.num)<span class="variable">&lt;=0:0):a.sgn&gt;</span>=0);</span><br><span class="line">    &#125;</span><br><span class="line">    inline int operator<span class="variable">&lt;=(const int a)</span><br><span class="line">    &#123;</span><br><span class="line">        return sgn&lt;0?(a&lt;0?comp(num,-a)&gt;</span>=0:1):</span><br><span class="line">               (sgn&gt;0?(a&gt;0?comp(num,a)<span class="variable">&lt;=0:0):a&gt;</span>=0);</span><br><span class="line">    &#125;</span><br><span class="line">    inline int operator==(const bignum&amp;a)</span><br><span class="line">    &#123;</span><br><span class="line">        return(sgn==a.sgn)?!comp(num,a.num):0 ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline int operator==(const int a)</span><br><span class="line">    &#123;</span><br><span class="line">        return(sgn<span class="keyword">*</span>a&gt;=0)?!comp(num,ABS(a)):0 ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline int operator!=(const bignum&amp;a)</span><br><span class="line">    &#123;</span><br><span class="line">        return(sgn==a.sgn)?comp(num,a.num):1 ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline int operator!=(const int a)</span><br><span class="line">    &#123;</span><br><span class="line">        return(sgn<span class="keyword">*</span>a&gt;=0)?comp(num,ABS(a)):1 ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline int operator[](const int a)</span><br><span class="line">    &#123;</span><br><span class="line">        return digit(num,a);</span><br><span class="line">    &#125;</span><br><span class="line">    friend inline istream&amp;operator&gt;&gt;(istream&amp;is,bignum&amp;a)</span><br><span class="line">    &#123;</span><br><span class="line">        read(a.num,a.sgn,is);</span><br><span class="line">        return  is ;</span><br><span class="line">    &#125;</span><br><span class="line">    friend inline ostream&amp;operator<span class="variable">&lt;&lt;(ostream&amp;os,const bignum&amp;a)</span><br><span class="line">    &#123;</span><br><span class="line">        if(a.sgn&lt;0)</span><br><span class="line">            os&lt;&lt;'-' ;</span><br><span class="line">        write(a.num,os);</span><br><span class="line">        return os ;</span><br><span class="line">    &#125;</span><br><span class="line">    friend inline bignum sqrt(const bignum&amp;a)</span><br><span class="line">    &#123;</span><br><span class="line">        bignum ret ;</span><br><span class="line">        bignum_t t ;</span><br><span class="line">        memcpy(t,a.num,sizeof(bignum_t));</span><br><span class="line">        sqrt(ret.num,t);</span><br><span class="line">        ret.sgn=ret.num[0]!=1||ret.num[1];</span><br><span class="line">        return ret ;</span><br><span class="line">    &#125;</span><br><span class="line">    friend inline bignum sqrt(const bignum&amp;a,bignum&amp;b)</span><br><span class="line">    &#123;</span><br><span class="line">        bignum ret ;</span><br><span class="line">        memcpy(b.num,a.num,sizeof(bignum_t));</span><br><span class="line">        sqrt(ret.num,b.num);</span><br><span class="line">        ret.sgn=ret.num[0]!=1||ret.num[1];</span><br><span class="line">        b.sgn=b.num[0]!=1||ret.num[1];</span><br><span class="line">        return ret ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline int length()</span><br><span class="line">    &#123;</span><br><span class="line">        return :: length(num);</span><br><span class="line">    &#125;</span><br><span class="line">    inline int zeronum()</span><br><span class="line">    &#123;</span><br><span class="line">        return :: zeronum(num);</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum C(const int m,const int n)</span><br><span class="line">    &#123;</span><br><span class="line">        combination(num,m,n);</span><br><span class="line">        sgn=1 ;</span><br><span class="line">        return*this ;</span><br><span class="line">    &#125;</span><br><span class="line">    inline bignum P(const int m,const int n)</span><br><span class="line">    &#123;</span><br><span class="line">        permutation(num,m,n);</span><br><span class="line">        sgn=1 ;</span><br><span class="line">        return*this ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">bignum a[2000],m,nn;</span><br><span class="line">bignum mod;</span><br><span class="line">void init()</span><br><span class="line">&#123;</span><br><span class="line">    a[0] = 1;</span><br><span class="line">    a[1] = 1;</span><br><span class="line">    for(int i=2; i&lt;=1000; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i] = a[i-1] + a[i-2];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int num[]= &#123;0,1,0,1,1,2&#125;;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    mod=258280327;</span><br><span class="line">    int t,n;</span><br><span class="line">    init();</span><br><span class="line">    scanf("%d",&amp;t);</span><br><span class="line">    while(t--)&#123;</span><br><span class="line">        scanf("%d",&amp;n);</span><br><span class="line">        cin&gt;</span>&gt;m;</span><br><span class="line">        if(n==1&amp;&amp;m==1)&#123;//注意!</span><br><span class="line">            puts(<span class="string">"0"</span>);</span><br><span class="line">            continue;</span><br><span class="line">        &#125;</span><br><span class="line">        int h1=1;</span><br><span class="line">        nn=1;</span><br><span class="line">        int f=0;</span><br><span class="line">        while(nn<span class="variable">&lt;5)&#123;</span><br><span class="line">            if(nn==m)&#123;</span><br><span class="line">                printf("%d\n",num[h1]);</span><br><span class="line">                f=1;</span><br><span class="line">            &#125;</span><br><span class="line">            h1++;</span><br><span class="line">            nn=nn+1;</span><br><span class="line">        &#125;</span><br><span class="line">        if(f)   continue;</span><br><span class="line">        f=0;</span><br><span class="line">        for(int i=1; i&lt;=1001; i++)&#123;</span><br><span class="line">            if(a[i]==m)&#123;</span><br><span class="line">                h1=i;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">            else if(a[i]&gt;</span>m)&#123;</span><br><span class="line">                if(a[i]==m+1)&#123;</span><br><span class="line">                    cout<span class="variable">&lt;&lt;(a[i-2]-1)%mod&lt;&lt;endl;;</span><br><span class="line">                    f=1;</span><br><span class="line">                &#125;</span><br><span class="line">                h1=i-1;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if(f)   continue;</span><br><span class="line">        cout&lt;&lt;(m-a[h1]+a[h1-2])%mod&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></h2>]]></content>
    <summary type="html">
    <![CDATA[<p>题目本身不难，关键是大数模板啊……<a href="http://blog.csdn.net/u013050857/article/details/47280431">1009 MZL’s Border</a><br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[BestCoder Round #10&&#11]]></title>
    <link href="http://guoyuxiang.com/2015/08/08/BestCoder-Round-10-11/"/>
    <id>http://guoyuxiang.com/2015/08/08/BestCoder-Round-10-11/</id>
    <published>2015-08-08T02:38:13.000Z</published>
    <updated>2015-08-08T02:56:38.432Z</updated>
    <content type="html"><![CDATA[<h2 id="1001_Revenge_of_Fibonacci"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5018" target="_blank" rel="external">1001 Revenge of Fibonacci</a></h2><p>Problem Description<br>In mathematical terms, the sequence Fn of Fibonacci numbers is defined by the recurrence relation<br>Fn = Fn-1 + Fn-2<br>with seed values F1 = 1; F2 = 1 (sequence A000045 in OEIS).<br>—-Wikipedia</p>
<p>Today, Fibonacci takes revenge on you. Now the first two elements of Fibonacci sequence has been redefined as A and B. You have to check if C is in the new Fibonacci sequence.<br><a id="more"></a></p>
<p>Input<br>The first line contains a single integer T, indicating the number of test cases. </p>
<p>Each test case only contains three integers A, B and C.</p>
<p>[Technical Specification]</p>
<ol>
<li>1 &lt;= T &lt;= 100</li>
<li>1 &lt;= A, B, C &lt;= 1 000 000 000</li>
</ol>
<p>Output<br>For each test case, output “Yes” if C is in the new Fibonacci sequence, otherwise “No”.</p>
<p>Sample Input<br>3<br>2 3 5<br>2 3 6<br>2 2 110</p>
<p>Sample Output<br>Yes<br>No<br>Yes<br>Hint<br>For the third test case, the new Fibonacci sequence is: 2, 2, 4, 6, 10, 16, 26, 42, 68, 110…</p>
<h3 id="题解">题解</h3><p>单纯的斐波那契扩展而已，没超long long吧</p>
<h2 id="<!-￼0->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span>  vis[<span class="number">1000</span>],n;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;vis[<span class="number">0</span>]&gt;&gt;vis[<span class="number">1</span>]&gt;&gt;n;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;;i++)</span><br><span class="line">       &#123;</span><br><span class="line">           vis[i]=vis[i-<span class="number">1</span>]+vis[i-<span class="number">2</span>];</span><br><span class="line">           <span class="keyword">if</span>(vis[i]==n)   flag=<span class="number">1</span>;</span><br><span class="line">           <span class="keyword">if</span>(vis[i]&gt;=n)    <span class="keyword">break</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span>(n==vis[<span class="number">0</span>]||n==vis[<span class="number">1</span>])   flag=<span class="number">1</span>;</span><br><span class="line">       <span class="keyword">if</span>(flag)    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Yes"</span>&lt;&lt;endl;</span><br><span class="line">       <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"No"</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="1002_Revenge_of_GCD"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5019" target="_blank" rel="external">1002 Revenge of GCD</a></h2><p>Problem Description<br>In mathematics, the greatest common divisor (gcd), also known as the greatest common factor (gcf), highest common factor (hcf), or greatest common measure (gcm), of two or more integers (when at least one of them is not zero), is the largest positive integer that divides the numbers without a remainder.<br>—-Wikipedia</p>
<p>Today, GCD takes revenge on you. You have to figure out the k-th GCD of X and Y.</p>
<p>Input<br>The first line contains a single integer T, indicating the number of test cases. </p>
<p>Each test case only contains three integers X, Y and K.</p>
<p>[Technical Specification]</p>
<ol>
<li>1 &lt;= T &lt;= 100</li>
<li>1 &lt;= X, Y, K &lt;= 1 000 000 000 000</li>
</ol>
<p>Output<br>For each test case, output the k-th GCD of X and Y. If no such integer exists, output -1.</p>
<p>Sample Input<br>3<br>2 3 1<br>2 3 2<br>8 16 3</p>
<p>Sample Output<br>1<br>-1<br>2</p>
<h3 id="题解-1">题解</h3><p>给出两个数，找这两个数的第K大公约数。方法是先找出最大公约数，然后搜到它的因子，并不难但T到哭……%</p>
<h2 id="<!-￼1->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;ctime&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;deque&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;list&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;set&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;numeric&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iomanip&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;bitset&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;sstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;fstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;limits.h&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug "output for debug\n"</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> eps (1e-6)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf (1&lt;&lt;28)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> sqr(x) (x) * (x)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> ll &amp;a,<span class="keyword">const</span> ll &amp;b)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b?gcd(b,a%b):a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">vector</span>&lt;ll&gt; s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    ll i,j,a,x,y,k,t,num;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%I64d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%I64d%I64d%I64d"</span>,&amp;x,&amp;y,&amp;k);</span><br><span class="line">        s.clear();</span><br><span class="line">        a=gcd(x,y);</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i*i&lt;=a;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a%i==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(i*i!=a)</span><br><span class="line">                &#123;</span><br><span class="line">                    s.push_back(i);</span><br><span class="line">                    s.push_back(a/i);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    s.push_back(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(k&gt;s.size())</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            sort(s.begin(),s.end(),cmp);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>,s[k-<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="1001_Alice_and_Bob"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5054" target="_blank" rel="external">1001 Alice and Bob</a></h2><p>Problem Description<br>Bob and Alice got separated in the Square, they agreed that if they get separated, they’ll meet back at the coordinate point (x, y). Unfortunately they forgot to define the origin of coordinates and the coordinate axis direction. Now, Bob in the lower left corner of the Square, Alice in the upper right corner of the the Square. Bob regards the lower left corner as the origin of coordinates, rightward for positive direction of axis X, upward for positive direction of axis Y. Alice regards the upper right corner as the origin of coordinates, leftward for positive direction of axis X, downward for positive direction of axis Y. Assuming that Square is a rectangular, length and width size is N * M. As shown in the figure:</p>
<p>Bob and Alice with their own definition of the coordinate system respectively, went to the coordinate point (x, y). Can they meet with each other ?<br>Note: Bob and Alice before reaching its destination, can not see each other because of some factors (such as buildings, time poor).</p>
<p>Input<br>There are multiple test cases. Please process till EOF. Each test case only contains four integers : N, M and x, y. The Square size is N * M, and meet in coordinate point (x, y). ( 0 &lt; x &lt; N &lt;= 1000 , 0 &lt; y &lt; M &lt;= 1000 ).</p>
<p>Output<br>If they can meet with each other, please output “YES”. Otherwise, please output “NO”.</p>
<p>Sample Input<br>10 10 5 5<br>10 10 6 6</p>
<p>Sample Output<br>YES<br>NO</p>
<h3 id="题解-2">题解</h3><p>手速快的人不需要解释</p>
<h2 id="<!-￼2->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> n,m,x,y;</span><br><span class="line">   <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;x&gt;&gt;y)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">if</span>(<span class="number">2</span>*x==n&amp;&amp;<span class="number">2</span>*y==m)   <span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;endl;</span><br><span class="line">       <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="1002_Bob_and_math_problem"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5055" target="_blank" rel="external">1002 Bob and math problem</a></h2><p>Problem Description<br>Recently, Bob has been thinking about a math problem.<br>There are N Digits, each digit is between 0 and 9. You need to use this N Digits to constitute an Integer.<br>This Integer needs to satisfy the following conditions:</p>
<ol>
<li><p>must be an odd Integer.</p>
</li>
<li><p>there is no leading zero.</p>
</li>
<li><p>find the biggest one which is satisfied 1, 2.</p>
</li>
</ol>
<p>Example:<br>There are three Digits: 0, 1, 3. It can constitute six number of Integers. Only “301”, “103” is legal, while “130”, “310”, “013”, “031” is illegal. The biggest one of odd Integer is “301”.</p>
<p>Input<br>There are multiple test cases. Please process till EOF.<br>Each case starts with a line containing an integer N ( 1 &lt;= N &lt;= 100 ).<br>The second line contains N Digits which indicate the digit a1,a2,a3,⋯,an.(0≤ai≤9).</p>
<p>Output<br>The output of each test case of a line. If you can constitute an Integer which is satisfied above conditions, please output the biggest one. Otherwise, output “-1” instead.</p>
<p>Sample Input<br>3<br>0 1 3<br>3<br>5 4 2<br>3<br>2 4 6</p>
<p>Sample Output<br>301<br>425<br>-1</p>
<h3 id="题解-3">题解</h3><p>给N个数字，要求组成最大的奇数，不能有前导零。大水题，先从大到小排序，从后往前找奇数，扔到最后其它替补上来。</p>
<h2 id="<!-￼3->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;algorithm&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;t)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> num[t],flag=<span class="number">1</span>,c;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;t; i++)</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;num[i];</span><br><span class="line">        sort(num,num+t,cmp);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=t-<span class="number">1</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">           <span class="keyword">if</span>(num[i]%<span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                c=num[i];</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;t-<span class="number">1</span>;j++)</span><br><span class="line">                    num[j]=num[j+<span class="number">1</span>];</span><br><span class="line">                num[t-<span class="number">1</span>]=c;</span><br><span class="line"></span><br><span class="line">                flag=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// for(int i=0; i&lt;t; i++)</span></span><br><span class="line">                <span class="comment">//cout&lt;&lt;num[i];</span></span><br><span class="line">        <span class="keyword">if</span>(flag||num[<span class="number">0</span>]==<span class="number">0</span>)   <span class="built_in">cout</span>&lt;&lt;<span class="string">"-1"</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;t; i++)</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;num[i];</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;endl;</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="1003_Boring_count"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5056" target="_blank" rel="external">1003 Boring count</a></h2><p>Problem Description<br>You are given a string S consisting of lowercase letters, and your task is counting the number of substring that the number of each lowercase letter in the substring is no more than K.</p>
<p>Input<br>In the first line there is an integer T , indicates the number of test cases.<br>For each case, the first line contains a string which only consist of lowercase letters. The second line contains an integer K.</p>
<p>[Technical Specification]<br>1&lt;=T&lt;= 100<br>1 &lt;= the length of S &lt;= 100000<br>1 &lt;= K &lt;= 100000</p>
<p>Output<br>For each case, output a line contains the answer.</p>
<p>Sample Input<br>3<br>abc<br>1<br>abcabc<br>1<br>abcabc<br>2</p>
<p>Sample Output<br>6<br>15<br>21</p>
<h3 id="题解-4">题解</h3><p>这答题其实和多校的一道如出一辙，比赛时脑残了，想歪了T掉了。是要求目标串的子串个数；子串中字母出现不得超过K次；<br>枚举右结点搜索左边就好了，难度两星……</p>
<h2 id="<!-￼4->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> cnt[<span class="number">30</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,k,i;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="keyword">sizeof</span>(cnt));</span><br><span class="line">        <span class="built_in">string</span> str;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;str&gt;&gt;k;</span><br><span class="line">        <span class="keyword">int</span> len=str.size();</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>,starpos=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cnt[str[i]-<span class="string">'a'</span>]++;</span><br><span class="line">            <span class="keyword">if</span>(cnt[str[i]-<span class="string">'a'</span>]&gt;k)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">while</span>(str[starpos]!=str[i])</span><br><span class="line">                &#123;</span><br><span class="line">                cnt[str[starpos]-<span class="string">'a'</span>]--;</span><br><span class="line">                starpos++;</span><br><span class="line">                &#125;</span><br><span class="line">                cnt[str[starpos]-<span class="string">'a'</span>]--;</span><br><span class="line">                starpos++;</span><br><span class="line">            &#125;</span><br><span class="line">          ans+=(i-starpos+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="1004_Argestes_and_Sequence"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5057" target="_blank" rel="external">1004 Argestes and Sequence</a></h2><p>Problem Description<br>Argestes has a lot of hobbies and likes solving query problems especially. One day Argestes came up with such a problem. You are given a sequence a consisting of N nonnegative integers, a[1],a[2],…,a[n].Then there are M operation on the sequence.An operation can be one of the following:<br>S X Y: you should set the value of a[x] to y(in other words perform an assignment a[x]=y).<br>Q L R D P: among [L, R], L and R are the index of the sequence, how many numbers that the Dth digit of the numbers is P.<br>Note: The 1st digit of a number is the least significant digit.</p>
<p>Input<br>In the first line there is an integer T , indicates the number of test cases.<br>For each case, the first line contains two numbers N and M.The second line contains N integers, separated by space: a[1],a[2],…,a[n]—initial value of array elements.<br>Each of the next M lines begins with a character type.<br>If type==S,there will be two integers more in the line: X,Y.<br>If type==Q,there will be four integers more in the line: L R D P.</p>
<p>[Technical Specification]<br>1&lt;=T&lt;= 50<br>1&lt;=N, M&lt;=100000<br>0&lt;=a[i]&lt;=231 - 1<br>1&lt;=X&lt;=N<br>0&lt;=Y&lt;=231 - 1<br>1&lt;=L&lt;=R&lt;=N<br>1&lt;=D&lt;=10<br>0&lt;=P&lt;=9</p>
<p>Output<br>For each operation Q, output a line contains the answer.</p>
<p>Sample Input<br>1<br>5 7<br>10 11 12 13 14<br>Q 1 5 2 1<br>Q 1 5 1 0<br>Q 1 5 1 1<br>Q 1 5 3 0<br>Q 1 5 3 1<br>S 1 100<br>Q 1 5 3 1</p>
<p>Sample Output<br>5<br>1<br>1<br>5<br>0<br>1</p>
<h3 id="题解-5">题解</h3><p>树状数组留坑</p>
<h2 id="<!-￼5->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;stdio.h&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;string.h&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXN 100010</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MOD 32768</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">short</span> tree[MAXN][<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">char</span> cnt[MAXN][<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> a[MAXN];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> P,<span class="keyword">int</span> D,<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(x&lt;=MAXN)&#123;</span><br><span class="line">		<span class="keyword">int</span> tmp=tree[x][D][P]+num;</span><br><span class="line">		tree[x][D][P]=tmp%MOD;</span><br><span class="line">		cnt[x][D][P]+=tmp/MOD;</span><br><span class="line">		x+=lowbit(x);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getsum</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> D,<span class="keyword">int</span> P)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(x)&#123;</span><br><span class="line">		sum+=(tree[x][D][P]+(MOD)*cnt[x][D][P]);</span><br><span class="line">		x-=lowbit(x);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> T;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">	<span class="keyword">while</span>(T--)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">		<span class="built_in">memset</span>(tree,<span class="number">0</span>,<span class="keyword">sizeof</span>(tree));</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">			<span class="keyword">int</span> tmp=a[i];</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)&#123;</span><br><span class="line">				add(i,tmp%<span class="number">10</span>,j,<span class="number">1</span>);</span><br><span class="line">				tmp/=<span class="number">10</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">while</span>(m--)&#123;</span><br><span class="line">			<span class="keyword">char</span> ch;</span><br><span class="line">			getchar();</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;ch);</span><br><span class="line">			<span class="keyword">if</span>(ch==<span class="string">'S'</span>)&#123;</span><br><span class="line">				<span class="keyword">int</span> x,y;</span><br><span class="line">				<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">				<span class="keyword">int</span> tmp=a[x];</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)&#123;</span><br><span class="line">					add(x,tmp%<span class="number">10</span>,j,-<span class="number">1</span>);</span><br><span class="line">					tmp/=<span class="number">10</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				a[x]=y;</span><br><span class="line">				tmp=a[x];</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)&#123;</span><br><span class="line">					add(x,tmp%<span class="number">10</span>,j,<span class="number">1</span>);</span><br><span class="line">					tmp/=<span class="number">10</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="keyword">int</span> L,R,D,P;</span><br><span class="line">				<span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;L,&amp;R,&amp;D,&amp;P);</span><br><span class="line">				<span class="keyword">int</span> ans=getsum(R,D-<span class="number">1</span>,P)-getsum(L-<span class="number">1</span>,D-<span class="number">1</span>,P);</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="1001_Revenge_of_Fibonacci"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5018">1001 Revenge of Fibonacci</a></h2><p>Problem Description<br>In mathematical terms, the sequence Fn of Fibonacci numbers is defined by the recurrence relation<br>Fn = Fn-1 + Fn-2<br>with seed values F1 = 1; F2 = 1 (sequence A000045 in OEIS).<br>—-Wikipedia</p>
<p>Today, Fibonacci takes revenge on you. Now the first two elements of Fibonacci sequence has been redefined as A and B. You have to check if C is in the new Fibonacci sequence.<br>]]>
    
    </summary>
    
      <category term="bestcoder" scheme="http://guoyuxiang.com/tags/bestcoder/"/>
    
      <category term="题解" scheme="http://guoyuxiang.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="bestcoder" scheme="http://guoyuxiang.com/categories/bestcoder/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ 2015 Multi-University Training Contest 5]]></title>
    <link href="http://guoyuxiang.com/2015/08/04/2015-Multi-University-Training-Contest-5/"/>
    <id>http://guoyuxiang.com/2015/08/04/2015-Multi-University-Training-Contest-5/</id>
    <published>2015-08-04T13:35:51.000Z</published>
    <updated>2015-08-04T13:50:45.351Z</updated>
    <content type="html"><![CDATA[<p>老规矩，先上水题</p>
<h2 id="1002_MZL’s_xor"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5344" target="_blank" rel="external">1002    MZL’s xor</a></h2><p>Problem Description<br>MZL loves xor very much.Now he gets an array A.The length of A is n.He wants to know the xor of all (Ai+Aj)(1≤i,j≤n)<br>The xor of an array B is defined as B1 xor B2…xor Bn<br><a id="more"></a><br>Input<br>Multiple test cases, the first line contains an integer T(no more than 20), indicating the number of cases.<br>Each test case contains four integers:n,m,z,l<br>A1=0,Ai=(Ai−1∗m+z) mod l<br>1≤m,z,l≤5∗105,n=5∗105</p>
<p>Output<br>For every test.print the answer.</p>
<p>Sample Input<br>2<br>3 5 5 7<br>6 8 8 9</p>
<p>Sample Output<br>14<br>16</p>
<h3 id="题解">题解</h3><p>这道题就是给你一堆数，两两相加然后异或，同0异1，想象一个二维数组，只要不是在斜线上的点，我们总可以找到镜像点，so，只要把相同的数乘2然后异或就好了。<br>注意用long long </p>
<h2 id="<!-￼0->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line">LL ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="keyword">int</span> n,m,z,l;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;n,&amp;m,&amp;z,&amp;l);</span><br><span class="line">         LL b=<span class="number">0</span>,c;</span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">         &#123;</span><br><span class="line">             c=(b*m+z)%l;</span><br><span class="line">             ans^=(<span class="number">2</span>*c);</span><br><span class="line">             b=c;</span><br><span class="line">         &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="1005_MZL’s_chemistry"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5347" target="_blank" rel="external">1005    MZL’s chemistry</a></h2><p>Problem Description<br>MZL define F(X) as the first ionization energy of the chemical element X</p>
<p>Now he get two chemical elements U,V,given as their atomic number,he wants to compare F(U) and F(V)</p>
<p>It is guaranteed that atomic numbers belongs to the given set:{1,2,3,4,..18,35,36,53,54,85,86}</p>
<p>It is guaranteed the two atomic numbers is either in the same period or in the same group</p>
<p>It is guaranteed that x≠y</p>
<p>Input<br>There are several test cases</p>
<p>For each test case,there are two numbers u,v,means the atomic numbers of the two element</p>
<p>Output<br>For each test case,if F(u)&gt;F(v),print “FIRST BIGGER”,else print”SECOND BIGGER”</p>
<p>Sample Input<br>1 2<br>5 3</p>
<p>Sample Output<br>SECOND BIGGER<br>FIRST BIGGER</p>
<h3 id="题解-1">题解</h3><p>我拒绝写题解</p>
<h2 id="<!-￼1->"><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;cmath&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#include &lt;iomanip&gt;</span><br><span class="line">#include &lt;queue&gt;</span><br><span class="line">#include &lt;ctime&gt;</span><br><span class="line">#include &lt;ctype.h&gt;</span><br><span class="line">#define maxn <span class="number">1000005</span></span><br><span class="line">#define INF 12222</span><br><span class="line">#define ll long long</span><br><span class="line">using namespace std<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">int u,v<span class="comment">;</span></span><br><span class="line">int f[200]=&#123;<span class="number">0,1312,237</span><span class="number">2.3,520</span>.<span class="number">2,932,80</span><span class="number">0.6,1086</span>.<span class="number">5,1402.3</span>,<span class="number">1313.9,168</span><span class="number">1,2080.7</span>,<span class="number">495.8,73</span><span class="number">7.7,577</span>.<span class="number">5,786.5</span>,<span class="number">1011.8,99</span><span class="number">9.6,1251</span>.<span class="number">2,1520.6</span>,</span><br><span class="line"><span class="number">418.8,58</span><span class="number">9.8,633</span>.<span class="number">1,658.8</span>,<span class="number">650.9,65</span><span class="number">2.9,717</span>.<span class="number">3,762.5</span>,<span class="number">760.4,73</span><span class="number">7.1,745</span>.<span class="number">5,906.4</span>,<span class="number">578.8,76</span><span class="number">2,947,94</span><span class="number">1,1139.9</span>,<span class="number">1350.8,40</span><span class="number">3,549.5</span>,<span class="number">600,640</span>.<span class="number">1,652.1</span>,</span><br><span class="line"><span class="number">684.3,70</span><span class="number">2,710.2</span>,<span class="number">719.7,80</span><span class="number">4.4,731</span>,<span class="number">867.8,55</span><span class="number">8.3,708</span>.<span class="number">6,834,86</span><span class="number">9.3,1008</span>.<span class="number">4,1170.4</span>,<span class="number">375.7,50</span><span class="number">2.9,538</span>.<span class="number">1,534.4</span>,<span class="number">527,533</span>.<span class="number">1,540,54</span><span class="number">4.5,547</span>.<span class="number">1,593.4</span>,</span><br><span class="line"><span class="number">565.8,57</span><span class="number">3,581,58</span><span class="number">9.3,596</span>.<span class="number">7,603.4</span>,<span class="number">523.5,65</span><span class="number">8.5,761</span>,<span class="number">770,760</span>,<span class="number">840,880</span>,<span class="number">870,890</span>.<span class="number">1,1007.1</span>,<span class="number">589.4,71</span><span class="number">5.6,703</span>,<span class="number">812.1,89</span><span class="number">0,1037,38</span><span class="number">0,509.3</span>,<span class="number">499,587</span></span><br><span class="line">,<span class="number">568,597</span>.<span class="number">6,604.5</span>,<span class="number">584.7,57</span><span class="number">8,581,60</span><span class="number">1,608,61</span><span class="number">9,627,63</span><span class="number">5,642,47</span>0,580,&#125;<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    while(cin&gt;&gt;u&gt;&gt;v)</span><br><span class="line">    &#123;</span><br><span class="line">        if(f[u]&gt;f[v])</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;"FIRST BIGGER"&lt;&lt;endl<span class="comment">;</span></span><br><span class="line">        &#125;</span><br><span class="line">        if(f[u]&lt;=f[v])</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;"SECOND BIGGER"&lt;&lt;endl<span class="comment">;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="1007_MZL’s_simple_problem"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5349" target="_blank" rel="external">1007    MZL’s simple problem</a></h2><p>Problem Description<br>A simple problem<br>Problem Description<br>You have a multiple set,and now there are three kinds of operations:<br>1 x : add number x to set<br>2 : delete the minimum number (if the set is empty now,then ignore it)<br>3 : query the maximum number (if the set is empty now,the answer is 0)</p>
<p>Input<br>The first line contains a number N (N≤106),representing the number of operations.<br>Next N line ,each line contains one or two numbers,describe one operation.<br>The number in this set is not greater than 109. </p>
<p>Output<br>For each operation 3,output a line representing the answer.</p>
<p>Sample Input<br>6<br>1 2<br>1 3<br>3<br>1 3<br>1 4<br>3</p>
<p>Sample Output<br>3<br>4</p>
<h3 id="题解-2">题解</h3><p>这道题还是蛮有用的，刚开始想用set搞，结果会T。其实就是记录最大值，在记录1操作的次数和2操作的次数判断是否为空。为空记得把最大值再次初始化。</p>
<h2 id="<!-￼2->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;ctime&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;deque&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;list&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;set&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stack&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;numeric&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iomanip&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;bitset&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;sstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;fstream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;limits.h&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> debug "output for debug\n"</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> pi (acos(-1.0))</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> eps (1e-4)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> inf (1&lt;&lt;28)</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> sqr(x) (x) * (x)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    LL n, a, b, maxn = -<span class="number">1e13</span>, num1 = <span class="number">0</span>, num2 = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;a);</span><br><span class="line">        <span class="keyword">if</span>(a == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;b);</span><br><span class="line">            num1++;</span><br><span class="line">            sum++;</span><br><span class="line">            <span class="keyword">if</span>(maxn &lt; b)</span><br><span class="line">                maxn = b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(sum &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                sum--;</span><br><span class="line">                num2++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a == <span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(num2 &gt;= num1)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, maxn);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(num2 &gt;= num1)</span><br><span class="line">            maxn = -<span class="number">1e13</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2>]]></content>
    <summary type="html">
    <![CDATA[<p>老规矩，先上水题</p>
<h2 id="1002_MZL’s_xor"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5344">1002    MZL’s xor</a></h2><p>Problem Description<br>MZL loves xor very much.Now he gets an array A.The length of A is n.He wants to know the xor of all (Ai+Aj)(1≤i,j≤n)<br>The xor of an array B is defined as B1 xor B2…xor Bn<br>]]>
    
    </summary>
    
      <category term="多校" scheme="http://guoyuxiang.com/tags/%E5%A4%9A%E6%A0%A1/"/>
    
      <category term="题解" scheme="http://guoyuxiang.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="多校" scheme="http://guoyuxiang.com/categories/%E5%A4%9A%E6%A0%A1/"/>
    
  </entry>
  
</feed>