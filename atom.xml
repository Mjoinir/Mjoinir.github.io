<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[Mjolnir]]></title>
  <subtitle><![CDATA[even if you get killed,just walk it off!]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com//"/>
  <updated>2015-07-27T08:36:55.730Z</updated>
  <id>http://yoursite.com//</id>
  
  <author>
    <name><![CDATA[Mjolnir]]></name>
    <email><![CDATA[me@guoyuxiang.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[基于swiftype应用于Hexo Yilia 主题的站内搜索引擎]]></title>
    <link href="http://yoursite.com/2015/07/27/%E5%9F%BA%E4%BA%8Eswiftype%E5%BA%94%E7%94%A8%E4%BA%8EHexo-Yilia-%E4%B8%BB%E9%A2%98%E7%9A%84%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/"/>
    <id>http://yoursite.com/2015/07/27/基于swiftype应用于Hexo-Yilia-主题的站内搜索引擎/</id>
    <published>2015-07-27T07:47:29.000Z</published>
    <updated>2015-07-27T08:36:55.730Z</updated>
    <content type="html"><![CDATA[<p>本文基于<a href="http://www.yehbeats.com/2015/04/08/hexo-search/" target="_blank" rel="external">Hexo，Yilia主题添加站内搜索功能</a>与<a href="http://opiece.me/2015/04/16/site-search-by-swiftype/" target="_blank" rel="external">使用swiftype实现站内搜索</a><br>文章之前首先感谢以上两位作者YeHbeats与 huangjunhui</p>
<h2 id="swiftype">swiftype</h2><p>Swiftype 可以为网站及移动 app 提供内置搜索引掣服务。其部署十分简单，只须输入 URL 地址平台即可执行对用户网站的抓取，插入 JavaScript 代码嵌入网站就即完成搜索引擎的创建。Swiftype 还提供了分析服务，供网站检索分析用户的搜索行为和使用偏好。Swiftype 还支持对搜索结果排序进行定制。<br><a id="more"></a></p>
<ul>
<li>注册<a href="https://swiftype.com/" target="_blank" rel="external">swiftype</a> 填写相关信息</li>
<li>登陆swiftype后，点击CREATE SEARCH ENGINE，之后填入自己的网址等等几个操作。</li>
<li>进入install页面，如下图，左边有4个大的选项，分别为：外观、安装代码、搜索框、起动。<br><img src="http://7xkl3j.com1.z0.glb.clouddn.com/1111.png" alt="111"></li>
<li>在外观(appearance)一项，建议使用默认，一直NEXT，最后SAVA&amp;PREVIEW</li>
<li>进入安装代码(install code)一项，将生成的代码复制一份，后面用到。</li>
<li>进入搜索框(search field)一项，如果你使用的主题跟我差不多，可以跟我的配置一样，只要改个id就行了，如下图。<br><img src="http://7xkl3j.com1.z0.glb.clouddn.com/222.png" alt="222"></li>
<li>进入最后一项(activate)，找到右下角的ACTIVATE SWIFTYPE按钮，点击即可，此时你已经完成了swiftype网站上的所有配置。<br><img src="http://7xkl3j.com1.z0.glb.clouddn.com/333.png" alt="333"><h2 id="搜索框">搜索框</h2></li>
<li>因为Yilia主题将搜索框拿掉了，所以需要自己添加，你可以选择自己添加的位置，我的添加到了左侧的顶部。打开目录hexo\themes\yilia\layout_partial，打开文件left-col.ejs。<br>在如下位置加入如下代码(if语句处的代码)：<figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="variable">class=</span><span class="string">"overlay"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;div <span class="variable">class=</span><span class="string">"intrude-less"</span>&gt;</span><br><span class="line">&lt;form <span class="variable">class=</span><span class="string">"search"</span> <span class="variable">method=</span><span class="string">"get"</span> <span class="variable">accept-charset=</span><span class="string">"utf-8"</span>&gt;</span><br><span class="line">&lt;label&gt;Search&lt;/label&gt;</span><br><span class="line">			&lt;input <span class="variable">type=</span><span class="string">"text"</span> <span class="variable">id=</span><span class="string">"chillax-search-input"</span> <span class="variable">class=</span><span class="string">"st-search-input_my"</span> <span class="variable">maxlength=</span><span class="string">"30"</span> <span class="variable">placeholder=</span><span class="string">"search"</span> /&gt;</span><br><span class="line">		&lt;/form&gt;</span><br><span class="line">	&lt;header <span class="variable">id=</span><span class="string">"header"</span> <span class="variable">class=</span><span class="string">"inner"</span>&gt;</span><br><span class="line">	</span><br><span class="line">		&lt;a <span class="variable">href=</span><span class="string">"/"</span> <span class="variable">class=</span><span class="string">"profilepic"</span>&gt;</span><br></pre></td></tr></table></figure></li>
<li>修改footer.ejs<br>最后打开本目录下的footer.ejs，在如下位置添加那段js代码：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="clojure"></span><br><span class="line">  <span class="list">(<span class="keyword">function</span><span class="list">(<span class="keyword">w</span>,d,t,u,n,s,e)</span><span class="collection">&#123;w<span class="collection">['SwiftypeObject']</span>=n;w<span class="collection">[n]</span>=w<span class="collection">[n]</span>||function<span class="list">()</span><span class="collection">&#123;</span><br><span class="line">  <span class="list">(<span class="keyword">w</span><span class="collection">[n]</span>.q=w<span class="collection">[n]</span>.q||<span class="collection">[]</span>)</span>.push<span class="list">(<span class="keyword">arguments</span>)</span><span class="comment">;&#125;;s=d.createElement(t);</span></span><br><span class="line">  e=d.getElementsByTagName<span class="list">(<span class="keyword">t</span>)</span><span class="collection">[<span class="number">0</span>]</span><span class="comment">;s.async=1;s.src=u;e.parentNode.insertBefore(s,e);</span></span><br><span class="line">  &#125;</span>)<span class="list">(<span class="keyword">window</span>,document,'script','//s.swiftypecdn.com/install/v2/st.js','_st')</span><span class="comment">;</span></span><br><span class="line"></span><br><span class="line">  _st<span class="list">(<span class="keyword">'install'</span>,'bgPZswnFC5YQTKMKbSFN','2.0.0')</span><span class="comment">;</span></span><br><span class="line"></span></span></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">footer</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>添加搜索框样式<br>打开目录hexo\themes\yilia\source\css，在style.styl文件的末尾添加如下代码：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">.search</span></span><br><span class="line">  <span class="tag">padding</span> 1<span class="tag">em</span> 0 0 2<span class="class">.5em</span></span><br><span class="line">  <span class="tag">input</span></span><br><span class="line">    <span class="tag">line-height</span> <span class="tag">line-height</span>+0<span class="class">.2</span></span><br><span class="line">    <span class="tag">border</span> 1<span class="tag">px</span> <span class="tag">solid</span> <span class="tag">color-white</span></span><br><span class="line">    <span class="tag">color</span> <span class="tag">color-white</span></span><br><span class="line">    <span class="tag">background</span> <span class="tag">transparent</span></span><br><span class="line">    <span class="tag">padding-left</span> 4<span class="tag">em</span></span><br><span class="line">    <span class="at_rule">@<span class="keyword">media</span> tablet</span><br><span class="line">      width <span class="number">4em</span></span><br><span class="line">      transition .<span class="number">5s</span> width</span><br><span class="line">      &amp;:focus</span><br><span class="line">        width <span class="number">8em</span></span><br><span class="line">  label</span><br><span class="line">    display none</span><br><span class="line"></span><br><span class="line">form input.st-search-input_my </span>&#123;</span><br><span class="line">	<span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">12px</span></span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">4px</span> <span class="number">9px</span> <span class="number">4px</span> <span class="number">27px</span></span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">20px</span></span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">190px</span></span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">32px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">70px</span></span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#666</span></span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">1px</span> solid <span class="hexcolor">#ccc</span></span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">-webkit-border-radius</span>:<span class="value"> <span class="number">15px</span></span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">-moz-border-radius</span>:<span class="value"> <span class="number">15px</span></span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">-ms-border-radius</span>:<span class="value"> <span class="number">15px</span></span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">-o-border-radius</span>:<span class="value"> <span class="number">15px</span></span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">15px</span></span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">-webkit-box-shadow</span>:<span class="value"> inset <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="number">0</span> <span class="function">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.17</span>)</span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">-moz-box-shadow</span>:<span class="value"> inset <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="number">0</span> <span class="function">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.17</span>)</span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">box-shadow</span>:<span class="value"> inset <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="number">0</span> <span class="function">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.17</span>)</span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">outline</span>:<span class="value"> none</span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#fcfcfc</span> <span class="function">url</span>(/img/search.png) no-repeat <span class="number">7px</span> <span class="number">7px</span></span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>修改overlay参数，使得搜索框放在覆盖层上<br>打开目录hexo\themes\yilia\source\css_partial，在main.styl中添加left-col中overlay z-index 参数：<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">.left-col</span> &#123;</span><br><span class="line">		<span class="attribute">background</span>: <span class="hexcolor">#fff</span>;</span><br><span class="line">		<span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">		<span class="attribute">position</span>:fixed;</span><br><span class="line">		<span class="attribute">opacity</span>:<span class="number">1</span>;</span><br><span class="line">		<span class="attribute">transition</span>:all .<span class="number">2s</span> ease-in;</span><br><span class="line">		<span class="attribute">height</span>:<span class="number">100%</span>;</span><br><span class="line"></span><br><span class="line">		<span class="class">.overlay</span>&#123;</span><br><span class="line">			<span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">			<span class="attribute">height</span>: <span class="number">180px</span>;</span><br><span class="line">			<span class="attribute">background-color</span>: black;</span><br><span class="line">			<span class="attribute">position</span>: absolute;</span><br><span class="line">			<span class="attribute">opacity</span>: <span class="number">0.7</span>;</span><br><span class="line">			<span class="attribute">z-index</span>: -<span class="number">1</span>;<span class="comment">//就是你</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="class">.intrude-less</span> &#123;</span><br><span class="line">			<span class="attribute">width</span>: <span class="number">76%</span>;</span><br><span class="line">			<span class="attribute">text-align</span>: center;</span><br><span class="line">			<span class="attribute">margin</span>: <span class="number">112px</span> auto <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></li>
<li>大功告成！<h2 id="结束语">结束语</h2>感谢各位神犇的无私奉献，结果页面放在本站search里也是可以的，不过我更钟情于swiftype提供的页面，欢迎转载。</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>本文基于<a href="http://www.yehbeats.com/2015/04/08/hexo-search/">Hexo，Yilia主题添加站内搜索功能</a>与<a href="http://opiece.me/2015/04/16/site-search-by-swiftype/">使用swiftype实现站内搜索</a><br>文章之前首先感谢以上两位作者YeHbeats与 huangjunhui</p>
<h2 id="swiftype">swiftype</h2><p>Swiftype 可以为网站及移动 app 提供内置搜索引掣服务。其部署十分简单，只须输入 URL 地址平台即可执行对用户网站的抓取，插入 JavaScript 代码嵌入网站就即完成搜索引擎的创建。Swiftype 还提供了分析服务，供网站检索分析用户的搜索行为和使用偏好。Swiftype 还支持对搜索结果排序进行定制。<br>]]>
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="swiftype" scheme="http://yoursite.com/tags/swiftype/"/>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[BestCoder 1st Anniversary]]></title>
    <link href="http://yoursite.com/2015/07/26/BestCoder-1st-Anniversary/"/>
    <id>http://yoursite.com/2015/07/26/BestCoder-1st-Anniversary/</id>
    <published>2015-07-26T03:00:16.000Z</published>
    <updated>2015-07-26T07:34:54.776Z</updated>
    <content type="html"><![CDATA[<p>爆〇了！！！不爽啊……</p>
<h2 id="1001_Souvenir">1001 <a href="http://bestcoder.hdu.edu.cn/contests/contest_chineseproblem.php?cid=610&amp;pid=1001" target="_blank" rel="external">Souvenir</a></h2><p>问题描述<br>今天是BestCoder一周年纪念日. 比赛管理员Soda想要给每个参赛者准备一个纪念品. 商店里纪念品的单价是p元, 同时也可以花q元购买纪念品套装, 一个套装里有m个纪念品.</p>
<p>今天总共有n个参赛者, Soda想要知道最少需要花多少钱才可以给每个人都准备一个纪念品.<br>输入描述<br>输入有多组数据. 第一行有一个整数T (1≤T≤105), 表示测试数据组数. 然后对于每组数据:<br><a id="more"></a><br>一行包含4个整数 n,m,p,q (1≤n,m,p,q≤104).<br>输出描述<br>对于每组数据输出最小花费.<br>输入样例<br>2<br>1 2 2 1<br>1 2 3 4<br>输出样例<br>1<br>3<br>Hint<br>对于第一组数据, Soda可以1元购买一个套装. 对于第二组数据, Soda可以直接花3元购买一个纪念品.</p>
<h3 id="题解">题解</h3><p>大水题啊，看看套装会不会单卖比较便宜，还有就是买完套装之后零头是用单件填还是拿一个套装填的问题。<br>我靠，bug的地方竟然是不能用cin cout 读写，1e5的数据你和我说不能cin！</p>
<h2 id="<!-￼0->"><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#<span class="keyword">include</span>&lt;cstdio&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        int <span class="keyword">n</span>,<span class="keyword">m</span>,p,q;</span><br><span class="line">        scanf(<span class="string">"%d%d%d%d"</span>,&amp;<span class="keyword">n</span>,&amp;<span class="keyword">m</span>,&amp;p,&amp;q);</span><br><span class="line">        int ans;</span><br><span class="line">        <span class="keyword">if</span> (p*<span class="keyword">m</span>&lt;q) ans=<span class="keyword">n</span>*p;</span><br><span class="line">        <span class="keyword">else</span> ans=<span class="literal">min</span>(<span class="keyword">n</span>/<span class="keyword">m</span>*q+<span class="keyword">n</span>%<span class="keyword">m</span>*p,(<span class="keyword">n</span>+<span class="keyword">m</span>-1)/<span class="keyword">m</span>*q);</span><br><span class="line">        printf(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="1002_Hidden_String">1002 <a href="http://acm.hdu.edu.cn/showproblem.php?pid=5311" target="_blank" rel="external">Hidden String</a></h2><p>问题描述<br>今天是BestCoder一周年纪念日. 比赛管理员Soda有一个长度为n的字符串s. 他想要知道能否找到s的三个互不相交的子串s[l1..r1], s[l2..r2], s[l3..r3]满足下列条件:</p>
<ol>
<li><p>1≤l1≤r1&lt;l2≤r2&lt;l3≤r3≤n</p>
</li>
<li><p>s[l1..r1], s[l2..r2], s[l3..r3]依次连接之后得到字符串”anniversary”.<br>输入描述<br>输入有多组数据. 第一行有一个整数T (1≤T≤100), 表示测试数据组数. 然后对于每组数据:</p>
</li>
</ol>
<p>一行包含一个仅含小写字母的字符串s (1≤|s|≤100).<br>输出描述<br>对于每组数据, 如果Soda可以找到这样三个子串, 输出”YES”, 否则输出”NO”.<br>输入样例<br>2<br>annivddfdersewwefary<br>nniversarya<br>输出样例<br>YES<br>NO</p>
<h3 id="题解-1">题解</h3><p>暴力搜就好，先把anniversary分成小块，然后在s里枚举找，思路是对的，然而用string的substr和find并不如c里的strcmp与strstr 姿势优美<br>T_T……<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">105</span>];</span><br><span class="line"><span class="keyword">char</span> str[]=<span class="string">"anniversary"</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=<span class="number">8</span>; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=i+<span class="number">1</span>; j&lt;=<span class="number">9</span>; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">char</span> s1[<span class="number">10</span>],s2[<span class="number">10</span>],s3[<span class="number">10</span>];</span><br><span class="line">                <span class="built_in">strncpy</span>(s1,str,i+<span class="number">1</span>);</span><br><span class="line">                s1[i+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">                <span class="built_in">strncpy</span>(s2,str+i+<span class="number">1</span>,j-i);</span><br><span class="line">                s2[j-i]=<span class="number">0</span>;</span><br><span class="line">                <span class="built_in">strcpy</span>(s3,str+j+<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">char</span> *a1=<span class="built_in">strstr</span>(s,s1);</span><br><span class="line">                <span class="keyword">if</span> (a1)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">char</span> *a2=<span class="built_in">strstr</span>(a1+i+<span class="number">1</span>,s2);</span><br><span class="line">                    <span class="keyword">if</span> (a2&amp;&amp;<span class="built_in">strstr</span>(a2+j-i,s3))</span><br><span class="line">                    &#123;</span><br><span class="line">                        flag=<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag) <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="<!-￼2->"><blockquote><p>char *strncpy(char *dest, char *src, int n)<br>把src所指字符串的前n个字节复制到dest所指的数组中，并返回dest;</p>
<p>char* strstr(str1,str2)<br>str1: 被查找目标<br>str2: 要查找对象<br>若str2是str1的子串，则先确定str2在str1的第一次出现的位置，并返回此str1在str2首位置的地址。；如果str2不是str1的子串，则返回NULL;</p>
</blockquote></h2>]]></content>
    <summary type="html">
    <![CDATA[<p>爆〇了！！！不爽啊……</p>
<h2 id="1001_Souvenir">1001 <a href="http://bestcoder.hdu.edu.cn/contests/contest_chineseproblem.php?cid=610&amp;pid=1001">Souvenir</a></h2><p>问题描述<br>今天是BestCoder一周年纪念日. 比赛管理员Soda想要给每个参赛者准备一个纪念品. 商店里纪念品的单价是p元, 同时也可以花q元购买纪念品套装, 一个套装里有m个纪念品.</p>
<p>今天总共有n个参赛者, Soda想要知道最少需要花多少钱才可以给每个人都准备一个纪念品.<br>输入描述<br>输入有多组数据. 第一行有一个整数T (1≤T≤105), 表示测试数据组数. 然后对于每组数据:<br>]]>
    
    </summary>
    
      <category term="bestcoder" scheme="http://yoursite.com/tags/bestcoder/"/>
    
      <category term="题解" scheme="http://yoursite.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="bestcoder" scheme="http://yoursite.com/categories/bestcoder/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2015 Multi-University Training Contest 2 1006]]></title>
    <link href="http://yoursite.com/2015/07/25/2015-Multi-University-Training-Contest-2-1006/"/>
    <id>http://yoursite.com/2015/07/25/2015-Multi-University-Training-Contest-2-1006/</id>
    <published>2015-07-25T07:05:46.000Z</published>
    <updated>2015-07-25T07:35:44.707Z</updated>
    <content type="html"><![CDATA[<h2 id="Friends"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5305" target="_blank" rel="external">Friends</a></h2><p>Problem Description<br>There are n people and m pairs of friends. For every pair of friends, they can choose to become online friends (communicating using online applications) or offline friends (mostly using face-to-face communication). However, everyone in these n people wants to have the same number of online and offline friends (i.e. If one person has x onine friends, he or she must have x offline friends too, but different people can have different number of online or offline friends). Please determine how many ways there are to satisfy their requirements. </p>
<p>Input<br>The first line of the input is a single integer T (T=100), indicating the number of testcases.<br><a id="more"></a><br>For each testcase, the first line contains two integers n (1≤n≤8) and m (0≤m≤n(n−1)2), indicating the number of people and the number of pairs of friends, respectively. Each of the next m lines contains two numbers x and y, which mean x and y are friends. It is guaranteed that x≠y and every friend relationship will appear at most once. </p>
<p>Output<br>For each testcase, print one number indicating the answer.</p>
<p>Sample Input<br>2<br>3 3<br>1 2<br>2 3<br>3 1<br>4 4<br>1 2<br>2 3<br>3 4<br>4 1</p>
<p>Sample Output<br>0</p>
<h2 id="2">2</h2><h3 id="题解">题解</h3><blockquote><p>一搜到底，无路则返</p>
<footer><strong>dfs</strong></footer></blockquote>
<p>n个人，m种关系，每种关系可以是线上盆友也可以是线下朋友，每个人都希望线上朋友和线下朋友一样多，问有几种情况。<br>人数不大于8，考虑暴力深搜，对于每两个人，无非就是：</p>
<ul>
<li>认识;</li>
<li>不认识;</li>
<li>X超过总人数;</li>
<li>Y超过总人数;<br>对于每一个初态，次态有两种走法：</li>
</ul>
<ol>
<li>线上朋友；</li>
<li>线下朋友；<br>对于4个人来说，搜的顺序是（1，2）（1，3）（1，4）（2，3）（2，4）（3，4）期间遵循DFS法则，一搜到底，无路则返，所以每一回成功总是X超过N的时候；<figure class="highlight cpp"><figcaption><span>dfs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T, n, m, a, b, ans, du[<span class="number">10</span>];<span class="comment">//记录每一个人的情况，初始为0，线上朋友+1，线下朋友-1，搜完还是0说明这条路起码对i来说是可行的</span></span><br><span class="line"><span class="keyword">int</span> ed[<span class="number">10</span>][<span class="number">10</span>];<span class="comment">//记录两个人认识不认识</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &gt; n) ans++;<span class="comment">//X爆掉了</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (y &gt; n)<span class="comment">//Y爆掉了</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (du[x]) <span class="keyword">return</span> ;</span><br><span class="line">        dfs(x + <span class="number">1</span>, x + <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ed[x][y])<span class="comment">//认识</span></span><br><span class="line">        &#123;</span><br><span class="line">            du[x]++;</span><br><span class="line">            du[y]++;</span><br><span class="line">            dfs(x, y + <span class="number">1</span>);<span class="comment">//如果两个人是线上朋友</span></span><br><span class="line">            du[x] -= <span class="number">2</span>;</span><br><span class="line">            du[y] -= <span class="number">2</span>;</span><br><span class="line">            dfs(x, y + <span class="number">1</span>);<span class="comment">//如果两个人是线下朋友</span></span><br><span class="line">            du[x]++;</span><br><span class="line">            du[y]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> dfs(x, y + <span class="number">1</span>);<span class="comment">//不认识</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">                ed[i][j] = <span class="number">0</span>;<span class="comment">//建图</span></span><br><span class="line">        <span class="keyword">while</span> (m--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;a, &amp;b);</span><br><span class="line">            ed[a][b] = ed[b][a] = <span class="number">1</span>;<span class="comment">//标图</span></span><br><span class="line">        &#125;</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        dfs(<span class="number">1</span>, <span class="number">2</span>);<span class="comment">//初始状态</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<hr>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Friends"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5305">Friends</a></h2><p>Problem Description<br>There are n people and m pairs of friends. For every pair of friends, they can choose to become online friends (communicating using online applications) or offline friends (mostly using face-to-face communication). However, everyone in these n people wants to have the same number of online and offline friends (i.e. If one person has x onine friends, he or she must have x offline friends too, but different people can have different number of online or offline friends). Please determine how many ways there are to satisfy their requirements. </p>
<p>Input<br>The first line of the input is a single integer T (T=100), indicating the number of testcases.<br>]]>
    
    </summary>
    
      <category term="多校" scheme="http://yoursite.com/tags/%E5%A4%9A%E6%A0%A1/"/>
    
      <category term="题解" scheme="http://yoursite.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="多校" scheme="http://yoursite.com/categories/%E5%A4%9A%E6%A0%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[《中国好声音4》第二期 张惠妹亲妹为孩子复出 那英周董抢“姚晨”]]></title>
    <link href="http://yoursite.com/2015/07/25/2015-07-24%E6%9C%9F-%E5%AE%8C%E6%95%B4%E7%89%88%EF%BC%9A-%E7%AC%AC2%E6%9C%9F-%E5%BC%A0%E6%83%A0%E5%A6%B9%E4%BA%B2%E5%A6%B9%E4%B8%BA%E5%AD%A9%E5%AD%90%E5%A4%8D%E5%87%BA-%E9%82%A3%E8%8B%B1/"/>
    <id>http://yoursite.com/2015/07/25/2015-07-24期-完整版：-第2期-张惠妹亲妹为孩子复出-那英/</id>
    <published>2015-07-25T02:15:41.000Z</published>
    <updated>2015-07-25T02:23:54.691Z</updated>
    <content type="html"><![CDATA[<p><iframe frameborder="1" width="640" height="498" src="http://v.qq.com/iframe/player.html?vid=g0017wg167v&tiny=0&auto=0" allowfullscreen></iframe><br>今天看到凌晨两点，感觉自己萌萌哒······</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><iframe frameborder="1" width="640" height="498" src="http://v.qq.com/iframe/player.html?vid=g0017wg167v&tiny=0&auto=0" allowfullscreen><]]>
    </summary>
    
      <category term="好声音" scheme="http://yoursite.com/tags/%E5%A5%BD%E5%A3%B0%E9%9F%B3/"/>
    
      <category term="好声音" scheme="http://yoursite.com/categories/%E5%A5%BD%E5%A3%B0%E9%9F%B3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2015 Multi-University Training Contest 2-1002]]></title>
    <link href="http://yoursite.com/2015/07/24/2015-Multi-University-Training-Contest-2-1002/"/>
    <id>http://yoursite.com/2015/07/24/2015-Multi-University-Training-Contest-2-1002/</id>
    <published>2015-07-24T14:47:20.000Z</published>
    <updated>2015-07-24T15:25:43.423Z</updated>
    <content type="html"><![CDATA[<h2 id="Buildings"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5301" target="_blank" rel="external">Buildings</a></h2><p>Problem Description<br>Your current task is to make a ground plan for a residential building located in HZXJHS. So you must determine a way to split the floor building with walls to make apartments in the shape of a rectangle. Each built wall must be paralled to the building’s sides.</p>
<p>The floor is represented in the ground plan as a large rectangle with dimensions n×m, where each apartment is a smaller rectangle with dimensions a×b located inside. For each apartment, its dimensions can be different from each other. The number a and b must be integers.</p>
<p>Additionally, the apartments must completely cover the floor without one 1×1 square located on (x,y). The apartments must not intersect, but they can touch.</p>
<p>For this example, this is a sample of n=2,m=3,x=2,y=2.</p>
<a id="more"></a>
<p><img src="http://acm.hdu.edu.cn/data/images/C590-1002-1.jpg" alt="example"><br>To prevent darkness indoors, the apartments must have windows. Therefore, each apartment must share its at least one side with the edge of the rectangle representing the floor so it is possible to place a window.</p>
<p>Your boss XXY wants to minimize the maximum areas of all apartments, now it’s your turn to tell him the answer.</p>
<p>Input<br>There are at most 10000 testcases.<br>For each testcase, only four space-separated integers, n,m,x,y(1≤n,m≤108,n×m&gt;1,1≤x≤n,1≤y≤m).</p>
<p>Output<br>For each testcase, print only one interger, representing the answer.</p>
<p>Sample Input<br>2 3 2 2<br>3 3 1 1</p>
<p>Sample Output<br>1</p>
<h2 id="2">2</h2><h3 id="题解">题解</h3><p>首先这道题是一个最大值的最小值问题，关键在于图中每一点都要通过某种途径接触到边，不够机智，特判太多导致WA；<br>这道题有两点：</p>
<ul>
<li>图是对称的，只要求最短边就好，如果没有坏点，那么一定是（n+1）/ 2；</li>
<li>如果有坏点，如果点距左右两边的最小值值小于ans的话，这个图还是能被填满的；</li>
<li>trick来了，其实发现ans填不满的话，刚刚的最小值第一个大于ans,坏点距上下边界也有一个大于ans的；二者找最小；</li>
<li>5 5 3 3 7 7 4 4 要特判 ans—；<figure class="highlight openscad"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">#</span><span class="preprocessor"><span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="built_in">#</span><span class="preprocessor"><span class="keyword">include</span>&lt;cstdio&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int a, b, x, y, c, d, r;</span><br><span class="line">int main<span class="params">()</span>&#123;</span><br><span class="line">	while<span class="params">(scanf<span class="params">(<span class="string">"%d%d%d%d"</span>, &amp;a, &amp;b, &amp;x, &amp;y)</span> != EOF)</span></span><br><span class="line">        &#123;</span><br><span class="line">		<span class="keyword">if</span><span class="params">(a &gt; b)</span> swap<span class="params">(a, b)</span>, swap<span class="params">(x, y)</span>;</span><br><span class="line">		r = <span class="params">(a + <span class="number">1</span>)</span> / <span class="number">2</span>;</span><br><span class="line">		c = <span class="built_in">max</span><span class="params">(x - <span class="number">1</span>, a - x)</span>;</span><br><span class="line">		d = <span class="built_in">min</span><span class="params">(y, b - y + <span class="number">1</span>)</span>;</span><br><span class="line">		<span class="keyword">if</span><span class="params">(r &lt; d &amp;&amp; x - <span class="number">1</span> != a - x)</span>  r = <span class="built_in">min</span><span class="params">(c, d)</span>;</span><br><span class="line">		<span class="keyword">if</span><span class="params">(a == b &amp;&amp; <span class="params">(a &amp; <span class="number">1</span>)</span> &amp;&amp; x == y &amp;&amp; <span class="params">(x * <span class="number">2</span> - <span class="number">1</span> == a)</span>)</span> r = a / <span class="number">2</span>;</span><br><span class="line">		printf<span class="params">(<span class="string">"%d\n"</span>, r)</span>;</span><br><span class="line">	    &#125;</span><br><span class="line">	return <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Buildings"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5301">Buildings</a></h2><p>Problem Description<br>Your current task is to make a ground plan for a residential building located in HZXJHS. So you must determine a way to split the floor building with walls to make apartments in the shape of a rectangle. Each built wall must be paralled to the building’s sides.</p>
<p>The floor is represented in the ground plan as a large rectangle with dimensions n×m, where each apartment is a smaller rectangle with dimensions a×b located inside. For each apartment, its dimensions can be different from each other. The number a and b must be integers.</p>
<p>Additionally, the apartments must completely cover the floor without one 1×1 square located on (x,y). The apartments must not intersect, but they can touch.</p>
<p>For this example, this is a sample of n=2,m=3,x=2,y=2.</p>]]>
    
    </summary>
    
      <category term="多校" scheme="http://yoursite.com/tags/%E5%A4%9A%E6%A0%A1/"/>
    
      <category term="题解" scheme="http://yoursite.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="多校" scheme="http://yoursite.com/categories/%E5%A4%9A%E6%A0%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[水DP+组合数->矩阵快速幂+逆元->费马小定理模板]]></title>
    <link href="http://yoursite.com/2015/07/24/%E6%B0%B4DP-%E7%BB%84%E5%90%88%E6%95%B0-%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82-%E9%80%86%E5%85%83-%E8%B4%B9%E9%A9%AC%E5%B0%8F%E5%AE%9A%E7%90%86%E6%A8%A1%E6%9D%BF/"/>
    <id>http://yoursite.com/2015/07/24/水DP-组合数-矩阵快速幂-逆元-费马小定理模板/</id>
    <published>2015-07-24T09:41:22.000Z</published>
    <updated>2015-07-24T12:10:28.180Z</updated>
    <content type="html"><![CDATA[<h2 id="codeforces_313_Div2">codeforces 313 Div2</h2><p><a href="http://codeforces.com/contest/559/problem/C" target="_blank" rel="external">E. Gerald and Giant Chess</a></p>
<p>Giant chess is quite common in Geraldion. We will not delve into the rules of the game, we’ll just say that the game takes place on an h × w field, and it is painted in two colors, but not like in chess. Almost all cells of the field are white and only some of them are black. Currently Gerald is finishing a game of giant chess against his friend Pollard. Gerald has almost won, and the only thing he needs to win is to bring the pawn from the upper left corner of the board, where it is now standing, to the lower right corner. Gerald is so confident of victory that he became interested, in how many ways can he win?</p>
<p>The pawn, which Gerald has got left can go in two ways: one cell down or one cell to the right. In addition, it can not go to the black cells, otherwise the Gerald still loses. There are no other pawns or pieces left on the field, so that, according to the rules of giant chess Gerald moves his pawn until the game is over, and Pollard is just watching this process.<br><a id="more"></a><br>Input<br>The first line of the input contains three integers: h, w, n — the sides of the board and the number of black cells (1 ≤ h, w ≤ 105, 1 ≤ n ≤ 2000).</p>
<p>Next n lines contain the description of black cells. The i-th of these lines contains numbers ri, ci (1 ≤ ri ≤ h, 1 ≤ ci ≤ w) — the number of the row and column of the i-th cell.</p>
<p>It is guaranteed that the upper left and lower right cell are white and all cells in the description are distinct.</p>
<p>Output<br>Print a single line — the remainder of the number of ways to move Gerald’s pawn from the upper left to the lower right corner modulo 109 + 7.</p>
<p>Sample test(s)<br>input<br>3 4 2<br>2 2<br>2 3<br>output<br>2<br>input<br>100 100 3<br>15 16<br>16 15<br>99 88<br>output<br>545732279</p>
<h3 id="题解">题解</h3><p> 给定h*w的格子，n个不可走的点，从(1,1)到(h,w)点，每次只能向下或者向右，求有多少种走法？<br>      首先先不考虑不可走的点，有C(h+w-2,h-1)种走法，一共走h+w-2步，向下的有h-1步。接着考虑其中的不可走的<br>点，对于一个不可走的点(x,y)，它走到这个的点的走法是dp[i]，它少走的是dp[i]*C(h-x,w-y,h-x)，于是把每个不可走<br>的点当为终点，可以求出所有的走法数。层层递归，模版需要调用。<a href="http://blog.csdn.net/caduca/article/details/47018491" target="_blank" rel="external">原题解大犇</a><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> h,w,n;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">200000</span>+<span class="number">100</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1000000000</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> c[maxn];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> inv[maxn];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> dp[<span class="number">5000</span>];</span><br><span class="line"><span class="keyword">struct</span> node</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> y;</span><br><span class="line">&#125;a[<span class="number">10000</span>];</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">pow_mod</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">int</span> b)</span><span class="comment">//矩阵快速幂</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)</span><br><span class="line">        ans=(ans*a)%mod;</span><br><span class="line">        a=(a*a)%mod;</span><br><span class="line">        b=b/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">com</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span><span class="comment">//求组合数C(x,y)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ((c[x]*inv[y])%mod*inv[x-y])%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node u,node v)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u.x==v.x)</span><br><span class="line">    <span class="keyword">return</span> u.y&lt;v.y;</span><br><span class="line">    <span class="keyword">return</span> u.x&lt;v.x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;h,&amp;w,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a[i].x,&amp;a[i].y);</span><br><span class="line">    sort(a,a+n,cmp);</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">    c[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;maxn;i++)</span><br><span class="line">    c[i]=c[i-<span class="number">1</span>]*i%mod;</span><br><span class="line">    inv[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;maxn;i++)</span><br><span class="line">    inv[i]=pow_mod(c[i],mod-<span class="number">2</span>);<span class="comment">//费马小定理求逆，a^(p-2)=a^(-1)</span></span><br><span class="line">    ans=com(h+w-<span class="number">2</span>,h-<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        dp[i]=com(a[i].x+a[i].y-<span class="number">2</span>,a[i].x-<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++)<span class="comment">//求过第i个点的方法数</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j].x&lt;=a[i].x&amp;&amp;a[j].y&lt;=a[i].y)<span class="comment">//判断是否可以到达i点</span></span><br><span class="line">            &#123;</span><br><span class="line">                dp[i]-=(dp[j]*com(a[i].x-a[j].x+a[i].y-a[j].y,a[i].x-a[j].x))%mod;</span><br><span class="line">                dp[i]=(dp[i]+mod)%mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans=(ans-(dp[i]*com(h+w-a[i].x-a[i].y,h-a[i].x))%mod+mod)%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="codeforces_313_Div2">codeforces 313 Div2</h2><p><a href="http://codeforces.com/contest/559/problem/C">E. Gerald and Giant Chess</a></p>
<p>Giant chess is quite common in Geraldion. We will not delve into the rules of the game, we’ll just say that the game takes place on an h × w field, and it is painted in two colors, but not like in chess. Almost all cells of the field are white and only some of them are black. Currently Gerald is finishing a game of giant chess against his friend Pollard. Gerald has almost won, and the only thing he needs to win is to bring the pawn from the upper left corner of the board, where it is now standing, to the lower right corner. Gerald is so confident of victory that he became interested, in how many ways can he win?</p>
<p>The pawn, which Gerald has got left can go in two ways: one cell down or one cell to the right. In addition, it can not go to the black cells, otherwise the Gerald still loses. There are no other pawns or pieces left on the field, so that, according to the rules of giant chess Gerald moves his pawn until the game is over, and Pollard is just watching this process.<br>]]>
    
    </summary>
    
      <category term="codeforces" scheme="http://yoursite.com/tags/codeforces/"/>
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="难题" scheme="http://yoursite.com/tags/%E9%9A%BE%E9%A2%98/"/>
    
      <category term="模板" scheme="http://yoursite.com/categories/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Codeforces Round 313]]></title>
    <link href="http://yoursite.com/2015/07/23/Codeforces-Round-313/"/>
    <id>http://yoursite.com/2015/07/23/Codeforces-Round-313/</id>
    <published>2015-07-23T15:43:17.000Z</published>
    <updated>2015-07-24T02:41:07.402Z</updated>
    <content type="html"><![CDATA[<h2 id="A-_Currency_System_in_Geraldion"><em><a href="http://codeforces.com/contest/560/problem/A" target="_blank" rel="external">A. Currency System in Geraldion</a></em></h2><p>A magic island Geraldion, where Gerald lives, has its own currency system. It uses banknotes of several values. But the problem is, the system is not perfect and sometimes it happens that Geraldionians cannot express a certain sum of money with any set of banknotes. Of course, they can use any number of banknotes of each value. Such sum is called unfortunate. Gerald wondered: what is the minimum unfortunate sum?<br><a id="more"></a><br>Input<br>The first line contains number n (1 ≤ n ≤ 1000) — the number of values of the banknotes that used in Geraldion.</p>
<p>The second line contains n distinct space-separated numbers a1, a2, …, an (1 ≤ ai ≤ 106) — the values of the banknotes.</p>
<p>Output<br>Print a single line — the minimum unfortunate sum. If there are no unfortunate sums, print -1;</p>
<p>Sample test(s)<br>input<br>5<br>1 2 3 4 5<br>output<br>-1</p>
<h3 id="题解">题解</h3><p>给定基本货币面额，求解最小不能表示出的面额，都能表示输出“-1”；水题，就是看有没有1，有一就都能表示，没1那么1就是最小不能表示货币；</p>
<pre><code><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span>

<span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;

<span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{
    <span class="keyword">int</span> N;
    <span class="built_in">cin</span> &gt;&gt; N;
    <span class="keyword">int</span> res = <span class="number">1</span>;
    <span class="keyword">while</span>(N) 
    {
        <span class="keyword">int</span> v;
        <span class="built_in">cin</span> &gt;&gt; v;
        <span class="keyword">if</span>(v == <span class="number">1</span>) res = -<span class="number">1</span>;
        N--;
    }
    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; endl;
    <span class="keyword">return</span> <span class="number">0</span>;
          }
</code></pre><hr>
<h2 id="B-_Gerald_is_into_Art"><em><a href="http://codeforces.com/contest/560/problem/B" target="_blank" rel="external">B. Gerald is into Art</a></em></h2><p>Gerald bought two very rare paintings at the Sotheby’s auction and he now wants to hang them on the wall. For that he bought a special board to attach it to the wall and place the paintings on the board. The board has shape of an a1 × b1 rectangle, the paintings have shape of a a2 × b2 and a3 × b3 rectangles.</p>
<p>Since the paintings are painted in the style of abstract art, it does not matter exactly how they will be rotated, but still, one side of both the board, and each of the paintings must be parallel to the floor. The paintings can touch each other and the edges of the board, but can not overlap or go beyond the edge of the board. Gerald asks whether it is possible to place the paintings on the board, or is the board he bought not large enough?</p>
<p>Input<br>The first line contains two space-separated numbers a1 and b1 — the sides of the board. Next two lines contain numbers a2, b2, a3 and b3 — the sides of the paintings. All numbers ai, bi in the input are integers and fit into the range from 1 to 1000.</p>
<p>Output<br>If the paintings can be placed on the wall, print “YES” (without the quotes), and if they cannot, print “NO” (without the quotes).</p>
<p>Sample test(s)<br>input<br>3 2<br>1 3<br>2 1<br>output<br>YES<br>input<br>5 5<br>3 3<br>3 3<br>output<br>NO<br>input<br>4 2<br>2 3<br>1 2<br>output<br>YES</p>
<h2 id="题解-1">题解</h2><p>两幅画挂在黑板上，所有边必须各自平行，那么只要两幅画各选一条边相加小于黑板且两幅画其余边分别小于黑板另一条边即可；共有4*2=8种情况；</p>
<pre><code><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span>

<span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;

<span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>
</span>{
<span class="keyword">int</span> a1,a2,a3,b1,b2,b3;
<span class="built_in">cin</span>&gt;&gt;a1&gt;&gt;b1;
<span class="built_in">cin</span>&gt;&gt;a2&gt;&gt;b2;
<span class="built_in">cin</span>&gt;&gt;a3&gt;&gt;b3;
<span class="keyword">if</span>((a2+a3&lt;=a1&amp;&amp;b2&lt;=b1&amp;&amp;b3&lt;=b1)||(a2+a3&lt;=b1&amp;&amp;b2&lt;=a1&amp;&amp;b3&lt;=a1)||(a2+b3&lt;=a1&amp;&amp;a3&lt;=b1&amp;&amp;b2&lt;=b1)||(a2+b3&lt;=b1&amp;&amp;a3&lt;=a1&amp;&amp;b2&lt;=a1)||(b2+b3&lt;=a1&amp;&amp;a2&lt;=b1&amp;&amp;a3&lt;=b1)||(b2+b3&lt;=b1&amp;&amp;a2&lt;=a1&amp;&amp;a3&lt;=a1)||(a3+b2&lt;=a1&amp;&amp;b3&lt;=b1&amp;&amp;a2&lt;=b1)||(a3+b2&lt;=b1&amp;&amp;b3&lt;=a1&amp;&amp;a2&lt;=a1))

<span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;endl;
<span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;endl;
} 
</code></pre><hr>
<h2 id="C-_Gerald’s_Hexagon"><em><a href="http://codeforces.com/contest/560/problem/C" target="_blank" rel="external">C. Gerald’s Hexagon</a></em></h2><p>Gerald got a very curious hexagon for his birthday. The boy found out that all the angles of the hexagon are equal to . Then he measured the length of its sides, and found that each of them is equal to an integer number of centimeters. There the properties of the hexagon ended and Gerald decided to draw on it.</p>
<p>He painted a few lines, parallel to the sides of the hexagon. The lines split the hexagon into regular triangles with sides of 1 centimeter. Now Gerald wonders how many triangles he has got. But there were so many of them that Gerald lost the track of his counting. Help the boy count the triangles.</p>
<p>Input<br>The first and the single line of the input contains 6 space-separated integers a1, a2, a3, a4, a5 and a6 (1 ≤ ai ≤ 1000) — the lengths of the sides of the hexagons in centimeters in the clockwise order. It is guaranteed that the hexagon with the indicated properties and the exactly such sides exists.</p>
<p>Output<br>Print a single integer — the number of triangles with the sides of one 1 centimeter, into which the hexagon is split.</p>
<p>Sample test(s)<br>input<br>1 1 1 1 1 1<br>output<br>6<br>input<br>1 2 1 2 1 2<br>output<br>13</p>
<h3 id="题解-2">题解</h3><p>给出内角全为120度的六边形的六条边的边长，求由多少边长为1的等边三角形构成。<br>将六边形补全为一个大的等边三角形，则大的等边三角形的边长为六边形的相邻三边之和，接着减去补的部分，<br>补的部分是三个边长为认识3个不相邻的六边形边长的长度构成的等边三角形，边长为a的等边三角形，由a*a个边<br>长为1的小三角形构成。</p>
<pre><code><span class="preprocessor">#<span class="keyword">include</span>&lt;bits/stdc++.h&gt;</span>
<span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;
<span class="keyword">int</span> x[<span class="number">7</span>];
<span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>
</span>{
    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++) <span class="built_in">cin</span>&gt;&gt;x[i];
    <span class="built_in">cout</span>&lt;&lt;(x[<span class="number">0</span>]+x[<span class="number">1</span>]+x[<span class="number">2</span>])*(x[<span class="number">0</span>]+x[<span class="number">1</span>]+x[<span class="number">2</span>])-x[<span class="number">0</span>]*x[<span class="number">0</span>]-x[<span class="number">2</span>]*x[<span class="number">2</span>]-x[<span class="number">4</span>]*x[<span class="number">4</span>];
    <span class="keyword">return</span> <span class="number">0</span>;
}
</code></pre><hr>
<h2 id="D-_Equivalent_Strings"><em><a href="http://codeforces.com/contest/560/problem/d" target="_blank" rel="external">D. Equivalent Strings</a></em></h2><p>Today on a lecture about strings Gerald learned a new definition of string equivalency. Two strings a and b of equal length are called equivalent in one of the two cases:</p>
<p>They are equal.<br>If we split string a into two halves of the same size a1 and a2, and string b into two halves of the same size b1 and b2, then one of the following is correct:<br>a1 is equivalent to b1, and a2 is equivalent to b2<br>a1 is equivalent to b2, and a2 is equivalent to b1<br>As a home task, the teacher gave two strings to his students and asked to determine if they are equivalent.</p>
<p>Gerald has already completed this home task. Now it’s your turn!</p>
<p>Input<br>The first two lines of the input contain two strings given by the teacher. Each of them has the length from 1 to 200 000 and consists of lowercase English letters. The strings have the same length.</p>
<p>Output<br>Print “YES” (without the quotes), if these two strings are equivalent, and “NO” (without the quotes) otherwise.</p>
<p>Sample test(s)<br>input<br>aaba<br>abaa<br>output<br>YES<br>input<br>aabb<br>abab<br>output<br>NO<br>Note<br>In the first sample you should split the first string into strings “aa” and “ba”, the second one — into strings “ab” and “aa”. “aa” is equivalent to “aa”; “ab” is equivalent to “ba” as “ab” = “a” + “b”, “ba” = “b” + “a”.</p>
<p>In the second sample the first string can be splitted into strings “aa” and “bb”, that are equivalent only to themselves. That’s why string “aabb” is equivalent only to itself and to string “bbaa”.</p>
<h3 id="题解-3">题解</h3><p> 判断两个字符串是否<em>相等</em> 定义</p>
<ul>
<li>两个串完全相同</li>
<li><p>如果两个串长度相同且都为偶数，都分成两半。满足以下任一条件：</p>
<ol>
<li>a1<em>相等</em>b2&amp;&amp;a2<em>相等</em>b1</li>
<li>a1<em>相等</em>b1&amp;&amp;a2<em>相等</em>b2  </li>
</ol>
<p>如果字符串是奇数长度，<em>相等</em>只可能是真的==<br>码代码的时候逗比了，想成是串里每个字母的出现数量相等了，没有看清<em>相等</em>的含义，GG了；<br>两种搞法：</p>
</li>
<li>递归，一层层往里搜，奇数串特判，满足条件return；</li>
<li>还是递归，不过是处理字符串，总是把小的字符串摆在前面，最后统一比较；<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">smallest</span><span class="params">(<span class="built_in">string</span> s)</span> </span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (s.length() % <span class="number">2</span> == <span class="number">1</span>) <span class="keyword">return</span> s;</span><br><span class="line">	<span class="built_in">string</span> s1 = smallest(s.substr(<span class="number">0</span>, s.length()/<span class="number">2</span>));</span><br><span class="line">	<span class="built_in">string</span> s2 = smallest(s.substr(s.length()/<span class="number">2</span>, s.length()));</span><br><span class="line">	<span class="keyword">if</span> (s1 &lt; s2) <span class="keyword">return</span> s1 + s2;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> s2 + s1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="built_in">string</span> a, b;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line">	<span class="keyword">if</span>(smallest(a) == smallest(b)) <span class="built_in">cout</span> &lt;&lt; <span class="string">"YES"</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"NO"</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
上面代码短不好想，下面代码长容易出，另：<blockquote>
<p>n&amp;1 代表按位与0000000 00000001 n最右为1就是1 等价于 n%2==1 都是表示奇数  </p>
</blockquote>
</li>
</ul>
<h2 id="<!-￼1->"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;set&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;map&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;sstream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> __int64 LL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x4ffffff</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> EXP = <span class="number">1E-5</span>;</span><br><span class="line"><span class="keyword">const</span> LL mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MS= <span class="number">200005</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">equals</span><span class="params">(<span class="built_in">string</span> s1,<span class="built_in">string</span> s2)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	  <span class="keyword">int</span> len1 = s1.size();</span><br><span class="line">	  <span class="keyword">int</span> len2 = s2.size();</span><br><span class="line">	  <span class="keyword">if</span>(s1 == s2)</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	  <span class="keyword">else</span> <span class="keyword">if</span>(len1!= len2 || len1&amp;<span class="number">1</span> || len2 &amp; <span class="number">1</span>)</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">	  <span class="keyword">else</span></span><br><span class="line">	  &#123;</span><br><span class="line">			<span class="keyword">if</span>(equals(s1.substr(<span class="number">0</span>,len1/<span class="number">2</span>),s2.substr(len1/<span class="number">2</span>))&amp;&amp; equals(s1.substr(len1/<span class="number">2</span>),s2.substr(<span class="number">0</span>,len1/<span class="number">2</span>)))</span><br><span class="line">				  <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">			<span class="keyword">if</span>(equals(s1.substr(<span class="number">0</span>,len1/<span class="number">2</span>),s2.substr(<span class="number">0</span>,len1/<span class="number">2</span>))&amp;&amp; equals(s1.substr(len1/<span class="number">2</span>),s2.substr(len1/<span class="number">2</span>)))</span><br><span class="line">				  <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">	  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	  <span class="built_in">string</span> s1,s2;</span><br><span class="line">	  <span class="built_in">cin</span>&gt;&gt;s1&gt;&gt;s2;</span><br><span class="line">	  <span class="keyword">if</span>(equals(s1,s2))</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">	  <span class="keyword">else</span></span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">	  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="A-_Currency_System_in_Geraldion"><em><a href="http://codeforces.com/contest/560/problem/A">A. Currency System in Geraldion</a></em></h2><p>A magic island Geraldion, where Gerald lives, has its own currency system. It uses banknotes of several values. But the problem is, the system is not perfect and sometimes it happens that Geraldionians cannot express a certain sum of money with any set of banknotes. Of course, they can use any number of banknotes of each value. Such sum is called unfortunate. Gerald wondered: what is the minimum unfortunate sum?<br>]]>
    
    </summary>
    
      <category term="Codeforces" scheme="http://yoursite.com/tags/Codeforces/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Codeforces" scheme="http://yoursite.com/categories/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2015-Multi-University-Training-Contest-1 1002]]></title>
    <link href="http://yoursite.com/2015/07/23/2015-Multi-University-Training-Contest-1-1002/"/>
    <id>http://yoursite.com/2015/07/23/2015-Multi-University-Training-Contest-1-1002/</id>
    <published>2015-07-23T15:17:46.000Z</published>
    <updated>2015-07-23T15:26:42.983Z</updated>
    <content type="html"><![CDATA[<h2 id="1002">1002</h2><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5289" target="_blank" rel="external">Assignment</a></p>
<p>Problem Description<br>Tom owns a company and he is the boss. There are n staffs which are numbered from 1 to n in this company, and every staff has a ability. Now, Tom is going to assign a special task to some staffs who were in the same group. In a group, the difference of the ability of any two staff is less than k, and their numbers are continuous. Tom want to know the number of groups like this.</p>
<p>Input<br>In the first line a number T indicates the number of test cases. Then for each case the first line contain 2 numbers n, k (1&lt;=n&lt;=100000, 0&lt;k&lt;=10^9),indicate the company has n persons, k means the maximum difference between abilities of staff in a group is less than k. The second line contains n integers:a[1],a[2],…,a<a href="0&lt;=a[i]&lt;=10^9">n</a>,indicate the i-th staff’s ability.</p>
<p>Output<br>For each test，output the number of groups.</p>
 <a id="more"></a>
<p>Sample Input<br>2<br>4 2<br>3 1 2 4<br>10 5<br>0 3 4 5 2 1 6 7 8 9</p>
<p>Sample Output<br>5<br>28<br>Hint<br>First Sample, the satisfied groups include:[1,1]、[2,2]、[3,3]、[4,4] 、[2,3] </p>
<h3 id="题解">题解</h3><p>给出一列数，找出连续的区间，区间内最大最小值严格小于k,同样由于数据太多暴力搞容易T，两种解法：</p>
<ul>
<li>单调队列，维护两个队列，一个连续更新最大，一个连续更新最小，从左往右搜索，连续变动区间。</li>
<li>枚举左端点，搜索右端点，用（ST算法）RMQ求区间最值。<figure class="highlight cpp"><figcaption><span>维护单调队列最值</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;cstdlib&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;vector&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;queue&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;set&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;map&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100007</span>;</span><br><span class="line"><span class="keyword">struct</span> Node</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> val,pos;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> n,K;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="built_in">deque</span>&lt;Node&gt; q1,q2;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> t;</span><br><span class="line">   <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">   <span class="keyword">while</span>(t--)</span><br><span class="line">   &#123;</span><br><span class="line">       ans=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">while</span>(!q1.empty())   q1.pop_back();</span><br><span class="line">       <span class="keyword">while</span>(!q2.empty())    q2.pop_back();<span class="comment">//清空q1,q2；</span></span><br><span class="line">       <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;K;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">       <span class="keyword">int</span> head=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">       &#123;</span><br><span class="line">           Node node=(Node)&#123;a[i],i&#125;;</span><br><span class="line">           <span class="keyword">while</span>(!q1.empty())<span class="comment">//维护最大值</span></span><br><span class="line">           &#123;</span><br><span class="line">               Node b=q1.back();</span><br><span class="line">               <span class="keyword">if</span>(b.val&lt;node.val)   q1.pop_back();</span><br><span class="line">               <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           q1.push_back(node);</span><br><span class="line">           <span class="keyword">while</span>(!q2.empty())<span class="comment">//维护最小值</span></span><br><span class="line">           &#123;</span><br><span class="line">               Node b=q2.back();</span><br><span class="line">               <span class="keyword">if</span>(b.val&gt;node.val)   q2.pop_back();</span><br><span class="line">               <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           q2.push_back(node);</span><br><span class="line">           <span class="keyword">if</span>(i==<span class="number">0</span>)  ans++;</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">while</span>(<span class="number">1</span>)<span class="comment">//更新区间</span></span><br><span class="line">               &#123;</span><br><span class="line">                   Node big=q1.front();</span><br><span class="line">                   Node small=q2.front();</span><br><span class="line">                   <span class="keyword">if</span>(big.val-small.val&lt;K)  <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">else</span></span><br><span class="line">                   &#123;</span><br><span class="line">                       <span class="keyword">if</span>(small.pos&lt;big.pos)  &#123;head=small.pos+<span class="number">1</span>;    q2.pop_front();&#125;</span><br><span class="line">                       <span class="keyword">else</span>                   &#123;head=big.pos+<span class="number">1</span>;      q1.pop_front();&#125;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">               ans+=i-head+<span class="number">1</span>;<span class="comment">//head不动，往右一直变区间</span></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="RMQ算法"><strong><a href="http://blog.csdn.net/liang5630/article/details/7917702" target="_blank" rel="external">RMQ算法</a></strong></h2><figure class="highlight openscad"><figcaption><span>预处理</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">void RMQ<span class="params">(int num)</span> <span class="comment">//预处理-&gt;O(nlogn)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span><span class="params">(int j = <span class="number">1</span>; j &lt; <span class="number">20</span>; ++j)</span></span><br><span class="line">		<span class="keyword">for</span><span class="params">(int i = <span class="number">1</span>; i &lt;= num; ++i)</span></span><br><span class="line">			<span class="keyword">if</span><span class="params">(i + <span class="params">(<span class="number">1</span> &lt;&lt; j)</span> - <span class="number">1</span> &lt;= num)</span></span><br><span class="line">			&#123;</span><br><span class="line">				maxsum[i][j] = <span class="built_in">max</span><span class="params">(maxsum[i][j - <span class="number">1</span>], maxsum[i + <span class="params">(<span class="number">1</span> &lt;&lt; <span class="params">(j - <span class="number">1</span>)</span>)</span>][j - <span class="number">1</span>])</span>;</span><br><span class="line">				minsum[i][j] = <span class="built_in">min</span><span class="params">(minsum[i][j - <span class="number">1</span>], minsum[i + <span class="params">(<span class="number">1</span> &lt;&lt; <span class="params">(j - <span class="number">1</span>)</span>)</span>][j - <span class="number">1</span>])</span>;</span><br><span class="line">			&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight stata"><figcaption><span>区间最大值</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">int RMQ_max(int <span class="keyword">l</span>,int r)<span class="comment">//区间[l,r]内的最大值</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    int <span class="keyword">m</span>=(int)(<span class="literal">log</span>((r-<span class="keyword">l</span>+1)*1.0)/<span class="literal">log</span>(2.0));</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">max</span>(maxsum[<span class="keyword">l</span>][<span class="keyword">m</span>],maxsum[r-(1&lt;&lt;<span class="keyword">m</span>)+1][<span class="keyword">m</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="<!-￼3->"><figure class="highlight stata"><figcaption><span>区间最小值</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">int RMQ_min(int <span class="keyword">l</span>,int r)<span class="comment">//区间[l,r]内的最小值</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"> int <span class="keyword">m</span>=(int)(<span class="literal">log</span>((r-<span class="keyword">l</span>+1)*1.0)/<span class="literal">log</span>(2.0));</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">min</span>(minsum[<span class="keyword">l</span>][<span class="keyword">m</span>],minsum[r-(1&lt;&lt;<span class="keyword">m</span>)+1][<span class="keyword">m</span>]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h2 id="<!-￼4->"><figure class="highlight cpp"><figcaption><span>STRMQ枚举左结点寻找右结点</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cmath&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAX 100010  <span class="comment">//</span></span></span><br><span class="line"><span class="comment">//最小值数组minx，最大值数组maxn，数值数组w</span></span><br><span class="line"><span class="keyword">int</span> minsum[MAX][<span class="number">17</span>],maxsum[MAX][<span class="number">17</span>],w[MAX];</span><br><span class="line"><span class="keyword">int</span> n;<span class="comment">//数值的个数n，询问区间的个数q</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RMQ</span><span class="params">(<span class="keyword">int</span> num)</span> <span class="comment">//预处理-&gt;O(nlogn)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="comment">//初始化最值数组，注意下标从1开始</span></span><br><span class="line">        minsum[i][<span class="number">0</span>]=maxsum[i][<span class="number">0</span>]=w[i];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; <span class="number">20</span>; ++j)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= num; ++i)</span><br><span class="line">			<span class="keyword">if</span>(i + (<span class="number">1</span> &lt;&lt; j) - <span class="number">1</span> &lt;= num)</span><br><span class="line">			&#123;</span><br><span class="line">				maxsum[i][j] = max(maxsum[i][j - <span class="number">1</span>], maxsum[i + (<span class="number">1</span> &lt;&lt; (j - <span class="number">1</span>))][j - <span class="number">1</span>]);</span><br><span class="line">				minsum[i][j] = min(minsum[i][j - <span class="number">1</span>], minsum[i + (<span class="number">1</span> &lt;&lt; (j - <span class="number">1</span>))][j - <span class="number">1</span>]);</span><br><span class="line">			&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">RMQ_min</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span><span class="comment">//区间[l,r]内的最小值</span></span><br><span class="line"></span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">int</span> m=(<span class="keyword">int</span>)(<span class="built_in">log</span>((r-l+<span class="number">1</span>)*<span class="number">1.0</span>)/<span class="built_in">log</span>(<span class="number">2.0</span>));</span><br><span class="line">    <span class="keyword">return</span> min(minsum[l][m],minsum[r-(<span class="number">1</span>&lt;&lt;m)+<span class="number">1</span>][m]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">RMQ_max</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span><span class="comment">//区间[l,r]内的最大值</span></span><br><span class="line"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> m=(<span class="keyword">int</span>)(<span class="built_in">log</span>((r-l+<span class="number">1</span>)*<span class="number">1.0</span>)/<span class="built_in">log</span>(<span class="number">2.0</span>));</span><br><span class="line">    <span class="keyword">return</span> max(maxsum[l][m],maxsum[r-(<span class="number">1</span>&lt;&lt;m)+<span class="number">1</span>][m]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k,t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="comment">//注意下标从1开始</span></span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;w[i]);</span><br><span class="line">        RMQ(n);</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> cnt=<span class="number">0</span>;<span class="comment">//数据较大，int型会超，用long long</span></span><br><span class="line">        <span class="keyword">int</span> r=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="comment">//枚举区间左端点l</span></span><br><span class="line">        &#123;</span><br><span class="line">            r=min(r,n);</span><br><span class="line">            <span class="keyword">while</span>(RMQ_max(i,r)-RMQ_min(i,r)&lt;k&amp;&amp;r&lt;=n)<span class="comment">//寻找区间右端点r</span></span><br><span class="line">                r++;</span><br><span class="line">            cnt+=r-i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;cnt&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="1002">1002</h2><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5289">Assignment</a></p>
<p>Problem Description<br>Tom owns a company and he is the boss. There are n staffs which are numbered from 1 to n in this company, and every staff has a ability. Now, Tom is going to assign a special task to some staffs who were in the same group. In a group, the difference of the ability of any two staff is less than k, and their numbers are continuous. Tom want to know the number of groups like this.</p>
<p>Input<br>In the first line a number T indicates the number of test cases. Then for each case the first line contain 2 numbers n, k (1&lt;=n&lt;=100000, 0&lt;k&lt;=10^9),indicate the company has n persons, k means the maximum difference between abilities of staff in a group is less than k. The second line contains n integers:a[1],a[2],…,a<a href="0&lt;=a[i]&lt;=10^9">n</a>,indicate the i-th staff’s ability.</p>
<p>Output<br>For each test，output the number of groups.</p>]]>
    
    </summary>
    
      <category term="多校" scheme="http://yoursite.com/tags/%E5%A4%9A%E6%A0%A1/"/>
    
      <category term="题解" scheme="http://yoursite.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="多校" scheme="http://yoursite.com/categories/%E5%A4%9A%E6%A0%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2015 Multi-University Training Contest 1 1001]]></title>
    <link href="http://yoursite.com/2015/07/23/2015-Multi-University-Training-Contest-1%201001/"/>
    <id>http://yoursite.com/2015/07/23/2015-Multi-University-Training-Contest-1 1001/</id>
    <published>2015-07-23T13:24:05.000Z</published>
    <updated>2015-07-25T07:26:30.516Z</updated>
    <content type="html"><![CDATA[<h2 id="1001">1001</h2><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5288" target="_blank" rel="external">OO’s Sequence</a></p>
<p>Problem Description<br>   OO has got a array A of size n ,defined a function f(l,r) represent the number of i (l&lt;=i&lt;=r) , that there’s no j(l&lt;=j&lt;=r,j&lt;&gt;i) satisfy ai mod aj=0,now OO want to know<br>∑i=1n∑j=inf(i,j) mod （109+7）.<br><a id="more"></a><br>Input<br>   There are multiple test cases. Please process till EOF.<br>   In each test case:<br>   First line: an integer n(n&lt;=10^5)  indicating the size of array<br>   Second line:contain n numbers ai(0&lt;ai&lt;=10000)</p>
<p>Output<br>   For each tests: ouput a line contain a number ans.</p>
<p>Sample Input<br>5<br>1 2 3 4 5</p>
<p>Sample Output<br>23</p>
<h3 id="题解">题解</h3><p>给定一组数，枚举左右坐标，由于数据太大很容易T，应想到每个具体的数能够贡献的值。<br>定义两个数组l[i],r[i],表示第i个数左侧和右侧最接近它且值是a[i]因子的数字的位置，那么第<br>i个数能贡献的答案就是<strong>(r[i]-i)*(i-l[i])</strong>,因此每个数字都去枚举它的因子y，然后找到一个<br>值是y且最接近x的数，然后用他的位置更新一下L，R数组。可以预处理1~10000之内的因子。</p>
<figure class="highlight cpp"><figcaption><span>预处理</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;vector&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxn 100007</span></span><br><span class="line"><span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; head[maxn];</span><br><span class="line"><span class="keyword">int</span> pre[maxn];</span><br><span class="line"><span class="keyword">int</span> num[maxn];</span><br><span class="line"><span class="keyword">int</span> lef[maxn];</span><br><span class="line"><span class="keyword">int</span> righ[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10000</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        head[i].clear();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j*j&lt;=i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i%j==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                head[i].push_back(j);</span><br><span class="line">                head[i].push_back(i/j);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;num[i];</span><br><span class="line">        <span class="built_in">memset</span>(pre,<span class="number">0</span>,<span class="keyword">sizeof</span>(pre));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> u=num[i];</span><br><span class="line">            <span class="keyword">int</span> p=<span class="number">0</span>;</span><br><span class="line">             <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; head[u].size(); j++)</span><br><span class="line">                p = max(p,pre[head[u][j]]);</span><br><span class="line">            lef[i] = p;</span><br><span class="line">            pre[u] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(pre,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(pre));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;<span class="number">0</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> u=num[i];</span><br><span class="line">            <span class="keyword">int</span> p=n+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;head[u].size();j++)</span><br><span class="line">                p=min(p,pre[head[u][j]]);</span><br><span class="line">            righ[i]=p;</span><br><span class="line">            pre[u]=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>,l,r;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> mod=<span class="number">1000000007</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ans+=(<span class="keyword">long</span> <span class="keyword">long</span>)(i-lef[i])*(righ[i]-i);</span><br><span class="line">            ans%=mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><figcaption><span>左右更新LR</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;iostream&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cmath&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX=<span class="number">100000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> a[MAX],L[MAX],R[MAX],index[MAX];</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line">    </span>&#123;  <span class="keyword">int</span> n;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">            <span class="built_in">memset</span>(index,-<span class="number">1</span>,<span class="keyword">sizeof</span>(index));</span><br><span class="line">             <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> temp = <span class="built_in">sqrt</span>(<span class="number">1.0</span> * a[i]);</span><br><span class="line">            <span class="keyword">int</span> l = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= temp; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i] % j == <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(index[j] != -<span class="number">1</span>)</span><br><span class="line">                        l = max(index[j], l);</span><br><span class="line">                    <span class="keyword">if</span>(index[a[i] / j] != -<span class="number">1</span>)</span><br><span class="line">                        l = max(index[a[i] / j], l);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">                index[a[i]] = i;</span><br><span class="line">                L[i] = l;</span><br><span class="line">        &#125;</span><br><span class="line">              <span class="built_in">memset</span>(index, -<span class="number">1</span>, <span class="keyword">sizeof</span>(index));</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span> ;i--)&#123;</span><br><span class="line">                <span class="keyword">int</span> temp = <span class="built_in">sqrt</span>(<span class="number">1.0</span> * a[i]);</span><br><span class="line">                <span class="keyword">int</span> r = n + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= temp; j++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(a[i] % j == <span class="number">0</span>)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(index[j] != -<span class="number">1</span>)</span><br><span class="line">                            r = min(index[j], r);</span><br><span class="line">                        <span class="keyword">if</span>(index[a[i] / j] != -<span class="number">1</span>)</span><br><span class="line">                            r = min(index[a[i] / j], r);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                index[a[i]] = i;</span><br><span class="line">                R[i] = r;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                ans+=(<span class="keyword">long</span> <span class="keyword">long</span>)(i-L[i])*(R[i]-i);</span><br><span class="line">                ans%=mod;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="<!-￼2->"><figure class="highlight cpp"><figcaption><span>左右找倍数</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstdio&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;cstring&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;algorithm&gt;</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span>&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> maxs 111111</span></span><br><span class="line"><span class="keyword">int</span> l[maxs],r[maxs];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> pre[maxs],last[maxs];</span><br><span class="line"><span class="keyword">int</span> a[maxs];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">            l[i]=<span class="number">1</span>;</span><br><span class="line">            r[i]=n;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(pre,<span class="number">0</span>,<span class="keyword">sizeof</span>(pre));</span><br><span class="line">         <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=a[i];j&lt;=<span class="number">10000</span>;j+=a[i])</span><br><span class="line">                <span class="keyword">if</span>(pre[j]!=<span class="number">0</span>&amp;&amp;r[pre[j]]==n)<span class="comment">//如果已经出现并且在右边最近的因子还没有找到</span></span><br><span class="line">                r[pre[j]]=i-<span class="number">1</span>;</span><br><span class="line">            pre[a[i]]=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(pre,<span class="number">0</span>,<span class="keyword">sizeof</span>(pre));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;<span class="number">0</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=a[i];j&lt;=<span class="number">10000</span>;j+=a[i])</span><br><span class="line">                <span class="keyword">if</span>(pre[j]!=<span class="number">0</span>&amp;&amp;l[pre[j]]==<span class="number">1</span>)</span><br><span class="line">                l[pre[j]]=i+<span class="number">1</span>;</span><br><span class="line">            pre[a[i]]=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ans+=(<span class="keyword">long</span> <span class="keyword">long</span>)(i-l[i]+<span class="number">1</span>)*(r[i]-i+<span class="number">1</span>);</span><br><span class="line">            ans%=mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="1001">1001</h2><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5288">OO’s Sequence</a></p>
<p>Problem Description<br>   OO has got a array A of size n ,defined a function f(l,r) represent the number of i (l&lt;=i&lt;=r) , that there’s no j(l&lt;=j&lt;=r,j&lt;&gt;i) satisfy ai mod aj=0,now OO want to know<br>∑i=1n∑j=inf(i,j) mod （109+7）.<br>]]>
    
    </summary>
    
      <category term="多校" scheme="http://yoursite.com/tags/%E5%A4%9A%E6%A0%A1/"/>
    
      <category term="题解" scheme="http://yoursite.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="多校" scheme="http://yoursite.com/categories/%E5%A4%9A%E6%A0%A1/"/>
    
  </entry>
  
</feed>